{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * this plugin adds the keycompression-capabilities to rxdb\n * if you dont use this, ensure that you set disableKeyComression to false in your schema\n */\n\nimport { numberToLetter, trimDots, clone } from '../util';\nexport var KeyCompressor =\n/*#__PURE__*/\nfunction () {\n  function KeyCompressor(schema) {\n    this.schema = schema;\n  }\n\n  var _proto = KeyCompressor.prototype;\n  /**\n   * compress the keys of an object via the compression-table\n   */\n\n  _proto.compress = function compress(obj) {\n    if (!this.schema.doKeyCompression()) return obj;\n    return _compressObj(this, obj);\n  };\n\n  _proto._decompressObj = function _decompressObj(obj) {\n    var _this = this;\n\n    var reverseTable = this.reverseTable; // non-object\n\n    if (typeof obj !== 'object' || obj === null) return obj; // array\n\n    if (Array.isArray(obj)) return obj.map(function (item) {\n      return _this._decompressObj(item);\n    }); // object\n    else {\n        var ret = {};\n        Object.keys(obj).forEach(function (key) {\n          var replacedKey = key;\n          if ((key.startsWith('|') || key.startsWith('_')) && reverseTable[key]) replacedKey = reverseTable[key];\n          ret[replacedKey] = _this._decompressObj(obj[key]);\n        });\n        return ret;\n      }\n  };\n\n  _proto.decompress = function decompress(obj) {\n    if (!this.schema.doKeyCompression()) return obj;\n\n    var returnObj = this._decompressObj(obj);\n\n    return returnObj;\n  }\n  /**\n   * get the full compressed-key-path of a object-path\n   */\n  ;\n\n  _proto.transformKey = function transformKey(prePath, prePathCompressed, remainPathAr) {\n    var table = this.table;\n    prePath = trimDots(prePath);\n    prePathCompressed = trimDots(prePathCompressed);\n    var nextPath = remainPathAr.shift();\n    var nextFullPath = trimDots(prePath + '.' + nextPath);\n    if (table[nextFullPath]) prePathCompressed += '.' + table[nextFullPath];else prePathCompressed += '.' + nextPath;\n    if (remainPathAr.length > 0) return this.transformKey(nextFullPath, prePathCompressed, remainPathAr);else return trimDots(prePathCompressed);\n  }\n  /**\n   * replace the keys of a query-obj with the compressed keys\n   * @return compressed queryJSON\n   */\n  ;\n\n  _proto.compressQuery = function compressQuery(queryJSON) {\n    var _this2 = this;\n\n    if (!this.schema.doKeyCompression()) return queryJSON;\n    queryJSON = clone(queryJSON); // selector\n\n    var selector = {};\n    Object.keys(queryJSON.selector).forEach(function (key) {\n      var value = queryJSON.selector[key];\n\n      if (key.startsWith('$')) {\n        // $or, $not etc have different structure\n        var setObj = value.map(function (obj) {\n          var newObj = {};\n          Object.keys(obj).forEach(function (k) {\n            var transKey = _this2.transformKey('', '', k.split('.'));\n\n            newObj[transKey] = obj[k];\n          });\n          return newObj;\n        });\n        selector[key] = setObj;\n      } else {\n        var transKey = _this2.transformKey('', '', key.split('.'));\n\n        selector[transKey] = value;\n      }\n    });\n    queryJSON.selector = selector; // sort\n\n    if (queryJSON.sort) {\n      queryJSON.sort = queryJSON.sort.map(function (sortObj) {\n        var key = Object.keys(sortObj)[0];\n        var value = sortObj[key];\n        var ret = {};\n        ret[_this2.transformKey('', '', key.split('.'))] = value;\n        return ret;\n      });\n    }\n\n    return queryJSON;\n  };\n\n  _createClass(KeyCompressor, [{\n    key: \"table\",\n    get: function get() {\n      var _this3 = this;\n\n      if (!this._table) {\n        // create new table\n        var lastKeyNumber = 0;\n\n        var nextKey = function nextKey() {\n          lastKeyNumber++;\n          return numberToLetter(lastKeyNumber - 1);\n        };\n\n        this._table = {};\n        var jsonSchema = this.schema.normalized;\n\n        var propertiesToTable = function propertiesToTable(path, obj) {\n          Object.keys(obj).map(function (key) {\n            var propertyObj = obj[key];\n            var fullPath = key === 'properties' ? path : trimDots(path + '.' + key);\n            if (typeof propertyObj === 'object' && // do not add schema-attributes\n            !Array.isArray(propertyObj) && // do not use arrays\n            !_this3._table[fullPath] && fullPath !== '' && key.length > 3 && // do not compress short keys\n            !fullPath.startsWith('_') // _id/_rev etc should never be compressed\n            ) _this3._table[fullPath] = '|' + nextKey(); // primary-key is always compressed to _id\n\n            if (propertyObj.primary === true) _this3._table[fullPath] = '_id';\n            if (typeof propertyObj === 'object' && !Array.isArray(propertyObj)) propertiesToTable(fullPath, propertyObj);\n          });\n        };\n\n        propertiesToTable('', jsonSchema);\n      }\n\n      return this._table;\n    }\n  }, {\n    key: \"reverseTable\",\n    get: function get() {\n      var _this4 = this;\n\n      if (!this._reverseTable) {\n        var table = this.table;\n        this._reverseTable = {};\n        Object.keys(table).forEach(function (key) {\n          var value = table[key];\n          var fieldName = key.split('.').pop();\n          _this4._reverseTable[value] = fieldName;\n        });\n      }\n\n      return this._reverseTable;\n    }\n  }]);\n\n  return KeyCompressor;\n}();\n\nfunction _compressObj(keyCompressor, obj) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var ret = {};\n  if (typeof obj !== 'object' || obj === null) return obj;\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (o) {\n      return _compressObj(keyCompressor, o, trimDots(path + '.item'));\n    });\n  }\n\n  Object.keys(obj).forEach(function (key) {\n    var propertyObj = obj[key];\n    var fullPath = trimDots(path + '.' + key);\n    var replacedKey = keyCompressor.table[fullPath] ? keyCompressor.table[fullPath] : key;\n    var nextObj = propertyObj;\n    nextObj = _compressObj(keyCompressor, propertyObj, fullPath);\n    ret[replacedKey] = nextObj;\n  });\n  return ret;\n}\n\nexport function create(schema) {\n  return new KeyCompressor(schema);\n}\nexport var rxdb = true;\nexport var prototypes = {};\nexport var overwritable = {\n  createKeyCompressor: create\n};\nexport default {\n  rxdb: rxdb,\n  prototypes: prototypes,\n  overwritable: overwritable\n};","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/plugins/key-compression.js"],"names":["_createClass","numberToLetter","trimDots","clone","KeyCompressor","schema","_proto","prototype","compress","obj","doKeyCompression","_compressObj","_decompressObj","_this","reverseTable","Array","isArray","map","item","ret","Object","keys","forEach","key","replacedKey","startsWith","decompress","returnObj","transformKey","prePath","prePathCompressed","remainPathAr","table","nextPath","shift","nextFullPath","length","compressQuery","queryJSON","_this2","selector","value","setObj","newObj","k","transKey","split","sort","sortObj","get","_this3","_table","lastKeyNumber","nextKey","jsonSchema","normalized","propertiesToTable","path","propertyObj","fullPath","primary","_this4","_reverseTable","fieldName","pop","keyCompressor","arguments","undefined","o","nextObj","create","rxdb","prototypes","overwritable","createKeyCompressor"],"mappings":"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","sourcesContent":["import _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * this plugin adds the keycompression-capabilities to rxdb\n * if you dont use this, ensure that you set disableKeyComression to false in your schema\n */\nimport { numberToLetter, trimDots, clone } from '../util';\nexport var KeyCompressor = /*#__PURE__*/function () {\n  function KeyCompressor(schema) {\n    this.schema = schema;\n  }\n\n  var _proto = KeyCompressor.prototype;\n\n  /**\n   * compress the keys of an object via the compression-table\n   */\n  _proto.compress = function compress(obj) {\n    if (!this.schema.doKeyCompression()) return obj;\n    return _compressObj(this, obj);\n  };\n\n  _proto._decompressObj = function _decompressObj(obj) {\n    var _this = this;\n\n    var reverseTable = this.reverseTable; // non-object\n\n    if (typeof obj !== 'object' || obj === null) return obj; // array\n\n    if (Array.isArray(obj)) return obj.map(function (item) {\n      return _this._decompressObj(item);\n    }); // object\n    else {\n        var ret = {};\n        Object.keys(obj).forEach(function (key) {\n          var replacedKey = key;\n          if ((key.startsWith('|') || key.startsWith('_')) && reverseTable[key]) replacedKey = reverseTable[key];\n          ret[replacedKey] = _this._decompressObj(obj[key]);\n        });\n        return ret;\n      }\n  };\n\n  _proto.decompress = function decompress(obj) {\n    if (!this.schema.doKeyCompression()) return obj;\n\n    var returnObj = this._decompressObj(obj);\n\n    return returnObj;\n  }\n  /**\n   * get the full compressed-key-path of a object-path\n   */\n  ;\n\n  _proto.transformKey = function transformKey(prePath, prePathCompressed, remainPathAr) {\n    var table = this.table;\n    prePath = trimDots(prePath);\n    prePathCompressed = trimDots(prePathCompressed);\n    var nextPath = remainPathAr.shift();\n    var nextFullPath = trimDots(prePath + '.' + nextPath);\n    if (table[nextFullPath]) prePathCompressed += '.' + table[nextFullPath];else prePathCompressed += '.' + nextPath;\n    if (remainPathAr.length > 0) return this.transformKey(nextFullPath, prePathCompressed, remainPathAr);else return trimDots(prePathCompressed);\n  }\n  /**\n   * replace the keys of a query-obj with the compressed keys\n   * @return compressed queryJSON\n   */\n  ;\n\n  _proto.compressQuery = function compressQuery(queryJSON) {\n    var _this2 = this;\n\n    if (!this.schema.doKeyCompression()) return queryJSON;\n    queryJSON = clone(queryJSON); // selector\n\n    var selector = {};\n    Object.keys(queryJSON.selector).forEach(function (key) {\n      var value = queryJSON.selector[key];\n\n      if (key.startsWith('$')) {\n        // $or, $not etc have different structure\n        var setObj = value.map(function (obj) {\n          var newObj = {};\n          Object.keys(obj).forEach(function (k) {\n            var transKey = _this2.transformKey('', '', k.split('.'));\n\n            newObj[transKey] = obj[k];\n          });\n          return newObj;\n        });\n        selector[key] = setObj;\n      } else {\n        var transKey = _this2.transformKey('', '', key.split('.'));\n\n        selector[transKey] = value;\n      }\n    });\n    queryJSON.selector = selector; // sort\n\n    if (queryJSON.sort) {\n      queryJSON.sort = queryJSON.sort.map(function (sortObj) {\n        var key = Object.keys(sortObj)[0];\n        var value = sortObj[key];\n        var ret = {};\n        ret[_this2.transformKey('', '', key.split('.'))] = value;\n        return ret;\n      });\n    }\n\n    return queryJSON;\n  };\n\n  _createClass(KeyCompressor, [{\n    key: \"table\",\n    get: function get() {\n      var _this3 = this;\n\n      if (!this._table) {\n        // create new table\n        var lastKeyNumber = 0;\n\n        var nextKey = function nextKey() {\n          lastKeyNumber++;\n          return numberToLetter(lastKeyNumber - 1);\n        };\n\n        this._table = {};\n        var jsonSchema = this.schema.normalized;\n\n        var propertiesToTable = function propertiesToTable(path, obj) {\n          Object.keys(obj).map(function (key) {\n            var propertyObj = obj[key];\n            var fullPath = key === 'properties' ? path : trimDots(path + '.' + key);\n            if (typeof propertyObj === 'object' && // do not add schema-attributes\n            !Array.isArray(propertyObj) && // do not use arrays\n            !_this3._table[fullPath] && fullPath !== '' && key.length > 3 && // do not compress short keys\n            !fullPath.startsWith('_') // _id/_rev etc should never be compressed\n            ) _this3._table[fullPath] = '|' + nextKey(); // primary-key is always compressed to _id\n\n            if (propertyObj.primary === true) _this3._table[fullPath] = '_id';\n            if (typeof propertyObj === 'object' && !Array.isArray(propertyObj)) propertiesToTable(fullPath, propertyObj);\n          });\n        };\n\n        propertiesToTable('', jsonSchema);\n      }\n\n      return this._table;\n    }\n  }, {\n    key: \"reverseTable\",\n    get: function get() {\n      var _this4 = this;\n\n      if (!this._reverseTable) {\n        var table = this.table;\n        this._reverseTable = {};\n        Object.keys(table).forEach(function (key) {\n          var value = table[key];\n          var fieldName = key.split('.').pop();\n          _this4._reverseTable[value] = fieldName;\n        });\n      }\n\n      return this._reverseTable;\n    }\n  }]);\n\n  return KeyCompressor;\n}();\n\nfunction _compressObj(keyCompressor, obj) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var ret = {};\n  if (typeof obj !== 'object' || obj === null) return obj;\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (o) {\n      return _compressObj(keyCompressor, o, trimDots(path + '.item'));\n    });\n  }\n\n  Object.keys(obj).forEach(function (key) {\n    var propertyObj = obj[key];\n    var fullPath = trimDots(path + '.' + key);\n    var replacedKey = keyCompressor.table[fullPath] ? keyCompressor.table[fullPath] : key;\n    var nextObj = propertyObj;\n    nextObj = _compressObj(keyCompressor, propertyObj, fullPath);\n    ret[replacedKey] = nextObj;\n  });\n  return ret;\n}\n\nexport function create(schema) {\n  return new KeyCompressor(schema);\n}\nexport var rxdb = true;\nexport var prototypes = {};\nexport var overwritable = {\n  createKeyCompressor: create\n};\nexport default {\n  rxdb: rxdb,\n  prototypes: prototypes,\n  overwritable: overwritable\n};\n//# sourceMappingURL=key-compression.js.map"]},"metadata":{},"sourceType":"module"}