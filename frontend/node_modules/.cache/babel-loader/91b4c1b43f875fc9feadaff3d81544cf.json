{"ast":null,"code":"import { mustMigrate, createDataMigrator } from './data-migrator';\nexport var DATA_MIGRATOR_BY_COLLECTION = new WeakMap();\nexport var RxDBMigrationPlugin = {\n  name: 'migration',\n  rxdb: true,\n  prototypes: {\n    RxCollection: function RxCollection(proto) {\n      proto.getDataMigrator = function () {\n        if (!DATA_MIGRATOR_BY_COLLECTION.has(this)) {\n          DATA_MIGRATOR_BY_COLLECTION.set(this, createDataMigrator(this.asRxCollection, this.migrationStrategies));\n        }\n\n        return DATA_MIGRATOR_BY_COLLECTION.get(this);\n      };\n\n      proto.migrationNeeded = function () {\n        return mustMigrate(this.getDataMigrator());\n      };\n    }\n  }\n}; // used in tests\n\nexport { _getOldCollections, getBatchOfOldCollection, migrateDocumentData, _migrateDocument, deleteOldCollection, migrateOldCollection, migratePromise, DataMigrator } from './data-migrator';","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/plugins/migration/index.js"],"names":["mustMigrate","createDataMigrator","DATA_MIGRATOR_BY_COLLECTION","WeakMap","RxDBMigrationPlugin","name","rxdb","prototypes","RxCollection","proto","getDataMigrator","has","set","asRxCollection","migrationStrategies","get","migrationNeeded","_getOldCollections","getBatchOfOldCollection","migrateDocumentData","_migrateDocument","deleteOldCollection","migrateOldCollection","migratePromise","DataMigrator"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,kBAAtB,QAAgD,iBAAhD;AACA,OAAO,IAAIC,2BAA2B,GAAG,IAAIC,OAAJ,EAAlC;AACP,OAAO,IAAIC,mBAAmB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,WADyB;AAE/BC,EAAAA,IAAI,EAAE,IAFyB;AAG/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzCA,MAAAA,KAAK,CAACC,eAAN,GAAwB,YAAY;AAClC,YAAI,CAACR,2BAA2B,CAACS,GAA5B,CAAgC,IAAhC,CAAL,EAA4C;AAC1CT,UAAAA,2BAA2B,CAACU,GAA5B,CAAgC,IAAhC,EAAsCX,kBAAkB,CAAC,KAAKY,cAAN,EAAsB,KAAKC,mBAA3B,CAAxD;AACD;;AAED,eAAOZ,2BAA2B,CAACa,GAA5B,CAAgC,IAAhC,CAAP;AACD,OAND;;AAQAN,MAAAA,KAAK,CAACO,eAAN,GAAwB,YAAY;AAClC,eAAOhB,WAAW,CAAC,KAAKU,eAAL,EAAD,CAAlB;AACD,OAFD;AAGD;AAbS;AAHmB,CAA1B,C,CAkBJ;;AAEH,SAASO,kBAAT,EAA6BC,uBAA7B,EAAsDC,mBAAtD,EAA2EC,gBAA3E,EAA6FC,mBAA7F,EAAkHC,oBAAlH,EAAwIC,cAAxI,EAAwJC,YAAxJ,QAA4K,iBAA5K","sourcesContent":["import { mustMigrate, createDataMigrator } from './data-migrator';\nexport var DATA_MIGRATOR_BY_COLLECTION = new WeakMap();\nexport var RxDBMigrationPlugin = {\n  name: 'migration',\n  rxdb: true,\n  prototypes: {\n    RxCollection: function RxCollection(proto) {\n      proto.getDataMigrator = function () {\n        if (!DATA_MIGRATOR_BY_COLLECTION.has(this)) {\n          DATA_MIGRATOR_BY_COLLECTION.set(this, createDataMigrator(this.asRxCollection, this.migrationStrategies));\n        }\n\n        return DATA_MIGRATOR_BY_COLLECTION.get(this);\n      };\n\n      proto.migrationNeeded = function () {\n        return mustMigrate(this.getDataMigrator());\n      };\n    }\n  }\n}; // used in tests\n\nexport { _getOldCollections, getBatchOfOldCollection, migrateDocumentData, _migrateDocument, deleteOldCollection, migrateOldCollection, migratePromise, DataMigrator } from './data-migrator';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}