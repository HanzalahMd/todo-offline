{"ast":null,"code":"import inherits from 'inherits';\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n\n\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nexport { UNAUTHORIZED, MISSING_BULK_DOCS, MISSING_DOC, REV_CONFLICT, INVALID_ID, MISSING_ID, RESERVED_ID, NOT_OPEN, UNKNOWN_ERROR, BAD_ARG, INVALID_REQUEST, QUERY_PARSE_ERROR, DOC_VALIDATION, BAD_REQUEST, NOT_AN_OBJECT, DB_MISSING, WSQ_ERROR, LDB_ERROR, FORBIDDEN, INVALID_REV, FILE_EXISTS, MISSING_STUB, IDB_ERROR, INVALID_URL, createError, generateErrorFromResponse };","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/pouchdb-find/node_modules/pouchdb-errors/lib/index.es.js"],"names":["inherits","PouchError","Error","status","error","reason","call","name","message","prototype","toString","JSON","stringify","UNAUTHORIZED","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","MISSING_ID","RESERVED_ID","NOT_OPEN","UNKNOWN_ERROR","BAD_ARG","INVALID_REQUEST","QUERY_PARSE_ERROR","DOC_VALIDATION","BAD_REQUEST","NOT_AN_OBJECT","DB_MISSING","IDB_ERROR","WSQ_ERROR","LDB_ERROR","FORBIDDEN","INVALID_REV","FILE_EXISTS","MISSING_STUB","INVALID_URL","createError","CustomPouchError","p","undefined","generateErrorFromResponse","err","data"],"mappings":"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","sourcesContent":["import inherits from 'inherits';\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nexport { UNAUTHORIZED, MISSING_BULK_DOCS, MISSING_DOC, REV_CONFLICT, INVALID_ID, MISSING_ID, RESERVED_ID, NOT_OPEN, UNKNOWN_ERROR, BAD_ARG, INVALID_REQUEST, QUERY_PARSE_ERROR, DOC_VALIDATION, BAD_REQUEST, NOT_AN_OBJECT, DB_MISSING, WSQ_ERROR, LDB_ERROR, FORBIDDEN, INVALID_REV, FILE_EXISTS, MISSING_STUB, IDB_ERROR, INVALID_URL, createError, generateErrorFromResponse };\n"]},"metadata":{},"sourceType":"module"}