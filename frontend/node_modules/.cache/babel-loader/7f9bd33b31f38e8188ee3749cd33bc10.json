{"ast":null,"code":"import { RxCollectionBase } from '../../rx-collection';\nimport { RxDatabaseBase } from '../../rx-database';\nimport { createRxDocumentConstructor, basePrototype } from '../../rx-document';\n/**\n * returns all possible properties of a RxCollection-instance\n */\n\nvar _rxCollectionProperties;\n\nexport function rxCollectionProperties() {\n  if (!_rxCollectionProperties) {\n    var pseudoInstance = new RxCollectionBase();\n    var ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n    var prototypeProperties = Object.getOwnPropertyNames(Object.getPrototypeOf(pseudoInstance));\n    _rxCollectionProperties = [].concat(ownProperties, prototypeProperties);\n  }\n\n  return _rxCollectionProperties;\n}\n/**\n * returns all possible properties of a RxDatabase-instance\n */\n\nvar _rxDatabaseProperties;\n\nexport function rxDatabaseProperties() {\n  if (!_rxDatabaseProperties) {\n    // TODO instead of using the pseudoInstance,\n    // we should get the properties from the prototype of the class\n    var pseudoInstance = new RxDatabaseBase('pseudoInstance', 'memory');\n    var ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n    var prototypeProperties = Object.getOwnPropertyNames(Object.getPrototypeOf(pseudoInstance));\n    _rxDatabaseProperties = [].concat(ownProperties, prototypeProperties);\n    pseudoInstance.destroy();\n  }\n\n  return _rxDatabaseProperties;\n}\n/**\n * returns all possible properties of a RxDocument\n */\n\nvar pseudoConstructor = createRxDocumentConstructor(basePrototype);\nvar pseudoRxDocument = new pseudoConstructor();\n\nvar _rxDocumentProperties;\n\nexport function rxDocumentProperties() {\n  if (!_rxDocumentProperties) {\n    var reserved = ['deleted', 'synced'];\n    var ownProperties = Object.getOwnPropertyNames(pseudoRxDocument);\n    var prototypeProperties = Object.getOwnPropertyNames(basePrototype);\n    _rxDocumentProperties = [].concat(ownProperties, prototypeProperties, reserved);\n  }\n\n  return _rxDocumentProperties;\n}","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/plugins/dev-mode/entity-properties.js"],"names":["RxCollectionBase","RxDatabaseBase","createRxDocumentConstructor","basePrototype","_rxCollectionProperties","rxCollectionProperties","pseudoInstance","ownProperties","Object","getOwnPropertyNames","prototypeProperties","getPrototypeOf","concat","_rxDatabaseProperties","rxDatabaseProperties","destroy","pseudoConstructor","pseudoRxDocument","_rxDocumentProperties","rxDocumentProperties","reserved"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,qBAAjC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,2BAAT,EAAsCC,aAAtC,QAA2D,mBAA3D;AACA;;;;AAIA,IAAIC,uBAAJ;;AAEA,OAAO,SAASC,sBAAT,GAAkC;AACvC,MAAI,CAACD,uBAAL,EAA8B;AAC5B,QAAIE,cAAc,GAAG,IAAIN,gBAAJ,EAArB;AACA,QAAIO,aAAa,GAAGC,MAAM,CAACC,mBAAP,CAA2BH,cAA3B,CAApB;AACA,QAAII,mBAAmB,GAAGF,MAAM,CAACC,mBAAP,CAA2BD,MAAM,CAACG,cAAP,CAAsBL,cAAtB,CAA3B,CAA1B;AACAF,IAAAA,uBAAuB,GAAG,GAAGQ,MAAH,CAAUL,aAAV,EAAyBG,mBAAzB,CAA1B;AACD;;AAED,SAAON,uBAAP;AACD;AACD;;;;AAIA,IAAIS,qBAAJ;;AAEA,OAAO,SAASC,oBAAT,GAAgC;AACrC,MAAI,CAACD,qBAAL,EAA4B;AAC1B;AACA;AACA,QAAIP,cAAc,GAAG,IAAIL,cAAJ,CAAmB,gBAAnB,EAAqC,QAArC,CAArB;AACA,QAAIM,aAAa,GAAGC,MAAM,CAACC,mBAAP,CAA2BH,cAA3B,CAApB;AACA,QAAII,mBAAmB,GAAGF,MAAM,CAACC,mBAAP,CAA2BD,MAAM,CAACG,cAAP,CAAsBL,cAAtB,CAA3B,CAA1B;AACAO,IAAAA,qBAAqB,GAAG,GAAGD,MAAH,CAAUL,aAAV,EAAyBG,mBAAzB,CAAxB;AACAJ,IAAAA,cAAc,CAACS,OAAf;AACD;;AAED,SAAOF,qBAAP;AACD;AACD;;;;AAIA,IAAIG,iBAAiB,GAAGd,2BAA2B,CAACC,aAAD,CAAnD;AACA,IAAIc,gBAAgB,GAAG,IAAID,iBAAJ,EAAvB;;AAEA,IAAIE,qBAAJ;;AAEA,OAAO,SAASC,oBAAT,GAAgC;AACrC,MAAI,CAACD,qBAAL,EAA4B;AAC1B,QAAIE,QAAQ,GAAG,CAAC,SAAD,EAAY,QAAZ,CAAf;AACA,QAAIb,aAAa,GAAGC,MAAM,CAACC,mBAAP,CAA2BQ,gBAA3B,CAApB;AACA,QAAIP,mBAAmB,GAAGF,MAAM,CAACC,mBAAP,CAA2BN,aAA3B,CAA1B;AACAe,IAAAA,qBAAqB,GAAG,GAAGN,MAAH,CAAUL,aAAV,EAAyBG,mBAAzB,EAA8CU,QAA9C,CAAxB;AACD;;AAED,SAAOF,qBAAP;AACD","sourcesContent":["import { RxCollectionBase } from '../../rx-collection';\nimport { RxDatabaseBase } from '../../rx-database';\nimport { createRxDocumentConstructor, basePrototype } from '../../rx-document';\n/**\n * returns all possible properties of a RxCollection-instance\n */\n\nvar _rxCollectionProperties;\n\nexport function rxCollectionProperties() {\n  if (!_rxCollectionProperties) {\n    var pseudoInstance = new RxCollectionBase();\n    var ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n    var prototypeProperties = Object.getOwnPropertyNames(Object.getPrototypeOf(pseudoInstance));\n    _rxCollectionProperties = [].concat(ownProperties, prototypeProperties);\n  }\n\n  return _rxCollectionProperties;\n}\n/**\n * returns all possible properties of a RxDatabase-instance\n */\n\nvar _rxDatabaseProperties;\n\nexport function rxDatabaseProperties() {\n  if (!_rxDatabaseProperties) {\n    // TODO instead of using the pseudoInstance,\n    // we should get the properties from the prototype of the class\n    var pseudoInstance = new RxDatabaseBase('pseudoInstance', 'memory');\n    var ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n    var prototypeProperties = Object.getOwnPropertyNames(Object.getPrototypeOf(pseudoInstance));\n    _rxDatabaseProperties = [].concat(ownProperties, prototypeProperties);\n    pseudoInstance.destroy();\n  }\n\n  return _rxDatabaseProperties;\n}\n/**\n * returns all possible properties of a RxDocument\n */\n\nvar pseudoConstructor = createRxDocumentConstructor(basePrototype);\nvar pseudoRxDocument = new pseudoConstructor();\n\nvar _rxDocumentProperties;\n\nexport function rxDocumentProperties() {\n  if (!_rxDocumentProperties) {\n    var reserved = ['deleted', 'synced'];\n    var ownProperties = Object.getOwnPropertyNames(pseudoRxDocument);\n    var prototypeProperties = Object.getOwnPropertyNames(basePrototype);\n    _rxDocumentProperties = [].concat(ownProperties, prototypeProperties, reserved);\n  }\n\n  return _rxDocumentProperties;\n}\n//# sourceMappingURL=entity-properties.js.map"]},"metadata":{},"sourceType":"module"}