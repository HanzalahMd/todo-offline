{"ast":null,"code":"import { Map } from 'pouchdb-collections';\nimport getArguments from 'argsarray';\nimport { isDeleted, collectLeaves, collectConflicts, traverseRevTree, rootToLeaf, isLocalId } from 'pouchdb-merge';\nimport { MISSING_BULK_DOCS, MISSING_DOC, REV_CONFLICT, INVALID_ID, UNKNOWN_ERROR, QUERY_PARSE_ERROR, BAD_REQUEST, NOT_AN_OBJECT, INVALID_REV, createError } from 'pouchdb-errors';\nimport { clone, listenerCount, once, guardedConsole, rev, isRemote, pick, adapterFun, upsert, bulkGetShim, invalidIdError, nextTick, hasLocalStorage, assign } from 'pouchdb-utils';\nimport inherits from 'inherits';\nimport EE from 'events';\nimport { fetch } from 'pouchdb-fetch';\nimport pouchChangesFilter from 'pouchdb-changes-filter';\ninherits(Changes, EE);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes(db, opts, callback) {\n  EE.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n\n  function onDestroy() {\n    self.cancel();\n  }\n\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {\n      status: 'cancelled'\n    });\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\n\nChanges.prototype.cancel = function () {\n  this.isCancelled = true;\n\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\n\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{\n    rev: doc._rev\n  }];\n\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree).map(function (x) {\n      return {\n        rev: x.rev\n      };\n    });\n  }\n\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n\n  return change;\n}\n\nChanges.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n  /* istanbul ignore else */\n\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n  opts = clone(opts);\n\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n\n  if (!opts.since) {\n    opts.since = 0;\n  }\n\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {\n          status: 'cancelled'\n        });\n        return;\n      }\n\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn', 'The \"' + key + '\" option was passed in to changes/replicate, ' + 'but pouchdb-changes-filter plugin is not installed, so it ' + 'was ignored. Please install the plugin to enable filtering.');\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  } // 0 and 1 should return 1 document\n\n\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n\n\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n/*\n * A generic pouch adapter\n */\n\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n} // Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\n\n\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || results[0] && results[0].error) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0] : results);\n    }\n  };\n} // clean docs given to us by the user\n\n\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att], ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n} // compare two docs, first by _id then by _rev\n\n\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n} // for every node in a revision tree computes its distance from the closest\n// leaf\n\n\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n\n    if (prnt !== undefined) {\n      edges.push({\n        from: prnt,\n        to: rev$$1\n      });\n    }\n\n    return rev$$1;\n  });\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys = 'limit' in opts ? opts.keys.slice(opts.skip, opts.limit + opts.skip) : opts.skip > 0 ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n} // all compaction is done in a queue, to avoid attaching\n// too many listeners at once\n\n\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n\n      nextTick(function () {\n        self._compactionQueue.shift();\n\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' + 'names cannot start with \\'_\\'';\n  }\n\n  return false;\n}\n\ninherits(AbstractPouchDB, EE);\n\nfunction AbstractPouchDB() {\n  EE.call(this); // re-bind prototyped methods\n\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post = adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n\n  this.bulkDocs({\n    docs: [doc]\n  }, opts, yankError(callback, doc._id));\n});\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n\n  invalidIdError(doc._id);\n\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n\n  var self = this;\n\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {\n        ok: true,\n        id: doc._id,\n        rev: doc._rev\n      };\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({\n        docs: [doc]\n      }, opts, yankError(next, doc._id));\n    }\n  }\n});\nAbstractPouchDB.prototype.putAttachment = adapterFun('putAttachment', function (docId, attachmentId, rev$$1, blob, type) {\n  var api = this;\n\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  } // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n\n  /* istanbul ignore if */\n\n\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n    // create new doc\n\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({\n        _id: docId\n      });\n    } else {\n      throw err;\n    }\n  });\n});\nAbstractPouchDB.prototype.removeAttachment = adapterFun('removeAttachment', function (docId, attachmentId, rev$$1, callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n\n\n    if (!obj._attachments) {\n      return callback();\n    }\n\n    delete obj._attachments[attachmentId];\n\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n\n    self.put(obj, callback);\n  });\n});\nAbstractPouchDB.prototype.remove = adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {\n    _id: doc._id,\n    _rev: doc._rev || opts.rev\n  };\n  newDoc._deleted = true;\n\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n\n  this.bulkDocs({\n    docs: [newDoc]\n  }, opts, yankError(callback, newDoc._id));\n});\nAbstractPouchDB.prototype.revsDiff = adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new Map();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {\n        missing: []\n      });\n    }\n\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      var idx = missingForId.indexOf(rev$$1);\n\n      if (idx === -1) {\n        return;\n      }\n\n      missingForId.splice(idx, 1);\n      /* istanbul ignore if */\n\n      if (opts.status !== 'available') {\n        addToMissing(id, rev$$1);\n      }\n    }); // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {\n          missing: req[id]\n        });\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n}); // _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\n\nAbstractPouchDB.prototype.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n  bulkGetShim(this, opts, callback);\n}); // compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\n\nAbstractPouchDB.prototype.compactDocument = adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n\n    self._doCompaction(docId, revs, callback);\n  });\n}); // compact the whole database using single document\n// compaction\n\nAbstractPouchDB.prototype.compact = adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n  self._compactionQueue = self._compactionQueue || [];\n\n  self._compactionQueue.push({\n    opts: opts,\n    callback: callback\n  });\n\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\n\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {\n        ok: true\n      });\n    }).catch(callback);\n  }\n\n  self.changes(changesOpts).on('change', onChange).on('complete', onComplete).on('error', callback);\n};\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\n\n\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n\n  var leaves = [],\n      self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n\n    if (!count) {\n      return cb(null, result);\n    } // order with open_revs is unspecified\n\n\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n\n          if (!existing) {\n            result.push({\n              ok: doc\n            });\n          }\n        } else {\n          result.push({\n            missing: leaf\n          });\n        }\n\n        count--;\n\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i]; // looks like it's the only thing couchdb checks\n\n          if (!(typeof l === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n\n      var revNo = parseInt(splittedRev[0], 10);\n      var revHash = splittedRev[1];\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) {\n          return x.id;\n        }).indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === revNo - 1;\n\n        if (hashFoundAtRevPos || !path && hashIndex !== -1) {\n          path = currentPath;\n        }\n      }\n      /* istanbul ignore if */\n\n\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) {\n        return x.id;\n      }).indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: path.pos + path.ids.length - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n\n      if (opts.revs_info) {\n        var pos = path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n\n      if (count === 0) {\n        return cb(null, doc);\n      }\n\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n\n          if (! --count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n\n      cb(null, doc);\n    }\n  });\n}); // TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\n\nAbstractPouchDB.prototype.getAttachment = adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n\n      self._getAttachment(docId, attachmentId, res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\nAbstractPouchDB.prototype.allDocs = adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n\n    var incompatibleOpt = ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR, 'Query parameter `' + incompatibleOpt + '` is not compatible with multi-get'));\n      return;\n    }\n\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n\n      if (opts.keys.length === 0) {\n        return this._allDocs({\n          limit: 0\n        }, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {}; // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n\n  opts.return_docs = 'return_docs' in opts ? opts.return_docs : !opts.live;\n  return new Changes(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    } // assume we know better than the adapter, unless it informs us\n\n\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n/* istanbul ignore next */\n\nAbstractPouchDB.prototype.type = function () {\n  return typeof this._type === 'function' ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs = adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs); // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    } // add ids for error/conflict responses (not required for CouchDB)\n\n\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\nAbstractPouchDB.prototype.registerDependentDatabase = adapterFun('registerDependentDatabase', function (dependentDb, callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n\n  upsert(this, '_local/_pouch_dependentDbs', diffFun).then(function () {\n    callback(null, {\n      db: depDB\n    });\n  }).catch(callback);\n});\nAbstractPouchDB.prototype.destroy = adapterFun('destroy', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || {\n        'ok': true\n      });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else {\n        // no dependencies\n        return destroyDb();\n      }\n    }\n\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n\n      /* istanbul ignore next */\n      var trueName = usePrefix ? name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n\n  if (this.failed) {\n    while (fun = this.queue.shift()) {\n      fun(this.failed);\n    }\n  } else {\n    while (fun = this.queue.shift()) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) {\n    // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i]; // check for browsers that have been upgraded from websql-only to websql+idb\n\n      /* istanbul ignore if */\n\n      if (adapterName === 'idb' && 'websql' in adapters && hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' + ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName]; // if adapter is invalid, then an error will be thrown later\n\n  var usePrefix = adapter && 'use_prefix' in adapter ? adapter.use_prefix : true;\n  return {\n    name: usePrefix ? prefix + name : name,\n    adapter: adapterName\n  };\n} // OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\n\n\nfunction prepareForDestruction(self) {\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\n\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] || !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n  self.adapter = opts.adapter;\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n\n    prepareForDestruction(self);\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n}\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\nPouchDB.prefix = '_pouch_';\nvar eventEmitter = new EE();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EE.prototype).forEach(function (key) {\n    if (typeof EE.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  }); // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n\n  var destructListeners = Pouch._destructionListeners = new Map();\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n\n    destructListeners.get(db.name).push(db);\n  });\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n\n    dbList.splice(pos, 1);\n\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed', true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') {\n    // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) {\n      // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n\n  if (this.__defaults) {\n    PouchDB.__defaults = assign({}, this.__defaults);\n  }\n\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  }); // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n\n  PouchAlt.__defaults = assign({}, this.__defaults, defaultOpts);\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return fetch(url, opts);\n}; // managed automatically by set-version.js\n\n\nvar version = \"7.2.2\"; // TODO: remove from pouchdb-core (breaking)\n\nPouchDB.plugin(pouchChangesFilter);\nPouchDB.version = version;\nexport default PouchDB;","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/pouchdb-core/lib/index.es.js"],"names":["Map","getArguments","isDeleted","collectLeaves","collectConflicts","traverseRevTree","rootToLeaf","isLocalId","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","UNKNOWN_ERROR","QUERY_PARSE_ERROR","BAD_REQUEST","NOT_AN_OBJECT","INVALID_REV","createError","clone","listenerCount","once","guardedConsole","rev","isRemote","pick","adapterFun","upsert","bulkGetShim","invalidIdError","nextTick","hasLocalStorage","assign","inherits","EE","fetch","pouchChangesFilter","Changes","tryCatchInChangeListener","self","change","pending","lastSeq","emit","e","db","opts","callback","call","complete","err","resp","removeAllListeners","removeListener","onDestroy","on","cancel","onChange","isCancelled","promise","Promise","fulfill","reject","res","status","then","bind","result","taskqueue","isReady","addTask","failed","validateChanges","prototype","processChange","doc","metadata","changeList","_rev","style","rev_tree","map","x","id","changes","deleted","conflicts","_conflicts","length","PouchDB","_changesFilterPlugin","validate","doChanges","continuous","live","since","info","update_seq","normalize","shouldFilter","filter","forEach","key","descending","limit","newPromise","_changes","args","apply","compare","left","right","yankError","docId","results","error","cleanDocs","docs","i","_deleted","_attachments","atts","Object","keys","j","att","compareByIdThenRev","a","b","idCompare","_id","aStart","_revisions","start","bStart","computeHeight","revs","height","edges","isLeaf","pos","prnt","rev$$1","undefined","push","from","to","reverse","edge","Math","min","allDocsKeysParse","slice","skip","doNextCompaction","task","_compactionQueue","get","catch","last_seq","_compact","shift","attachmentNameError","name","charAt","AbstractPouchDB","p","post","Array","isArray","bulkDocs","put","cb","_putLocal","_removeLocal","force","transformForceOptionToNewEditsOption","putDoc","ok","parts","split","oldRevId","oldRevNum","parseInt","newRevNum","newRevId","ids","new_edits","next","_put","putAttachment","attachmentId","blob","type","api","createAttachment","prevrevpos","content_type","data","revpos","reason","message","removeAttachment","obj","remove","docOrId","optsOrRev","was_delete","newDoc","revsDiff","req","count","missing","addToMissing","revId","has","set","processDoc","missingForId","revHash","ctx","idx","indexOf","splice","_getRevisionTree","missingObj","value","bulkGet","compactDocument","maxHeight","revTree","candidates","_doCompaction","compact","changesOpts","return_docs","promises","row","onComplete","all","deltaFunc","_getLocal","leaves","finishOpenRevs","leaf","latest","attachments","binary","existing","l","open_revs","test","_get","revs_info","splittedRev","revNo","paths","path","currentPath","hashIndex","hashFoundAtRevPos","Error","indexOfRev","howMany","_revs_info","_getAttachment","stub","hasOwnProperty","getAttachment","Function","allDocs","start_key","startkey","end_key","endkey","TypeError","incompatibleOpt","_allDocs","close","_closed","_close","_info","db_name","auto_compaction","adapter","_type","attachmentError","sort","_bulkDocs","registerDependentDatabase","dependentDb","depDB","constructor","__opts","diffFun","dependentDbs","destroy","usePrefix","use_prefix","destroyDb","_destroy","_destroyed","localDoc","deletedMap","trueName","replace","RegExp","prefix","TaskQueue","queue","execute","fun","fail","ready","parseAdapter","match","adapters","preferredAdapters","adapterName","localStorage","prepareForDestruction","onDestroyed","from_constructor","onClosed","deterministic_revs","prefixedName","backend","_adapter","valid","eventEmitter","setUpEventEmitter","Pouch","destructListeners","_destructionListeners","onConstructorRef","onConstructorUnref","dbList","delete","onConstructorDestroyed","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","url","version"],"mappings":"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","sourcesContent":["import { Map } from 'pouchdb-collections';\nimport getArguments from 'argsarray';\nimport { isDeleted, collectLeaves, collectConflicts, traverseRevTree, rootToLeaf, isLocalId } from 'pouchdb-merge';\nimport { MISSING_BULK_DOCS, MISSING_DOC, REV_CONFLICT, INVALID_ID, UNKNOWN_ERROR, QUERY_PARSE_ERROR, BAD_REQUEST, NOT_AN_OBJECT, INVALID_REV, createError } from 'pouchdb-errors';\nimport { clone, listenerCount, once, guardedConsole, rev, isRemote, pick, adapterFun, upsert, bulkGetShim, invalidIdError, nextTick, hasLocalStorage, assign } from 'pouchdb-utils';\nimport inherits from 'inherits';\nimport EE from 'events';\nimport { fetch } from 'pouchdb-fetch';\nimport pouchChangesFilter from 'pouchdb-changes-filter';\n\ninherits(Changes, EE);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes(db, opts, callback) {\n  EE.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EE);\n\nfunction AbstractPouchDB() {\n  EE.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new Map();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGetShim(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EE();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EE.prototype).forEach(function (key) {\n    if (typeof EE.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new Map();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return fetch(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.2.2\";\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(pouchChangesFilter);\n\nPouchDB.version = version;\n\nexport default PouchDB;\n"]},"metadata":{},"sourceType":"module"}