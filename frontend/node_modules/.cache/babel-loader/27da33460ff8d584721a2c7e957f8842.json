{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nexport var UNKNOWN_VALUE = 'UNKNOWN';\nexport function lastOfArray(ar) {\n  return ar[ar.length - 1];\n}\n/**\n * @link https://stackoverflow.com/a/5915122\n */\n\nexport function randomOfArray(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\nexport function shuffleArray(arr) {\n  return arr.slice().sort(function () {\n    return Math.random() - 0.5;\n  });\n}\n/**\n * if the previous doc-data is unknown,\n * try to get it from previous results\n * @mutate the changeEvent of input\n */\n\nexport function tryToFillPreviousDoc(input) {\n  var prev = input.changeEvent.previous;\n\n  if (prev === UNKNOWN_VALUE) {\n    var id_1 = input.changeEvent.id;\n    var primary_1 = input.queryParams.primaryKey;\n\n    if (input.keyDocumentMap) {\n      var doc = input.keyDocumentMap.get(id_1);\n\n      if (doc) {\n        input.changeEvent.previous = doc;\n      }\n    } else {\n      var found = input.previousResults.find(function (item) {\n        return item[primary_1] === id_1;\n      });\n\n      if (found) {\n        input.changeEvent.previous = found;\n      }\n    }\n  }\n}\n/**\n * normalizes sort-field\n * in: '-age'\n * out: 'age'\n */\n\nexport function normalizeSortField(field) {\n  if (field.startsWith('-')) {\n    return field.substr(1);\n  } else {\n    return field;\n  }\n}\nexport function getSortFieldsOfQuery(query) {\n  if (!query.sort) {\n    // if no sort-order is set, use the primary key\n    return ['_id'];\n  }\n\n  return query.sort.map(function (maybeArray) {\n    if (Array.isArray(maybeArray)) {\n      return maybeArray[0].map(function (field) {\n        return normalizeSortField(field);\n      });\n    } else {\n      return normalizeSortField(maybeArray);\n    }\n  });\n}\n/**\n *  @link https://stackoverflow.com/a/1431113\n */\n\nexport function replaceCharAt(str, index, replacement) {\n  return str.substr(0, index) + replacement + str.substr(index + replacement.length);\n}\nexport function mapToObject(map) {\n  var ret = {};\n  map.forEach(function (value, key) {\n    ret[key] = value;\n  });\n  return ret;\n}\nexport function objectToMap(object) {\n  var ret = new Map();\n  Object.entries(object).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        k = _b[0],\n        v = _b[1];\n\n    ret.set(k, v);\n  });\n  return ret;\n}\nexport function cloneMap(map) {\n  var ret = new Map();\n  map.forEach(function (value, key) {\n    ret[key] = value;\n  });\n  return ret;\n}\nexport function mergeSets(sets) {\n  var ret = new Set();\n  sets.forEach(function (set) {\n    ret = new Set(__spread(ret, set));\n  });\n  return ret;\n}","map":{"version":3,"sources":["../../src/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nexport var UNKNOWN_VALUE = 'UNKNOWN';\nexport function lastOfArray(ar) {\n    return ar[ar.length - 1];\n}\n/**\n * @link https://stackoverflow.com/a/5915122\n */\nexport function randomOfArray(items) {\n    return items[Math.floor(Math.random() * items.length)];\n}\nexport function shuffleArray(arr) {\n    return arr.slice().sort(function () { return (Math.random() - 0.5); });\n}\n/**\n * if the previous doc-data is unknown,\n * try to get it from previous results\n * @mutate the changeEvent of input\n */\nexport function tryToFillPreviousDoc(input) {\n    var prev = input.changeEvent.previous;\n    if (prev === UNKNOWN_VALUE) {\n        var id_1 = input.changeEvent.id;\n        var primary_1 = input.queryParams.primaryKey;\n        if (input.keyDocumentMap) {\n            var doc = input.keyDocumentMap.get(id_1);\n            if (doc) {\n                input.changeEvent.previous = doc;\n            }\n        }\n        else {\n            var found = input.previousResults.find(function (item) { return item[primary_1] === id_1; });\n            if (found) {\n                input.changeEvent.previous = found;\n            }\n        }\n    }\n}\n/**\n * normalizes sort-field\n * in: '-age'\n * out: 'age'\n */\nexport function normalizeSortField(field) {\n    if (field.startsWith('-')) {\n        return field.substr(1);\n    }\n    else {\n        return field;\n    }\n}\nexport function getSortFieldsOfQuery(query) {\n    if (!query.sort) {\n        // if no sort-order is set, use the primary key\n        return ['_id'];\n    }\n    return query.sort.map(function (maybeArray) {\n        if (Array.isArray(maybeArray)) {\n            return maybeArray[0].map(function (field) { return normalizeSortField(field); });\n        }\n        else {\n            return normalizeSortField(maybeArray);\n        }\n    });\n}\n/**\n *  @link https://stackoverflow.com/a/1431113\n */\nexport function replaceCharAt(str, index, replacement) {\n    return str.substr(0, index) + replacement + str.substr(index + replacement.length);\n}\nexport function mapToObject(map) {\n    var ret = {};\n    map.forEach(function (value, key) {\n        ret[key] = value;\n    });\n    return ret;\n}\nexport function objectToMap(object) {\n    var ret = new Map();\n    Object.entries(object).forEach(function (_a) {\n        var _b = __read(_a, 2), k = _b[0], v = _b[1];\n        ret.set(k, v);\n    });\n    return ret;\n}\nexport function cloneMap(map) {\n    var ret = new Map();\n    map.forEach(function (value, key) {\n        ret[key] = value;\n    });\n    return ret;\n}\nexport function mergeSets(sets) {\n    var ret = new Set();\n    sets.forEach(function (set) {\n        ret = new Set(__spread(ret, set));\n    });\n    return ret;\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}