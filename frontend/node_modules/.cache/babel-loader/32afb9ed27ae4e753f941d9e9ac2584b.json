{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { LOCAL_PREFIX } from '../../util';\nimport { PLUGIN_IDENT, getDocFromPouchOrNull, wasRevisionfromPullReplication } from './helper';\n/**\n * when the replication starts,\n * we need a way to find out where it ended the last time.\n *\n * For push-replication, we use the pouchdb-sequence:\n * We get the documents newer then the last sequence-id\n * and push them to the server.\n *\n * For pull-replication, we use the last document we got from the server:\n * We send the last document to the queryBuilder()\n * and recieve newer documents sorted in a batch\n */\n//\n// things for the push-checkpoint\n//\n\nvar pushSequenceId = function pushSequenceId(endpointHash) {\n  return LOCAL_PREFIX + PLUGIN_IDENT + '-push-checkpoint-' + endpointHash;\n};\n/**\n * @return last sequence checkpoint\n */\n\n\nexport function getLastPushSequence(_x, _x2) {\n  return _getLastPushSequence.apply(this, arguments);\n}\n\nfunction _getLastPushSequence() {\n  _getLastPushSequence = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(collection, endpointHash) {\n    var doc;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getDocFromPouchOrNull(collection, pushSequenceId(endpointHash));\n\n          case 2:\n            doc = _context.sent;\n\n            if (doc) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", 0);\n\n          case 7:\n            return _context.abrupt(\"return\", doc.value);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getLastPushSequence.apply(this, arguments);\n}\n\nexport function setLastPushSequence(_x3, _x4, _x5) {\n  return _setLastPushSequence.apply(this, arguments);\n}\n\nfunction _setLastPushSequence() {\n  _setLastPushSequence = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(collection, endpointHash, seq) {\n    var _id, doc, res;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = pushSequenceId(endpointHash);\n            _context2.next = 3;\n            return getDocFromPouchOrNull(collection, _id);\n\n          case 3:\n            doc = _context2.sent;\n\n            if (!doc) {\n              doc = {\n                _id: _id,\n                value: seq\n              };\n            } else {\n              doc.value = seq;\n            }\n\n            _context2.next = 7;\n            return collection.pouch.put(doc);\n\n          case 7:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _setLastPushSequence.apply(this, arguments);\n}\n\nexport function getChangesSinceLastPushSequence(_x6, _x7, _x8) {\n  return _getChangesSinceLastPushSequence.apply(this, arguments);\n} //\n// things for pull-checkpoint\n//\n\nfunction _getChangesSinceLastPushSequence() {\n  _getChangesSinceLastPushSequence = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(collection, endpointHash, lastPulledRevField) {\n    var batchSize,\n        syncRevisions,\n        lastPushSequence,\n        retry,\n        changes,\n        filteredResults,\n        useResults,\n        docsSearch,\n        bulkGetDocs,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            batchSize = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : 10;\n            syncRevisions = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : false;\n            _context3.next = 4;\n            return getLastPushSequence(collection, endpointHash);\n\n          case 4:\n            lastPushSequence = _context3.sent;\n            retry = true;\n\n          case 6:\n            if (!retry) {\n              _context3.next = 21;\n              break;\n            }\n\n            _context3.next = 9;\n            return collection.pouch.changes({\n              since: lastPushSequence,\n              limit: batchSize,\n              include_docs: true // style: 'all_docs'\n\n            });\n\n          case 9:\n            changes = _context3.sent;\n            filteredResults = changes.results.filter(function (change) {\n              /**\n               * filter out changes with revisions resulting from the pull-stream\n               * so that they will not be upstreamed again\n               */\n              if (wasRevisionfromPullReplication(endpointHash, change.doc._rev)) return false;\n              if (change.doc[lastPulledRevField] === change.doc._rev) return false;\n              /**\n               * filter out internal docs\n               * that are used for views or indexes in pouchdb\n               */\n\n              if (change.id.startsWith('_design/')) return false;\n              return true;\n            });\n            useResults = filteredResults;\n\n            if (!(filteredResults.length > 0 && syncRevisions)) {\n              _context3.next = 18;\n              break;\n            }\n\n            docsSearch = filteredResults.map(function (result) {\n              return {\n                id: result.id,\n                rev: result.doc._rev\n              };\n            });\n            _context3.next = 16;\n            return collection.pouch.bulkGet({\n              docs: docsSearch,\n              revs: true,\n              latest: true\n            });\n\n          case 16:\n            bulkGetDocs = _context3.sent;\n            useResults = bulkGetDocs.results.map(function (result) {\n              return {\n                id: result.id,\n                doc: result.docs[0]['ok'],\n                deleted: result.docs[0]['ok']._deleted\n              };\n            });\n\n          case 18:\n            if (useResults.length === 0 && changes.results.length === batchSize) {\n              // no pushable docs found but also not reached the end -> re-run\n              lastPushSequence = changes.last_seq;\n              retry = true;\n            } else {\n              changes.results = useResults;\n              retry = false;\n            }\n\n            _context3.next = 6;\n            break;\n\n          case 21:\n            changes.results.forEach(function (change) {\n              change.doc = collection._handleFromPouch(change.doc);\n            });\n            return _context3.abrupt(\"return\", changes);\n\n          case 23:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getChangesSinceLastPushSequence.apply(this, arguments);\n}\n\nvar pullLastDocumentId = function pullLastDocumentId(endpointHash) {\n  return LOCAL_PREFIX + PLUGIN_IDENT + '-pull-checkpoint-' + endpointHash;\n};\n\nexport function getLastPullDocument(_x9, _x10) {\n  return _getLastPullDocument.apply(this, arguments);\n}\n\nfunction _getLastPullDocument() {\n  _getLastPullDocument = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(collection, endpointHash) {\n    var localDoc;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return getDocFromPouchOrNull(collection, pullLastDocumentId(endpointHash));\n\n          case 2:\n            localDoc = _context4.sent;\n\n            if (localDoc) {\n              _context4.next = 7;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", null);\n\n          case 7:\n            return _context4.abrupt(\"return\", localDoc.doc);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getLastPullDocument.apply(this, arguments);\n}\n\nexport function setLastPullDocument(_x11, _x12, _x13) {\n  return _setLastPullDocument.apply(this, arguments);\n}\n\nfunction _setLastPullDocument() {\n  _setLastPullDocument = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(collection, endpointHash, doc) {\n    var _id, localDoc;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _id = pullLastDocumentId(endpointHash);\n            _context5.next = 3;\n            return getDocFromPouchOrNull(collection, _id);\n\n          case 3:\n            localDoc = _context5.sent;\n\n            if (!localDoc) {\n              localDoc = {\n                _id: _id,\n                doc: doc\n              };\n            } else {\n              localDoc.doc = doc;\n            }\n\n            return _context5.abrupt(\"return\", collection.pouch.put(localDoc));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _setLastPullDocument.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/plugins/replication-graphql/crawling-checkpoint.js"],"names":["_regeneratorRuntime","_asyncToGenerator","LOCAL_PREFIX","PLUGIN_IDENT","getDocFromPouchOrNull","wasRevisionfromPullReplication","pushSequenceId","endpointHash","getLastPushSequence","_x","_x2","_getLastPushSequence","apply","arguments","mark","_callee","collection","doc","wrap","_callee$","_context","prev","next","sent","abrupt","value","stop","setLastPushSequence","_x3","_x4","_x5","_setLastPushSequence","_callee2","seq","_id","res","_callee2$","_context2","pouch","put","getChangesSinceLastPushSequence","_x6","_x7","_x8","_getChangesSinceLastPushSequence","_callee3","lastPulledRevField","batchSize","syncRevisions","lastPushSequence","retry","changes","filteredResults","useResults","docsSearch","bulkGetDocs","_args3","_callee3$","_context3","length","undefined","since","limit","include_docs","results","filter","change","_rev","id","startsWith","map","result","rev","bulkGet","docs","revs","latest","deleted","_deleted","last_seq","forEach","_handleFromPouch","pullLastDocumentId","getLastPullDocument","_x9","_x10","_getLastPullDocument","_callee4","localDoc","_callee4$","_context4","setLastPullDocument","_x11","_x12","_x13","_setLastPullDocument","_callee5","_callee5$","_context5"],"mappings":"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","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { LOCAL_PREFIX } from '../../util';\nimport { PLUGIN_IDENT, getDocFromPouchOrNull, wasRevisionfromPullReplication } from './helper';\n\n/**\n * when the replication starts,\n * we need a way to find out where it ended the last time.\n *\n * For push-replication, we use the pouchdb-sequence:\n * We get the documents newer then the last sequence-id\n * and push them to the server.\n *\n * For pull-replication, we use the last document we got from the server:\n * We send the last document to the queryBuilder()\n * and recieve newer documents sorted in a batch\n */\n//\n// things for the push-checkpoint\n//\nvar pushSequenceId = function pushSequenceId(endpointHash) {\n  return LOCAL_PREFIX + PLUGIN_IDENT + '-push-checkpoint-' + endpointHash;\n};\n/**\n * @return last sequence checkpoint\n */\n\n\nexport function getLastPushSequence(_x, _x2) {\n  return _getLastPushSequence.apply(this, arguments);\n}\n\nfunction _getLastPushSequence() {\n  _getLastPushSequence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(collection, endpointHash) {\n    var doc;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getDocFromPouchOrNull(collection, pushSequenceId(endpointHash));\n\n          case 2:\n            doc = _context.sent;\n\n            if (doc) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", 0);\n\n          case 7:\n            return _context.abrupt(\"return\", doc.value);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getLastPushSequence.apply(this, arguments);\n}\n\nexport function setLastPushSequence(_x3, _x4, _x5) {\n  return _setLastPushSequence.apply(this, arguments);\n}\n\nfunction _setLastPushSequence() {\n  _setLastPushSequence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collection, endpointHash, seq) {\n    var _id, doc, res;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = pushSequenceId(endpointHash);\n            _context2.next = 3;\n            return getDocFromPouchOrNull(collection, _id);\n\n          case 3:\n            doc = _context2.sent;\n\n            if (!doc) {\n              doc = {\n                _id: _id,\n                value: seq\n              };\n            } else {\n              doc.value = seq;\n            }\n\n            _context2.next = 7;\n            return collection.pouch.put(doc);\n\n          case 7:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _setLastPushSequence.apply(this, arguments);\n}\n\nexport function getChangesSinceLastPushSequence(_x6, _x7, _x8) {\n  return _getChangesSinceLastPushSequence.apply(this, arguments);\n} //\n// things for pull-checkpoint\n//\n\nfunction _getChangesSinceLastPushSequence() {\n  _getChangesSinceLastPushSequence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(collection, endpointHash, lastPulledRevField) {\n    var batchSize,\n        syncRevisions,\n        lastPushSequence,\n        retry,\n        changes,\n        filteredResults,\n        useResults,\n        docsSearch,\n        bulkGetDocs,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            batchSize = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : 10;\n            syncRevisions = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : false;\n            _context3.next = 4;\n            return getLastPushSequence(collection, endpointHash);\n\n          case 4:\n            lastPushSequence = _context3.sent;\n            retry = true;\n\n          case 6:\n            if (!retry) {\n              _context3.next = 21;\n              break;\n            }\n\n            _context3.next = 9;\n            return collection.pouch.changes({\n              since: lastPushSequence,\n              limit: batchSize,\n              include_docs: true // style: 'all_docs'\n\n            });\n\n          case 9:\n            changes = _context3.sent;\n            filteredResults = changes.results.filter(function (change) {\n              /**\n               * filter out changes with revisions resulting from the pull-stream\n               * so that they will not be upstreamed again\n               */\n              if (wasRevisionfromPullReplication(endpointHash, change.doc._rev)) return false;\n              if (change.doc[lastPulledRevField] === change.doc._rev) return false;\n              /**\n               * filter out internal docs\n               * that are used for views or indexes in pouchdb\n               */\n\n              if (change.id.startsWith('_design/')) return false;\n              return true;\n            });\n            useResults = filteredResults;\n\n            if (!(filteredResults.length > 0 && syncRevisions)) {\n              _context3.next = 18;\n              break;\n            }\n\n            docsSearch = filteredResults.map(function (result) {\n              return {\n                id: result.id,\n                rev: result.doc._rev\n              };\n            });\n            _context3.next = 16;\n            return collection.pouch.bulkGet({\n              docs: docsSearch,\n              revs: true,\n              latest: true\n            });\n\n          case 16:\n            bulkGetDocs = _context3.sent;\n            useResults = bulkGetDocs.results.map(function (result) {\n              return {\n                id: result.id,\n                doc: result.docs[0]['ok'],\n                deleted: result.docs[0]['ok']._deleted\n              };\n            });\n\n          case 18:\n            if (useResults.length === 0 && changes.results.length === batchSize) {\n              // no pushable docs found but also not reached the end -> re-run\n              lastPushSequence = changes.last_seq;\n              retry = true;\n            } else {\n              changes.results = useResults;\n              retry = false;\n            }\n\n            _context3.next = 6;\n            break;\n\n          case 21:\n            changes.results.forEach(function (change) {\n              change.doc = collection._handleFromPouch(change.doc);\n            });\n            return _context3.abrupt(\"return\", changes);\n\n          case 23:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getChangesSinceLastPushSequence.apply(this, arguments);\n}\n\nvar pullLastDocumentId = function pullLastDocumentId(endpointHash) {\n  return LOCAL_PREFIX + PLUGIN_IDENT + '-pull-checkpoint-' + endpointHash;\n};\n\nexport function getLastPullDocument(_x9, _x10) {\n  return _getLastPullDocument.apply(this, arguments);\n}\n\nfunction _getLastPullDocument() {\n  _getLastPullDocument = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(collection, endpointHash) {\n    var localDoc;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return getDocFromPouchOrNull(collection, pullLastDocumentId(endpointHash));\n\n          case 2:\n            localDoc = _context4.sent;\n\n            if (localDoc) {\n              _context4.next = 7;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", null);\n\n          case 7:\n            return _context4.abrupt(\"return\", localDoc.doc);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getLastPullDocument.apply(this, arguments);\n}\n\nexport function setLastPullDocument(_x11, _x12, _x13) {\n  return _setLastPullDocument.apply(this, arguments);\n}\n\nfunction _setLastPullDocument() {\n  _setLastPullDocument = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(collection, endpointHash, doc) {\n    var _id, localDoc;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _id = pullLastDocumentId(endpointHash);\n            _context5.next = 3;\n            return getDocFromPouchOrNull(collection, _id);\n\n          case 3:\n            localDoc = _context5.sent;\n\n            if (!localDoc) {\n              localDoc = {\n                _id: _id,\n                doc: doc\n              };\n            } else {\n              localDoc.doc = doc;\n            }\n\n            return _context5.abrupt(\"return\", collection.pouch.put(localDoc));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _setLastPullDocument.apply(this, arguments);\n}\n//# sourceMappingURL=crawling-checkpoint.js.map"]},"metadata":{},"sourceType":"module"}