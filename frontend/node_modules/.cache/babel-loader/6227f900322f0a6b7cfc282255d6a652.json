{"ast":null,"code":"/**\n * this is the main entry-point for custom builds\n * it can be used as standalone but is also used in the batteries-included main-export\n */\nimport './types/modules/crypto-js.d';\nimport './types/modules/graphql-client.d';\nimport './types/modules/mocha.parallel.d';\nimport './types/modules/modifiyjs.d';\nimport './types/modules/pouchdb-selector-core.d';\nimport './types/modules/random-token.d';\nexport { addRxPlugin } from './plugin';\nexport { PouchDB, validateCouchDBString, getBatch, countAllUndeleted } from './pouch-db';\nexport { createRxDatabase, removeRxDatabase, checkAdapter, isInstanceOf as isRxDatabase, dbCount, _collectionNamePrimary // used in tests\n} from './rx-database';\nexport { isInstanceOf as isRxCollection, create as _createRxCollection // used in tests\n} from './rx-collection';\nexport { isInstanceOf as isRxDocument } from './rx-document';\nexport { getDocumentOrmPrototype, getDocumentPrototype } from './rx-document-prototype-merge';\nexport { isInstanceOf as isRxQuery } from './rx-query';\nexport { isInstanceOf as isRxSchema, createRxSchema, RxSchema, getIndexes, normalize, getFinalFields, getPreviousVersions } from './rx-schema';\nexport { RxChangeEvent } from './rx-change-event';\nexport { getRxStoragePouchDb, getPouchLocation } from './rx-storage-pouchdb';\nexport { _clearHook // used in tests\n} from './hooks';\nexport { createCrypter // used in tests\n} from './crypter';\nexport * from './query-cache';\nexport * from './util'; // TODO how to do 'export type * ..' ?","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/core.js"],"names":["addRxPlugin","PouchDB","validateCouchDBString","getBatch","countAllUndeleted","createRxDatabase","removeRxDatabase","checkAdapter","isInstanceOf","isRxDatabase","dbCount","_collectionNamePrimary","isRxCollection","create","_createRxCollection","isRxDocument","getDocumentOrmPrototype","getDocumentPrototype","isRxQuery","isRxSchema","createRxSchema","RxSchema","getIndexes","normalize","getFinalFields","getPreviousVersions","RxChangeEvent","getRxStoragePouchDb","getPouchLocation","_clearHook","createCrypter"],"mappings":"AAAA;;;;AAIA,OAAO,6BAAP;AACA,OAAO,kCAAP;AACA,OAAO,kCAAP;AACA,OAAO,6BAAP;AACA,OAAO,yCAAP;AACA,OAAO,gCAAP;AACA,SAASA,WAAT,QAA4B,UAA5B;AACA,SAASC,OAAT,EAAkBC,qBAAlB,EAAyCC,QAAzC,EAAmDC,iBAAnD,QAA4E,YAA5E;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,YAA7C,EAA2DC,YAAY,IAAIC,YAA3E,EAAyFC,OAAzF,EAAkGC,sBAAlG,CAAyH;AAAzH,OACO,eADP;AAEA,SAASH,YAAY,IAAII,cAAzB,EAAyCC,MAAM,IAAIC,mBAAnD,CAAuE;AAAvE,OACO,iBADP;AAEA,SAASN,YAAY,IAAIO,YAAzB,QAA6C,eAA7C;AACA,SAASC,uBAAT,EAAkCC,oBAAlC,QAA8D,+BAA9D;AACA,SAAST,YAAY,IAAIU,SAAzB,QAA0C,YAA1C;AACA,SAASV,YAAY,IAAIW,UAAzB,EAAqCC,cAArC,EAAqDC,QAArD,EAA+DC,UAA/D,EAA2EC,SAA3E,EAAsFC,cAAtF,EAAsGC,mBAAtG,QAAiI,aAAjI;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,sBAAtD;AACA,SAASC,UAAT,CAAoB;AAApB,OACO,SADP;AAEA,SAASC,aAAT,CAAuB;AAAvB,OACO,WADP;AAEA,cAAc,eAAd;AACA,cAAc,QAAd,C,CAAwB","sourcesContent":["/**\n * this is the main entry-point for custom builds\n * it can be used as standalone but is also used in the batteries-included main-export\n */\nimport './types/modules/crypto-js.d';\nimport './types/modules/graphql-client.d';\nimport './types/modules/mocha.parallel.d';\nimport './types/modules/modifiyjs.d';\nimport './types/modules/pouchdb-selector-core.d';\nimport './types/modules/random-token.d';\nexport { addRxPlugin } from './plugin';\nexport { PouchDB, validateCouchDBString, getBatch, countAllUndeleted } from './pouch-db';\nexport { createRxDatabase, removeRxDatabase, checkAdapter, isInstanceOf as isRxDatabase, dbCount, _collectionNamePrimary // used in tests\n} from './rx-database';\nexport { isInstanceOf as isRxCollection, create as _createRxCollection // used in tests\n} from './rx-collection';\nexport { isInstanceOf as isRxDocument } from './rx-document';\nexport { getDocumentOrmPrototype, getDocumentPrototype } from './rx-document-prototype-merge';\nexport { isInstanceOf as isRxQuery } from './rx-query';\nexport { isInstanceOf as isRxSchema, createRxSchema, RxSchema, getIndexes, normalize, getFinalFields, getPreviousVersions } from './rx-schema';\nexport { RxChangeEvent } from './rx-change-event';\nexport { getRxStoragePouchDb, getPouchLocation } from './rx-storage-pouchdb';\nexport { _clearHook // used in tests\n} from './hooks';\nexport { createCrypter // used in tests\n} from './crypter';\nexport * from './query-cache';\nexport * from './util'; // TODO how to do 'export type * ..' ?\n//# sourceMappingURL=core.js.map"]},"metadata":{},"sourceType":"module"}