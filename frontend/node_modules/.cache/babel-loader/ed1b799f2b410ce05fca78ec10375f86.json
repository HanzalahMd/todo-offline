{"ast":null,"code":"/**\n * this plugin adds the error-messages\n * without it, only error-codes will be shown\n * This is mainly because error-string are hard to compress and we need a smaller build\n */\nvar CODES = {\n  // util.js\n  UT1: 'given name is no string or empty',\n  UT2: \"collection- and database-names must match the regex\\n    info: if your database-name specifies a folder, the name must contain the slash-char '/' or '\\\\'\",\n  UT3: 'replication-direction must either be push or pull or both. But not none',\n  UT4: 'given leveldown is no valid adapter',\n  // pouch-db.js\n  P1: 'PouchDB.getBatch: limit must be > 2',\n  // rx-query\n  QU1: 'RxQuery._execOverDatabase(): op not known',\n  QU2: 'limit() must get a number',\n  QU3: 'skip() must get a number',\n  QU4: 'RxQuery.regex(): You cannot use .regex() on the primary field',\n  QU5: 'RxQuery.sort(): does not work because key is not defined in the schema',\n  QU6: 'RxQuery.limit(): cannot be called on .findOne()',\n  QU7: 'query must be an object',\n  QU8: 'query cannot be an array',\n  // mquery.js\n  MQ1: 'path must be a string or object',\n  MQ2: 'Invalid argument',\n  MQ3: 'Invalid sort() argument. Must be a string, object, or array',\n  MQ4: 'Invalid argument. Expected instanceof mquery or plain object',\n  MQ5: 'method must be used after where() when called with these arguments',\n  MQ6: 'Can\\'t mix sort syntaxes. Use either array or object | .sort([[\\'field\\', 1], [\\'test\\', -1]]) | .sort({ field: 1, test: -1 })',\n  MQ7: 'Invalid sort value',\n  MQ8: 'Can\\'t mix sort syntaxes. Use either array or object',\n  // rx-database\n  DB1: 'RxDocument.prepare(): another instance on this adapter has a different password',\n  DB2: 'RxDatabase.collection(): collection-names cannot start with underscore _',\n  DB3: 'RxDatabase.collection(): collection already exists. use myDatabase.[collectionName] to get it',\n  DB4: 'RxDatabase.collection(): schema is missing',\n  DB5: 'RxDatabase.collection(): collection-name not allowed',\n  DB6: 'RxDatabase.collection(): another instance created this collection with a different schema. Read this https://pubkey.github.io/rxdb/questions-answers.html#cant-change-the-schema',\n  DB7: 'RxDatabase.collection(): schema encrypted but no password given',\n  DB8: 'RxDatabase.create(): A RxDatabase with the same name and adapter already exists.\\n' + 'Make sure to use this combination only once or set ignoreDuplicate to true if you do this intentional',\n  DB9: 'RxDatabase.create(): Adapter not added. Use RxDB.plugin(require(\\'pouchdb-adapter-[adaptername]\\');',\n  DB10: 'RxDatabase.create(): To use leveldown-adapters, you have to add the leveldb-plugin. Use RxDB.plugin(require(\\'pouchdb-adapter-leveldb\\'));',\n  // rx-collection\n  COL1: 'RxDocument.insert() You cannot insert an existing document',\n  COL2: 'RxCollection.insert() do not provide ._id when it is not the primary key',\n  COL3: 'RxCollection.upsert() does not work without primary',\n  COL4: 'RxCollection.atomicUpsert() does not work without primary',\n  COL5: 'RxCollection.find() if you want to search by _id, use .findOne(_id)',\n  COL6: 'RxCollection.findOne() needs a queryObject or string',\n  COL7: 'hook must be a function',\n  COL8: 'hooks-when not known',\n  COL9: 'RxCollection.addHook() hook-name not known',\n  COL10: 'RxCollection .postCreate-hooks cannot be async',\n  COL11: 'migrationStrategies must be an object',\n  COL12: 'A migrationStrategy is missing or too much',\n  COL13: 'migrationStrategy must be a function',\n  COL14: 'given static method-name is not a string',\n  COL15: 'static method-names cannot start with underscore _',\n  COL16: 'given static method is not a function',\n  COL17: 'RxCollection.ORM: statics-name not allowed',\n  COL18: 'collection-method not allowed because fieldname is in the schema',\n  COL19: 'Pouchdb document update conflict',\n  // rx-document.js\n  DOC1: 'RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed',\n  DOC2: 'cannot observe primary path',\n  DOC3: 'final fields cannot be observed',\n  DOC4: 'RxDocument.get$ cannot observe a non-existed field',\n  DOC5: 'RxDocument.populate() cannot populate a non-existed field',\n  DOC6: 'RxDocument.populate() cannot populate because path has no ref',\n  DOC7: 'RxDocument.populate() ref-collection not in database',\n  DOC8: 'RxDocument.set(): primary-key cannot be modified',\n  DOC9: 'final fields cannot be modified',\n  DOC10: 'RxDocument.set(): cannot set childpath when rootPath not selected',\n  DOC11: 'RxDocument.save(): cant save deleted document',\n  DOC12: 'RxDocument.save(): error',\n  DOC13: 'RxDocument.remove(): Document is already deleted',\n  DOC14: 'RxDocument.destroy() does not exist',\n  DOC15: 'query cannot be an array',\n  DOC16: 'Since version 8.0.0 RxDocument.set() can only be called on temporary RxDocuments',\n  DOC17: 'Since version 8.0.0 RxDocument.save() can only be called on non-temporary documents',\n  // data-migrator.js\n  DM1: 'migrate() Migration has already run',\n  DM2: 'migration of document failed final document does not match final schema',\n  DM3: 'migration already running',\n  // plugins/attachments.js\n  AT1: 'to use attachments, please define this in your schema',\n  // plugins/encryption.js\n  EN1: 'password is no string',\n  EN2: 'validatePassword: min-length of password not complied',\n  // plugins/json-dump.js\n  JD1: 'You must create the collections before you can import their data',\n  JD2: 'RxCollection.importDump(): the imported json relies on a different schema',\n  JD3: 'RxCollection.importDump(): json.passwordHash does not match the own',\n  // plugins/leader-election.js\n  // plugins/local-documents.js\n  LD1: 'RxDocument.allAttachments$ cant use attachments on local documents',\n  LD2: 'RxDocument.get(): objPath must be a string',\n  LD3: 'RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed',\n  LD4: 'cannot observe primary path',\n  LD5: 'RxDocument.set() id cannot be modified',\n  LD6: 'LocalDocument: Function is not useable on local documents',\n  LD7: 'Local document already exists',\n  // plugins/replication.js\n  RC1: 'Replication: already added',\n  RC2: 'RxCollection.sync() query must be from the same RxCollection',\n  RC3: 'RxCollection.sync() Do not use a collection\\'s pouchdb as remote, use the collection instead',\n  // plugins/schema-check.js\n  SC1: 'fieldnames do not match the regex',\n  SC2: 'SchemaCheck: name \\'item\\' reserved for array-fields',\n  SC3: 'SchemaCheck: fieldname has a ref-array but items-type is not string',\n  SC4: 'SchemaCheck: fieldname has a ref but is not type string or array<string>',\n  SC5: 'SchemaCheck: fieldname cannot be primary and ref at same time',\n  SC6: 'SchemaCheck: primary can only be defined at top-level',\n  SC7: 'SchemaCheck: default-values can only be defined at top-level',\n  SC8: 'SchemaCheck: first level-fields cannot start with underscore _',\n  SC10: 'SchemaCheck: schema defines ._rev, this will be done automatically',\n  SC11: 'SchemaCheck: schema needs a number >=0 as version',\n  SC12: 'SchemaCheck: primary can only be defined once',\n  SC13: 'SchemaCheck: primary is always index, do not declare it as index',\n  SC14: 'SchemaCheck: primary is always unique, do not declare it as index',\n  SC15: 'SchemaCheck: primary cannot be encrypted',\n  SC16: 'SchemaCheck: primary must have type: string',\n  SC17: 'SchemaCheck: top-level fieldname is not allowed',\n  SC18: 'SchemaCheck: compoundIndexes must be an array',\n  SC19: 'SchemaCheck: compoundIndexes must contain arrays',\n  SC20: 'SchemaCheck: compoundIndexes.array must contains strings',\n  SC21: 'SchemaCheck: given index is not defined in schema',\n  SC22: 'SchemaCheck: given indexKey is not type:string',\n  SC23: 'SchemaCheck: fieldname is not allowed',\n  SC24: 'SchemaCheck: required fields must be set via array. See https://spacetelescope.github.io/understanding-json-schema/reference/object.html#required',\n  // plugins/validate.js\n  VD1: 'Sub-schema not found, does the schemaPath exists in your schema?',\n  VD2: 'object does not match schema',\n  // plugins/in-memory.js\n  IM1: 'InMemory: Memory-Adapter must be added. Use RxDB.plugin(require(\\'pouchdb-adapter-memory\\'));',\n  IM2: 'inMemoryCollection.sync(): Do not replicate with the in-memory instance. Replicate with the parent instead',\n  // plugins/server.js\n  S1: 'You cannot create collections after calling RxDatabase.server()',\n  // plugins/replication-graphql.js\n  QL1: 'TODO'\n};\nexport var rxdb = true;\nexport var prototypes = {};\nexport var overwritable = {\n  tunnelErrorMessage: function tunnelErrorMessage(code) {\n    if (!CODES[code]) {\n      console.error('RxDB: Error-Code not known: ' + code);\n      throw new Error('Error-Cdoe ' + code + ' not known, contact the maintainer');\n    }\n\n    return CODES[code];\n  }\n};\nexport default {\n  rxdb: rxdb,\n  prototypes: prototypes,\n  overwritable: overwritable\n};","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/plugins/error-messages.js"],"names":["CODES","UT1","UT2","UT3","UT4","P1","QU1","QU2","QU3","QU4","QU5","QU6","QU7","QU8","MQ1","MQ2","MQ3","MQ4","MQ5","MQ6","MQ7","MQ8","DB1","DB2","DB3","DB4","DB5","DB6","DB7","DB8","DB9","DB10","COL1","COL2","COL3","COL4","COL5","COL6","COL7","COL8","COL9","COL10","COL11","COL12","COL13","COL14","COL15","COL16","COL17","COL18","COL19","DOC1","DOC2","DOC3","DOC4","DOC5","DOC6","DOC7","DOC8","DOC9","DOC10","DOC11","DOC12","DOC13","DOC14","DOC15","DOC16","DOC17","DM1","DM2","DM3","AT1","EN1","EN2","JD1","JD2","JD3","LD1","LD2","LD3","LD4","LD5","LD6","LD7","RC1","RC2","RC3","SC1","SC2","SC3","SC4","SC5","SC6","SC7","SC8","SC10","SC11","SC12","SC13","SC14","SC15","SC16","SC17","SC18","SC19","SC20","SC21","SC22","SC23","SC24","VD1","VD2","IM1","IM2","S1","QL1","rxdb","prototypes","overwritable","tunnelErrorMessage","code","console","error","Error"],"mappings":"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","sourcesContent":["/**\n * this plugin adds the error-messages\n * without it, only error-codes will be shown\n * This is mainly because error-string are hard to compress and we need a smaller build\n */\nvar CODES = {\n  // util.js\n  UT1: 'given name is no string or empty',\n  UT2: \"collection- and database-names must match the regex\\n    info: if your database-name specifies a folder, the name must contain the slash-char '/' or '\\\\'\",\n  UT3: 'replication-direction must either be push or pull or both. But not none',\n  UT4: 'given leveldown is no valid adapter',\n  // pouch-db.js\n  P1: 'PouchDB.getBatch: limit must be > 2',\n  // rx-query\n  QU1: 'RxQuery._execOverDatabase(): op not known',\n  QU2: 'limit() must get a number',\n  QU3: 'skip() must get a number',\n  QU4: 'RxQuery.regex(): You cannot use .regex() on the primary field',\n  QU5: 'RxQuery.sort(): does not work because key is not defined in the schema',\n  QU6: 'RxQuery.limit(): cannot be called on .findOne()',\n  QU7: 'query must be an object',\n  QU8: 'query cannot be an array',\n  // mquery.js\n  MQ1: 'path must be a string or object',\n  MQ2: 'Invalid argument',\n  MQ3: 'Invalid sort() argument. Must be a string, object, or array',\n  MQ4: 'Invalid argument. Expected instanceof mquery or plain object',\n  MQ5: 'method must be used after where() when called with these arguments',\n  MQ6: 'Can\\'t mix sort syntaxes. Use either array or object | .sort([[\\'field\\', 1], [\\'test\\', -1]]) | .sort({ field: 1, test: -1 })',\n  MQ7: 'Invalid sort value',\n  MQ8: 'Can\\'t mix sort syntaxes. Use either array or object',\n  // rx-database\n  DB1: 'RxDocument.prepare(): another instance on this adapter has a different password',\n  DB2: 'RxDatabase.collection(): collection-names cannot start with underscore _',\n  DB3: 'RxDatabase.collection(): collection already exists. use myDatabase.[collectionName] to get it',\n  DB4: 'RxDatabase.collection(): schema is missing',\n  DB5: 'RxDatabase.collection(): collection-name not allowed',\n  DB6: 'RxDatabase.collection(): another instance created this collection with a different schema. Read this https://pubkey.github.io/rxdb/questions-answers.html#cant-change-the-schema',\n  DB7: 'RxDatabase.collection(): schema encrypted but no password given',\n  DB8: 'RxDatabase.create(): A RxDatabase with the same name and adapter already exists.\\n' + 'Make sure to use this combination only once or set ignoreDuplicate to true if you do this intentional',\n  DB9: 'RxDatabase.create(): Adapter not added. Use RxDB.plugin(require(\\'pouchdb-adapter-[adaptername]\\');',\n  DB10: 'RxDatabase.create(): To use leveldown-adapters, you have to add the leveldb-plugin. Use RxDB.plugin(require(\\'pouchdb-adapter-leveldb\\'));',\n  // rx-collection\n  COL1: 'RxDocument.insert() You cannot insert an existing document',\n  COL2: 'RxCollection.insert() do not provide ._id when it is not the primary key',\n  COL3: 'RxCollection.upsert() does not work without primary',\n  COL4: 'RxCollection.atomicUpsert() does not work without primary',\n  COL5: 'RxCollection.find() if you want to search by _id, use .findOne(_id)',\n  COL6: 'RxCollection.findOne() needs a queryObject or string',\n  COL7: 'hook must be a function',\n  COL8: 'hooks-when not known',\n  COL9: 'RxCollection.addHook() hook-name not known',\n  COL10: 'RxCollection .postCreate-hooks cannot be async',\n  COL11: 'migrationStrategies must be an object',\n  COL12: 'A migrationStrategy is missing or too much',\n  COL13: 'migrationStrategy must be a function',\n  COL14: 'given static method-name is not a string',\n  COL15: 'static method-names cannot start with underscore _',\n  COL16: 'given static method is not a function',\n  COL17: 'RxCollection.ORM: statics-name not allowed',\n  COL18: 'collection-method not allowed because fieldname is in the schema',\n  COL19: 'Pouchdb document update conflict',\n  // rx-document.js\n  DOC1: 'RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed',\n  DOC2: 'cannot observe primary path',\n  DOC3: 'final fields cannot be observed',\n  DOC4: 'RxDocument.get$ cannot observe a non-existed field',\n  DOC5: 'RxDocument.populate() cannot populate a non-existed field',\n  DOC6: 'RxDocument.populate() cannot populate because path has no ref',\n  DOC7: 'RxDocument.populate() ref-collection not in database',\n  DOC8: 'RxDocument.set(): primary-key cannot be modified',\n  DOC9: 'final fields cannot be modified',\n  DOC10: 'RxDocument.set(): cannot set childpath when rootPath not selected',\n  DOC11: 'RxDocument.save(): cant save deleted document',\n  DOC12: 'RxDocument.save(): error',\n  DOC13: 'RxDocument.remove(): Document is already deleted',\n  DOC14: 'RxDocument.destroy() does not exist',\n  DOC15: 'query cannot be an array',\n  DOC16: 'Since version 8.0.0 RxDocument.set() can only be called on temporary RxDocuments',\n  DOC17: 'Since version 8.0.0 RxDocument.save() can only be called on non-temporary documents',\n  // data-migrator.js\n  DM1: 'migrate() Migration has already run',\n  DM2: 'migration of document failed final document does not match final schema',\n  DM3: 'migration already running',\n  // plugins/attachments.js\n  AT1: 'to use attachments, please define this in your schema',\n  // plugins/encryption.js\n  EN1: 'password is no string',\n  EN2: 'validatePassword: min-length of password not complied',\n  // plugins/json-dump.js\n  JD1: 'You must create the collections before you can import their data',\n  JD2: 'RxCollection.importDump(): the imported json relies on a different schema',\n  JD3: 'RxCollection.importDump(): json.passwordHash does not match the own',\n  // plugins/leader-election.js\n  // plugins/local-documents.js\n  LD1: 'RxDocument.allAttachments$ cant use attachments on local documents',\n  LD2: 'RxDocument.get(): objPath must be a string',\n  LD3: 'RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed',\n  LD4: 'cannot observe primary path',\n  LD5: 'RxDocument.set() id cannot be modified',\n  LD6: 'LocalDocument: Function is not useable on local documents',\n  LD7: 'Local document already exists',\n  // plugins/replication.js\n  RC1: 'Replication: already added',\n  RC2: 'RxCollection.sync() query must be from the same RxCollection',\n  RC3: 'RxCollection.sync() Do not use a collection\\'s pouchdb as remote, use the collection instead',\n  // plugins/schema-check.js\n  SC1: 'fieldnames do not match the regex',\n  SC2: 'SchemaCheck: name \\'item\\' reserved for array-fields',\n  SC3: 'SchemaCheck: fieldname has a ref-array but items-type is not string',\n  SC4: 'SchemaCheck: fieldname has a ref but is not type string or array<string>',\n  SC5: 'SchemaCheck: fieldname cannot be primary and ref at same time',\n  SC6: 'SchemaCheck: primary can only be defined at top-level',\n  SC7: 'SchemaCheck: default-values can only be defined at top-level',\n  SC8: 'SchemaCheck: first level-fields cannot start with underscore _',\n  SC10: 'SchemaCheck: schema defines ._rev, this will be done automatically',\n  SC11: 'SchemaCheck: schema needs a number >=0 as version',\n  SC12: 'SchemaCheck: primary can only be defined once',\n  SC13: 'SchemaCheck: primary is always index, do not declare it as index',\n  SC14: 'SchemaCheck: primary is always unique, do not declare it as index',\n  SC15: 'SchemaCheck: primary cannot be encrypted',\n  SC16: 'SchemaCheck: primary must have type: string',\n  SC17: 'SchemaCheck: top-level fieldname is not allowed',\n  SC18: 'SchemaCheck: compoundIndexes must be an array',\n  SC19: 'SchemaCheck: compoundIndexes must contain arrays',\n  SC20: 'SchemaCheck: compoundIndexes.array must contains strings',\n  SC21: 'SchemaCheck: given index is not defined in schema',\n  SC22: 'SchemaCheck: given indexKey is not type:string',\n  SC23: 'SchemaCheck: fieldname is not allowed',\n  SC24: 'SchemaCheck: required fields must be set via array. See https://spacetelescope.github.io/understanding-json-schema/reference/object.html#required',\n  // plugins/validate.js\n  VD1: 'Sub-schema not found, does the schemaPath exists in your schema?',\n  VD2: 'object does not match schema',\n  // plugins/in-memory.js\n  IM1: 'InMemory: Memory-Adapter must be added. Use RxDB.plugin(require(\\'pouchdb-adapter-memory\\'));',\n  IM2: 'inMemoryCollection.sync(): Do not replicate with the in-memory instance. Replicate with the parent instead',\n  // plugins/server.js\n  S1: 'You cannot create collections after calling RxDatabase.server()',\n  // plugins/replication-graphql.js\n  QL1: 'TODO'\n};\nexport var rxdb = true;\nexport var prototypes = {};\nexport var overwritable = {\n  tunnelErrorMessage: function tunnelErrorMessage(code) {\n    if (!CODES[code]) {\n      console.error('RxDB: Error-Code not known: ' + code);\n      throw new Error('Error-Cdoe ' + code + ' not known, contact the maintainer');\n    }\n\n    return CODES[code];\n  }\n};\nexport default {\n  rxdb: rxdb,\n  prototypes: prototypes,\n  overwritable: overwritable\n};\n//# sourceMappingURL=error-messages.js.map"]},"metadata":{},"sourceType":"module"}