{"ast":null,"code":"import _objectSpread from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/src/components/Todo/TodoList.js\";\nimport React, { Component, Fragment } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport TodoFilters from \"./TodoFilters\";\nimport PropTypes from \"prop-types\";\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n    _this.state = {\n      filter: \"all\",\n      clearInProgress: false\n    };\n    _this.filterResults = _this.filterResults.bind(_assertThisInitialized(_this));\n    _this.clearCompleted = _this.clearCompleted.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"filterResults\",\n    value: function filterResults(filter) {\n      this.setState(_objectSpread({}, this.state, {\n        filter: filter\n      }));\n    }\n  }, {\n    key: \"clearCompleted\",\n    value: function clearCompleted() {\n      this.props.db.todos.find({\n        isCompleted: true\n      }).remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var todos = this.props.todos;\n      var filteredTodos = todos;\n\n      if (this.state.filter === \"active\") {\n        filteredTodos = todos.filter(function (todo) {\n          return todo.isCompleted !== true;\n        });\n      } else if (this.state.filter === \"completed\") {\n        filteredTodos = todos.filter(function (todo) {\n          return todo.isCompleted === true;\n        });\n      }\n\n      var todoList = [];\n      filteredTodos.forEach(function (todo, index) {\n        todoList.push(React.createElement(TodoItem, {\n          key: index,\n          index: index,\n          todo: todo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"todoListWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, todoList)), React.createElement(TodoFilters, {\n        todos: filteredTodos,\n        currentFilter: this.state.filter,\n        filterResultsFn: this.filterResults,\n        clearCompletedFn: this.clearCompleted,\n        clearInProgress: this.state.clearInProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  auth: PropTypes.any.isRequired\n};\nexport default TodoList;","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/src/components/Todo/TodoList.js"],"names":["React","Component","Fragment","TodoItem","TodoFilters","PropTypes","TodoList","props","state","filter","clearInProgress","filterResults","bind","clearCompleted","setState","db","todos","find","isCompleted","remove","filteredTodos","todo","todoList","forEach","index","push","propTypes","array","isRequired","auth","any"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAb;AAKA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB;AATiB;AAUlB;;;;kCAEaH,M,EAAQ;AACpB,WAAKK,QAAL,mBACK,KAAKN,KADV;AAEEC,QAAAA,MAAM,EAAEA;AAFV;AAID;;;qCAEgB;AACf,WAAKF,KAAL,CAAWQ,EAAX,CAAcC,KAAd,CAAoBC,IAApB,CAAyB;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAzB,EAA+CC,MAA/C;AACD;;;6BAEQ;AACP,UAAIH,KAAK,GAAG,KAAKT,KAAL,CAAWS,KAAvB;AACA,UAAII,aAAa,GAAGJ,KAApB;;AACA,UAAI,KAAKR,KAAL,CAAWC,MAAX,KAAsB,QAA1B,EAAoC;AAClCW,QAAAA,aAAa,GAAGJ,KAAK,CAACP,MAAN,CAAa,UAAAY,IAAI;AAAA,iBAAIA,IAAI,CAACH,WAAL,KAAqB,IAAzB;AAAA,SAAjB,CAAhB;AACD,OAFD,MAEO,IAAI,KAAKV,KAAL,CAAWC,MAAX,KAAsB,WAA1B,EAAuC;AAC5CW,QAAAA,aAAa,GAAGJ,KAAK,CAACP,MAAN,CAAa,UAAAY,IAAI;AAAA,iBAAIA,IAAI,CAACH,WAAL,KAAqB,IAAzB;AAAA,SAAjB,CAAhB;AACD;;AAED,UAAMI,QAAQ,GAAG,EAAjB;AACAF,MAAAA,aAAa,CAACG,OAAd,CAAsB,UAACF,IAAD,EAAOG,KAAP,EAAiB;AACrCF,QAAAA,QAAQ,CAACG,IAAT,CACE,oBAAC,QAAD;AACE,UAAA,GAAG,EAAED,KADP;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,IAAI,EAAEH,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OARD;AAUA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIC,QADJ,CADF,CADF,EAOE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAEF,aADT;AAEE,QAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWC,MAF5B;AAGE,QAAA,eAAe,EAAE,KAAKE,aAHxB;AAIE,QAAA,gBAAgB,EAAE,KAAKE,cAJzB;AAKE,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWE,eAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAiBD;;;;EA7DoBT,S;;AAgEvBK,QAAQ,CAACoB,SAAT,GAAqB;AACnBV,EAAAA,KAAK,EAAEX,SAAS,CAACsB,KAAV,CAAgBC,UADJ;AAEnBC,EAAAA,IAAI,EAAExB,SAAS,CAACyB,GAAV,CAAcF;AAFD,CAArB;AAKA,eAAetB,QAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nimport TodoItem from \"./TodoItem\";\nimport TodoFilters from \"./TodoFilters\";\nimport PropTypes from \"prop-types\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filter: \"all\",\n      clearInProgress: false,\n    };\n\n    this.filterResults = this.filterResults.bind(this);\n    this.clearCompleted = this.clearCompleted.bind(this);\n  }\n\n  filterResults(filter) {\n    this.setState({\n      ...this.state,\n      filter: filter\n    });\n  }\n\n  clearCompleted() {\n    this.props.db.todos.find({ isCompleted: true}).remove()\n  }\n\n  render() {\n    let todos = this.props.todos;\n    let filteredTodos = todos;\n    if (this.state.filter === \"active\") {\n      filteredTodos = todos.filter(todo => todo.isCompleted !== true);\n    } else if (this.state.filter === \"completed\") {\n      filteredTodos = todos.filter(todo => todo.isCompleted === true);\n    }\n\n    const todoList = [];\n    filteredTodos.forEach((todo, index) => {\n      todoList.push(\n        <TodoItem\n          key={index}\n          index={index}\n          todo={todo}\n        />\n      );\n    });\n\n    return (\n      <Fragment>\n        <div className=\"todoListWrapper\">\n          <ul>\n            { todoList }\n          </ul>\n        </div>\n\n        <TodoFilters\n          todos={filteredTodos}\n          currentFilter={this.state.filter}\n          filterResultsFn={this.filterResults}\n          clearCompletedFn={this.clearCompleted}\n          clearInProgress={this.state.clearInProgress}\n        />\n      </Fragment>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  auth: PropTypes.any.isRequired,\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}