{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport RxDB from 'rxdb';\nimport { todoSchema } from './Schema';\nimport RxDBSchemaCheckModule from 'rxdb/plugins/schema-check';\nimport RxDBErrorMessagesModule from 'rxdb/plugins/error-messages';\nimport RxDBValidateModule from 'rxdb/plugins/validate';\nRxDB.plugin(RxDBSchemaCheckModule);\nRxDB.plugin(RxDBErrorMessagesModule);\nRxDB.plugin(RxDBValidateModule);\nRxDB.plugin(require('pouchdb-adapter-idb'));\nexport var createDb = function createDb() {\n  var db;\n  return _regeneratorRuntime.async(function createDb$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('DatabaseService: creating database..');\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(RxDB.create({\n            name: 'tododb',\n            adapter: 'idb'\n          }));\n\n        case 3:\n          db = _context.sent;\n          console.log('DatabaseService: created database');\n          window['db'] = db; // write to window for debugging\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(db.collection({\n            name: 'todos',\n            schema: todoSchema\n          }));\n\n        case 8:\n          return _context.abrupt(\"return\", db);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/src/components/Database.js"],"names":["RxDB","todoSchema","RxDBSchemaCheckModule","RxDBErrorMessagesModule","RxDBValidateModule","plugin","require","createDb","console","log","create","name","adapter","db","window","collection","schema"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,qBAAP,MAAkC,2BAAlC;AACA,OAAOC,uBAAP,MAAoC,6BAApC;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACAJ,IAAI,CAACK,MAAL,CAAYH,qBAAZ;AACAF,IAAI,CAACK,MAAL,CAAYF,uBAAZ;AACAH,IAAI,CAACK,MAAL,CAAYD,kBAAZ;AACAJ,IAAI,CAACK,MAAL,CAAYC,OAAO,CAAC,qBAAD,CAAnB;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AADoB;AAAA,2CAEHT,IAAI,CAACU,MAAL,CAAY;AACzBC,YAAAA,IAAI,EAAE,QADmB;AAEzBC,YAAAA,OAAO,EAAE;AAFgB,WAAZ,CAFG;;AAAA;AAEdC,UAAAA,EAFc;AAMpBL,UAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAK,UAAAA,MAAM,CAAC,IAAD,CAAN,GAAeD,EAAf,CAPoB,CAOD;;AAPC;AAAA,2CAQdA,EAAE,CAACE,UAAH,CAAc;AAChBJ,YAAAA,IAAI,EAAE,OADU;AAEhBK,YAAAA,MAAM,EAAEf;AAFQ,WAAd,CARc;;AAAA;AAAA,2CAYbY,EAZa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import RxDB from 'rxdb';\nimport { todoSchema } from './Schema';\nimport RxDBSchemaCheckModule from 'rxdb/plugins/schema-check';\nimport RxDBErrorMessagesModule from 'rxdb/plugins/error-messages';\nimport RxDBValidateModule from 'rxdb/plugins/validate';\nRxDB.plugin(RxDBSchemaCheckModule);\nRxDB.plugin(RxDBErrorMessagesModule);\nRxDB.plugin(RxDBValidateModule);\nRxDB.plugin(require('pouchdb-adapter-idb'));\nexport const createDb = async () => {\n    console.log('DatabaseService: creating database..');\n    const db = await RxDB.create({\n        name: 'tododb',\n        adapter: 'idb',\n    });\n    console.log('DatabaseService: created database');\n    window['db'] = db; // write to window for debugging\n    await db.collection({\n        name: 'todos',\n        schema: todoSchema\n     })\n    return db;\n};"]},"metadata":{},"sourceType":"module"}