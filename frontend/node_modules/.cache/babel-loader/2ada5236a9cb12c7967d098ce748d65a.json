{"ast":null,"code":"/**\n * handle the en/decryption of documents-data\n */\nimport objectPath from 'object-path';\nimport { clone, pluginMissing } from './util';\nexport var Crypter =\n/*#__PURE__*/\nfunction () {\n  function Crypter(password, schema) {\n    this.password = password;\n    this.schema = schema;\n  }\n  /**\n   * encrypt and stringify data\n   * @overwritten by plugin (optional)\n   */\n\n\n  var _proto = Crypter.prototype;\n\n  _proto._encryptValue = function _encryptValue(_value) {\n    throw pluginMissing('encryption');\n  }\n  /**\n   * decrypt and json-parse an encrypted value\n   * @overwritten by plugin (optional)\n   */\n  ;\n\n  _proto._decryptValue = function _decryptValue(_value) {\n    throw pluginMissing('encryption');\n  };\n\n  _proto.encrypt = function encrypt(obj) {\n    var _this = this;\n\n    if (!this.password) return obj;\n    obj = clone(obj);\n    this.schema.encryptedPaths.forEach(function (path) {\n      var value = objectPath.get(obj, path);\n      if (typeof value === 'undefined') return;\n\n      var encrypted = _this._encryptValue(value);\n\n      objectPath.set(obj, path, encrypted);\n    });\n    return obj;\n  };\n\n  _proto.decrypt = function decrypt(obj) {\n    var _this2 = this;\n\n    if (!this.password) return obj;\n    obj = clone(obj);\n    this.schema.encryptedPaths.forEach(function (path) {\n      var value = objectPath.get(obj, path);\n      if (typeof value === 'undefined') return;\n\n      var decrypted = _this2._decryptValue(value);\n\n      objectPath.set(obj, path, decrypted);\n    });\n    return obj;\n  };\n\n  return Crypter;\n}();\nexport function createCrypter(password, schema) {\n  return new Crypter(password, schema);\n}","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/crypter.js"],"names":["objectPath","clone","pluginMissing","Crypter","password","schema","_proto","prototype","_encryptValue","_value","_decryptValue","encrypt","obj","_this","encryptedPaths","forEach","path","value","get","encrypted","set","decrypt","_this2","decrypted","createCrypter"],"mappings":"AAAA;;;AAGA,OAAOA,UAAP,MAAuB,aAAvB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,QAArC;AACA,OAAO,IAAIC,OAAO;AAAG;AAAa,YAAY;AAC5C,WAASA,OAAT,CAAiBC,QAAjB,EAA2BC,MAA3B,EAAmC;AACjC,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;AACD;;;;;;AAMA,MAAIC,MAAM,GAAGH,OAAO,CAACI,SAArB;;AAEAD,EAAAA,MAAM,CAACE,aAAP,GAAuB,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACpD,UAAMP,aAAa,CAAC,YAAD,CAAnB;AACD;AACD;;;;AAHA;;AASAI,EAAAA,MAAM,CAACI,aAAP,GAAuB,SAASA,aAAT,CAAuBD,MAAvB,EAA+B;AACpD,UAAMP,aAAa,CAAC,YAAD,CAAnB;AACD,GAFD;;AAIAI,EAAAA,MAAM,CAACK,OAAP,GAAiB,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACrC,QAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAI,CAAC,KAAKT,QAAV,EAAoB,OAAOQ,GAAP;AACpBA,IAAAA,GAAG,GAAGX,KAAK,CAACW,GAAD,CAAX;AACA,SAAKP,MAAL,CAAYS,cAAZ,CAA2BC,OAA3B,CAAmC,UAAUC,IAAV,EAAgB;AACjD,UAAIC,KAAK,GAAGjB,UAAU,CAACkB,GAAX,CAAeN,GAAf,EAAoBI,IAApB,CAAZ;AACA,UAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;;AAElC,UAAIE,SAAS,GAAGN,KAAK,CAACL,aAAN,CAAoBS,KAApB,CAAhB;;AAEAjB,MAAAA,UAAU,CAACoB,GAAX,CAAeR,GAAf,EAAoBI,IAApB,EAA0BG,SAA1B;AACD,KAPD;AAQA,WAAOP,GAAP;AACD,GAdD;;AAgBAN,EAAAA,MAAM,CAACe,OAAP,GAAiB,SAASA,OAAT,CAAiBT,GAAjB,EAAsB;AACrC,QAAIU,MAAM,GAAG,IAAb;;AAEA,QAAI,CAAC,KAAKlB,QAAV,EAAoB,OAAOQ,GAAP;AACpBA,IAAAA,GAAG,GAAGX,KAAK,CAACW,GAAD,CAAX;AACA,SAAKP,MAAL,CAAYS,cAAZ,CAA2BC,OAA3B,CAAmC,UAAUC,IAAV,EAAgB;AACjD,UAAIC,KAAK,GAAGjB,UAAU,CAACkB,GAAX,CAAeN,GAAf,EAAoBI,IAApB,CAAZ;AACA,UAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;;AAElC,UAAIM,SAAS,GAAGD,MAAM,CAACZ,aAAP,CAAqBO,KAArB,CAAhB;;AAEAjB,MAAAA,UAAU,CAACoB,GAAX,CAAeR,GAAf,EAAoBI,IAApB,EAA0BO,SAA1B;AACD,KAPD;AAQA,WAAOX,GAAP;AACD,GAdD;;AAgBA,SAAOT,OAAP;AACD,CA3DiC,EAA3B;AA4DP,OAAO,SAASqB,aAAT,CAAuBpB,QAAvB,EAAiCC,MAAjC,EAAyC;AAC9C,SAAO,IAAIF,OAAJ,CAAYC,QAAZ,EAAsBC,MAAtB,CAAP;AACD","sourcesContent":["/**\n * handle the en/decryption of documents-data\n */\nimport objectPath from 'object-path';\nimport { clone, pluginMissing } from './util';\nexport var Crypter = /*#__PURE__*/function () {\n  function Crypter(password, schema) {\n    this.password = password;\n    this.schema = schema;\n  }\n  /**\n   * encrypt and stringify data\n   * @overwritten by plugin (optional)\n   */\n\n\n  var _proto = Crypter.prototype;\n\n  _proto._encryptValue = function _encryptValue(_value) {\n    throw pluginMissing('encryption');\n  }\n  /**\n   * decrypt and json-parse an encrypted value\n   * @overwritten by plugin (optional)\n   */\n  ;\n\n  _proto._decryptValue = function _decryptValue(_value) {\n    throw pluginMissing('encryption');\n  };\n\n  _proto.encrypt = function encrypt(obj) {\n    var _this = this;\n\n    if (!this.password) return obj;\n    obj = clone(obj);\n    this.schema.encryptedPaths.forEach(function (path) {\n      var value = objectPath.get(obj, path);\n      if (typeof value === 'undefined') return;\n\n      var encrypted = _this._encryptValue(value);\n\n      objectPath.set(obj, path, encrypted);\n    });\n    return obj;\n  };\n\n  _proto.decrypt = function decrypt(obj) {\n    var _this2 = this;\n\n    if (!this.password) return obj;\n    obj = clone(obj);\n    this.schema.encryptedPaths.forEach(function (path) {\n      var value = objectPath.get(obj, path);\n      if (typeof value === 'undefined') return;\n\n      var decrypted = _this2._decryptValue(value);\n\n      objectPath.set(obj, path, decrypted);\n    });\n    return obj;\n  };\n\n  return Crypter;\n}();\nexport function createCrypter(password, schema) {\n  return new Crypter(password, schema);\n}\n//# sourceMappingURL=crypter.js.map"]},"metadata":{},"sourceType":"module"}