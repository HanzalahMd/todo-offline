{"ast":null,"code":"import { MISSING_DOC, BAD_REQUEST, createError, generateErrorFromResponse } from 'pouchdb-errors';\nimport { matchesSelector } from 'pouchdb-selector-core';\nimport { scopeEval, parseDdocFunctionName, normalizeDdocFunctionName, isRemote } from 'pouchdb-utils';\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = ['return function(doc) {', '  \"use strict\";', '  var emitted = false;', '  var emit = function (a, b) {', '    emitted = true;', '  };', '  var view = ' + input + ';', '  view(doc);', '  if (emitted) {', '    return true;', '  }', '};'].join('\\n');\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ? opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDdocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDdocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' && !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST, '`view` filter parameter not found or invalid.');\n      return callback(err);\n    } // fetch a view from a design doc, make it behave like a filter\n\n\n    var viewName = parseDdocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {\n          status: 'cancelled'\n        });\n      }\n      /* istanbul ignore next */\n\n\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] && ddoc.views[viewName[1]].map;\n\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC, ddoc.views ? 'missing json key: ' + viewName[1] : 'missing json key: views'));\n      }\n\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDdocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {\n          status: 'cancelled'\n        });\n      }\n      /* istanbul ignore next */\n\n\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC, ddoc && ddoc.filters ? 'missing json key: ' + filterName[1] : 'missing json key: filters'));\n      }\n\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\nexport default applyChangesFilterPlugin;","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/pouchdb-changes-filter/lib/index-browser.es.js"],"names":["MISSING_DOC","BAD_REQUEST","createError","generateErrorFromResponse","matchesSelector","scopeEval","parseDdocFunctionName","normalizeDdocFunctionName","isRemote","evalFilter","input","evalView","code","join","validate","opts","callback","selector","filter","filterName","Error","normalize","view","shouldFilter","changesHandler","doc_ids","db","complete","err","viewName","get","ddoc","isCancelled","status","mapFun","views","map","doChanges","doc","filterFun","filters","applyChangesFilterPlugin","PouchDB","_changesFilterPlugin"],"mappings":"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","sourcesContent":["import { MISSING_DOC, BAD_REQUEST, createError, generateErrorFromResponse } from 'pouchdb-errors';\nimport { matchesSelector } from 'pouchdb-selector-core';\nimport { scopeEval, parseDdocFunctionName, normalizeDdocFunctionName, isRemote } from 'pouchdb-utils';\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDdocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDdocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDdocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDdocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\nexport default applyChangesFilterPlugin;\n"]},"metadata":{},"sourceType":"module"}