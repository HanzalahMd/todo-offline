{"ast":null,"code":"function highlightQuery(query, errors) {\n  var locations = errors.map(function (e) {\n    return e.locations;\n  }).reduce(function (a, b) {\n    return a.concat(b);\n  }, []);\n  var queryHighlight = '';\n  query.split('\\n').forEach(function (row, index) {\n    var line = index + 1;\n    var lineErrors = locations.filter(function (loc) {\n      return loc && loc.line === line;\n    });\n    queryHighlight += row + '\\n';\n\n    if (lineErrors.length) {\n      var errorHighlight = [];\n      lineErrors.forEach(function (line) {\n        for (var i = 0; i < 8; i++) {\n          errorHighlight[line.column + i] = '~';\n        }\n      });\n\n      for (var i = 0; i < errorHighlight.length; i++) {\n        queryHighlight += errorHighlight[i] || ' ';\n      }\n\n      queryHighlight += '\\n';\n    }\n  });\n  return queryHighlight;\n}\n\nmodule.exports = function (params) {\n  require('isomorphic-fetch');\n\n  if (!params.url) throw new Error('Missing url parameter');\n  var headers = new Headers(params.headers);\n  headers.append('Content-Type', 'application/json');\n  return {\n    query: function query(_query, variables, onResponse) {\n      var req = new Request(params.url, {\n        method: 'POST',\n        body: JSON.stringify({\n          query: _query,\n          variables: variables\n        }),\n        headers: headers,\n        credentials: params.credentials\n      });\n      return fetch(req).then(function (res) {\n        onResponse && onResponse(req, res);\n        return res.json();\n      }).then(function (body) {\n        if (body.errors && body.errors.length) {\n          body.highlightQuery = highlightQuery(_query, body.errors);\n        }\n\n        return body;\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/graphql-client/index.js"],"names":["highlightQuery","query","errors","locations","map","e","reduce","a","b","concat","queryHighlight","split","forEach","row","index","line","lineErrors","filter","loc","length","errorHighlight","i","column","module","exports","params","require","url","Error","headers","Headers","append","variables","onResponse","req","Request","method","body","JSON","stringify","credentials","fetch","then","res","json"],"mappings":"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","sourcesContent":["function highlightQuery (query, errors) {\n  var locations = errors.map(function (e) { return e.locations })\n    .reduce(function (a, b) {\n      return a.concat(b)\n    }, [])\n\n  var queryHighlight = ''\n\n  query.split('\\n').forEach(function (row, index) {\n    var line = index + 1\n    var lineErrors = locations.filter(function (loc) { return loc && loc.line === line })\n\n    queryHighlight += row + '\\n'\n\n    if (lineErrors.length) {\n      var errorHighlight = []\n\n      lineErrors.forEach(function (line) {\n        for (var i = 0; i < 8; i++) {\n          errorHighlight[line.column + i] = '~'\n        }\n      })\n\n      for (var i = 0; i < errorHighlight.length; i++) {\n        queryHighlight += errorHighlight[i] || ' '\n      }\n      queryHighlight += '\\n'\n    }\n  })\n\n  return queryHighlight\n}\n\nmodule.exports = function (params) {\n  require('isomorphic-fetch')\n  if (!params.url) throw new Error('Missing url parameter')\n\n  var headers = new Headers(params.headers)\n  headers.append('Content-Type', 'application/json')\n\n  return {\n    query: function (query, variables, onResponse) {\n\n      var req = new Request(params.url, {\n        method: 'POST',\n        body: JSON.stringify({\n          query: query,\n          variables: variables\n        }),\n        headers: headers,\n        credentials: params.credentials\n      })\n\n      return fetch(req)\n      .then(function (res) {\n        onResponse && onResponse(req, res)\n\n        return res.json()\n      }).then(function (body) {\n        if (body.errors && body.errors.length) {\n          body.highlightQuery = highlightQuery(query, body.errors)\n        }\n\n        return body\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}