{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * RxChangeEvents a emitted when something in the database changes\n * they can be grabbed by the observables of database, collection and document\n */\n\nimport { hash } from './util';\nexport var RxChangeEvent =\n/*#__PURE__*/\nfunction () {\n  function RxChangeEvent(data) {\n    this._hash = null;\n    this.data = data;\n  }\n\n  var _proto = RxChangeEvent.prototype;\n\n  _proto.toJSON = function toJSON() {\n    var ret = {\n      col: null,\n      doc: null,\n      v: null,\n      op: this.data.op,\n      t: this.data.t,\n      db: this.data.db,\n      it: this.data.it,\n      isLocal: this.data.isLocal\n    };\n    if (this.data.col) ret.col = this.data.col;\n    if (this.data.doc) ret.doc = this.data.doc;\n    if (this.data.v) ret.v = this.data.v;\n    return ret;\n  };\n\n  _proto.isIntern = function isIntern() {\n    if (this.data.col && this.data.col.charAt(0) === '_') return true;\n    return false;\n  };\n\n  _proto.isSocket = function isSocket() {\n    if (this.data.col && this.data.col === '_socket') return true;\n    return false;\n  };\n\n  _createClass(RxChangeEvent, [{\n    key: \"hash\",\n    get: function get() {\n      if (!this._hash) this._hash = hash(this.data);\n      return this._hash;\n    }\n  }]);\n\n  return RxChangeEvent;\n}();\nexport function changeEventfromJSON(data) {\n  return new RxChangeEvent(data);\n}\nexport function changeEventfromPouchChange(changeDoc, collection) {\n  var op = changeDoc._rev.startsWith('1-') ? 'INSERT' : 'UPDATE';\n  if (changeDoc._deleted) op = 'REMOVE'; // decompress / primarySwap\n\n  changeDoc = collection._handleFromPouch(changeDoc);\n  var data = {\n    op: op,\n    t: new Date().getTime(),\n    db: 'remote',\n    col: collection.name,\n    it: collection.database.token,\n    doc: changeDoc[collection.schema.primaryPath],\n    v: changeDoc\n  };\n  return new RxChangeEvent(data);\n}\nexport function createChangeEvent(op, database, collection, doc, value) {\n  var isLocal = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var data = {\n    col: collection ? collection.name : null,\n    doc: doc ? doc.primary : null,\n    v: value ? value : null,\n    op: op,\n    t: new Date().getTime(),\n    db: database.name,\n    it: database.token,\n    isLocal: isLocal\n  };\n  return new RxChangeEvent(data);\n}\nexport function isInstanceOf(obj) {\n  return obj instanceof RxChangeEvent;\n}","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/rx-change-event.js"],"names":["_createClass","hash","RxChangeEvent","data","_hash","_proto","prototype","toJSON","ret","col","doc","v","op","t","db","it","isLocal","isIntern","charAt","isSocket","key","get","changeEventfromJSON","changeEventfromPouchChange","changeDoc","collection","_rev","startsWith","_deleted","_handleFromPouch","Date","getTime","name","database","token","schema","primaryPath","createChangeEvent","value","arguments","length","undefined","primary","isInstanceOf","obj"],"mappings":"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","sourcesContent":["import _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * RxChangeEvents a emitted when something in the database changes\n * they can be grabbed by the observables of database, collection and document\n */\nimport { hash } from './util';\nexport var RxChangeEvent = /*#__PURE__*/function () {\n  function RxChangeEvent(data) {\n    this._hash = null;\n    this.data = data;\n  }\n\n  var _proto = RxChangeEvent.prototype;\n\n  _proto.toJSON = function toJSON() {\n    var ret = {\n      col: null,\n      doc: null,\n      v: null,\n      op: this.data.op,\n      t: this.data.t,\n      db: this.data.db,\n      it: this.data.it,\n      isLocal: this.data.isLocal\n    };\n    if (this.data.col) ret.col = this.data.col;\n    if (this.data.doc) ret.doc = this.data.doc;\n    if (this.data.v) ret.v = this.data.v;\n    return ret;\n  };\n\n  _proto.isIntern = function isIntern() {\n    if (this.data.col && this.data.col.charAt(0) === '_') return true;\n    return false;\n  };\n\n  _proto.isSocket = function isSocket() {\n    if (this.data.col && this.data.col === '_socket') return true;\n    return false;\n  };\n\n  _createClass(RxChangeEvent, [{\n    key: \"hash\",\n    get: function get() {\n      if (!this._hash) this._hash = hash(this.data);\n      return this._hash;\n    }\n  }]);\n\n  return RxChangeEvent;\n}();\nexport function changeEventfromJSON(data) {\n  return new RxChangeEvent(data);\n}\nexport function changeEventfromPouchChange(changeDoc, collection) {\n  var op = changeDoc._rev.startsWith('1-') ? 'INSERT' : 'UPDATE';\n  if (changeDoc._deleted) op = 'REMOVE'; // decompress / primarySwap\n\n  changeDoc = collection._handleFromPouch(changeDoc);\n  var data = {\n    op: op,\n    t: new Date().getTime(),\n    db: 'remote',\n    col: collection.name,\n    it: collection.database.token,\n    doc: changeDoc[collection.schema.primaryPath],\n    v: changeDoc\n  };\n  return new RxChangeEvent(data);\n}\nexport function createChangeEvent(op, database, collection, doc, value) {\n  var isLocal = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var data = {\n    col: collection ? collection.name : null,\n    doc: doc ? doc.primary : null,\n    v: value ? value : null,\n    op: op,\n    t: new Date().getTime(),\n    db: database.name,\n    it: database.token,\n    isLocal: isLocal\n  };\n  return new RxChangeEvent(data);\n}\nexport function isInstanceOf(obj) {\n  return obj instanceof RxChangeEvent;\n}\n//# sourceMappingURL=rx-change-event.js.map"]},"metadata":{},"sourceType":"module"}