{"ast":null,"code":"import { minBinaryWithLength, maxBinaryWithLength, getNextStateSet } from './util';\n/**\n * fills each missing row of a table\n * with the given value\n */\n\nexport function fillTruthTable(truthTable, inputLength, value) {\n  var endInput = maxBinaryWithLength(inputLength);\n  var currentInput = minBinaryWithLength(inputLength);\n  var done = false;\n\n  while (!done) {\n    if (!truthTable.has(currentInput)) {\n      truthTable.set(currentInput, value);\n    }\n\n    if (currentInput === endInput) {\n      done = true;\n    } else {\n      currentInput = getNextStateSet(currentInput);\n    }\n  }\n}","map":{"version":3,"sources":["../../src/fill-truth-table.ts"],"names":[],"mappings":"AAAA,SACI,mBADJ,EAEI,mBAFJ,EAGI,eAHJ,QAIO,QAJP;AAOA;;;;;AAIA,OAAM,SAAU,cAAV,CACF,UADE,EAEF,WAFE,EAGF,KAHE,EAGW;AAEb,MAAM,QAAQ,GAAG,mBAAmB,CAAC,WAAD,CAApC;AACA,MAAI,YAAY,GAAG,mBAAmB,CAAC,WAAD,CAAtC;AACA,MAAI,IAAI,GAAG,KAAX;;AACA,SAAO,CAAC,IAAR,EAAc;AACV,QAAI,CAAC,UAAU,CAAC,GAAX,CAAe,YAAf,CAAL,EAAmC;AAC/B,MAAA,UAAU,CAAC,GAAX,CACI,YADJ,EAEI,KAFJ;AAIH;;AACD,QAAI,YAAY,KAAK,QAArB,EAA+B;AAC3B,MAAA,IAAI,GAAG,IAAP;AACH,KAFD,MAEO;AACH,MAAA,YAAY,GAAG,eAAe,CAC1B,YAD0B,CAA9B;AAGH;AACJ;AACJ","sourceRoot":"","sourcesContent":["import { minBinaryWithLength, maxBinaryWithLength, getNextStateSet } from './util';\n/**\n * fills each missing row of a table\n * with the given value\n */\nexport function fillTruthTable(truthTable, inputLength, value) {\n    var endInput = maxBinaryWithLength(inputLength);\n    var currentInput = minBinaryWithLength(inputLength);\n    var done = false;\n    while (!done) {\n        if (!truthTable.has(currentInput)) {\n            truthTable.set(currentInput, value);\n        }\n        if (currentInput === endInput) {\n            done = true;\n        }\n        else {\n            currentInput = getNextStateSet(currentInput);\n        }\n    }\n}\n//# sourceMappingURL=fill-truth-table.js.map"]},"metadata":{},"sourceType":"module"}