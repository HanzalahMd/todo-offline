{"ast":null,"code":"/**\n * this is copied from\n * @link https://github.com/aheckmann/mquery/blob/master/lib/utils.js\n */\n\n/**\n * @link https://github.com/aheckmann/mquery/commit/792e69fd0a7281a0300be5cade5a6d7c1d468ad4\n */\nvar SPECIAL_PROPERTIES = ['__proto__', 'constructor', 'prototype'];\n/**\n * Merges 'from' into 'to' without overwriting existing properties.\n */\n\nexport function merge(to, from) {\n  Object.keys(from).forEach(function (key) {\n    if (SPECIAL_PROPERTIES.includes(key)) {\n      return;\n    }\n\n    if (typeof to[key] === 'undefined') {\n      to[key] = from[key];\n    } else {\n      if (isObject(from[key])) merge(to[key], from[key]);else to[key] = from[key];\n    }\n  });\n}\n/**\n * Determines if `arg` is an object.\n */\n\nexport function isObject(arg) {\n  return '[object Object]' === arg.toString();\n}","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/plugins/query-builder/mquery/mquery-utils.js"],"names":["SPECIAL_PROPERTIES","merge","to","from","Object","keys","forEach","key","includes","isObject","arg","toString"],"mappings":"AAAA;;;;;AAKA;;;AAGA,IAAIA,kBAAkB,GAAG,CAAC,WAAD,EAAc,aAAd,EAA6B,WAA7B,CAAzB;AACA;;;;AAIA,OAAO,SAASC,KAAT,CAAeC,EAAf,EAAmBC,IAAnB,EAAyB;AAC9BC,EAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,OAAlB,CAA0B,UAAUC,GAAV,EAAe;AACvC,QAAIP,kBAAkB,CAACQ,QAAnB,CAA4BD,GAA5B,CAAJ,EAAsC;AACpC;AACD;;AAED,QAAI,OAAOL,EAAE,CAACK,GAAD,CAAT,KAAmB,WAAvB,EAAoC;AAClCL,MAAAA,EAAE,CAACK,GAAD,CAAF,GAAUJ,IAAI,CAACI,GAAD,CAAd;AACD,KAFD,MAEO;AACL,UAAIE,QAAQ,CAACN,IAAI,CAACI,GAAD,CAAL,CAAZ,EAAyBN,KAAK,CAACC,EAAE,CAACK,GAAD,CAAH,EAAUJ,IAAI,CAACI,GAAD,CAAd,CAAL,CAAzB,KAAwDL,EAAE,CAACK,GAAD,CAAF,GAAUJ,IAAI,CAACI,GAAD,CAAd;AACzD;AACF,GAVD;AAWD;AACD;;;;AAIA,OAAO,SAASE,QAAT,CAAkBC,GAAlB,EAAuB;AAC5B,SAAO,sBAAsBA,GAAG,CAACC,QAAJ,EAA7B;AACD","sourcesContent":["/**\n * this is copied from\n * @link https://github.com/aheckmann/mquery/blob/master/lib/utils.js\n */\n\n/**\n * @link https://github.com/aheckmann/mquery/commit/792e69fd0a7281a0300be5cade5a6d7c1d468ad4\n */\nvar SPECIAL_PROPERTIES = ['__proto__', 'constructor', 'prototype'];\n/**\n * Merges 'from' into 'to' without overwriting existing properties.\n */\n\nexport function merge(to, from) {\n  Object.keys(from).forEach(function (key) {\n    if (SPECIAL_PROPERTIES.includes(key)) {\n      return;\n    }\n\n    if (typeof to[key] === 'undefined') {\n      to[key] = from[key];\n    } else {\n      if (isObject(from[key])) merge(to[key], from[key]);else to[key] = from[key];\n    }\n  });\n}\n/**\n * Determines if `arg` is an object.\n */\n\nexport function isObject(arg) {\n  return '[object Object]' === arg.toString();\n}\n//# sourceMappingURL=mquery-utils.js.map"]},"metadata":{},"sourceType":"module"}