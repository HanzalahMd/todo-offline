{"ast":null,"code":"import _classCallCheck from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import TodoInput from\"./TodoInput\";import TodoList from\"./TodoList\";var TodoListWrapper=/*#__PURE__*/function(_Component){_inherits(TodoListWrapper,_Component);function TodoListWrapper(){var _getPrototypeOf2;var _this;_classCallCheck(this,TodoListWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TodoListWrapper)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={todos:[]};return _this;}_createClass(TodoListWrapper,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.db.todos.find().sort('createdAt').$.subscribe(function(todos){if(!todos){return;}_this2.setState({todos:todos});});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"todoWrapper\"},React.createElement(\"div\",{className:\"sectionHeader\"},\" Todos \"),React.createElement(TodoInput,{auth:this.props.auth,db:this.props.db}),React.createElement(TodoList,{todos:this.state.todos,db:this.props.db,auth:this.props.auth}));}}]);return TodoListWrapper;}(Component);export default TodoListWrapper;","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/src/components/Todo/TodoListWrapper.js"],"names":["React","Component","TodoInput","TodoList","TodoListWrapper","state","todos","props","db","find","sort","$","subscribe","setState","auth"],"mappings":"64BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,GAGMC,CAAAA,e,maACJC,K,CAAQ,CACNC,KAAK,CAAE,EADD,C,wGAIY,iBAClB,KAAKC,KAAL,CAAWC,EAAX,CAAcF,KAAd,CAAoBG,IAApB,GACaC,IADb,CACkB,WADlB,EAC+BC,CAD/B,CACiCC,SADjC,CAC2C,SAAAN,KAAK,CAAI,CAChD,GAAI,CAACA,KAAL,CAAY,CACR,OACH,CAED,MAAI,CAACO,QAAL,CAAc,CAAEP,KAAK,CAALA,KAAF,CAAd,EACH,CAPD,EAQD,C,uCAEQ,CACP,MACE,4BAAK,SAAS,CAAC,aAAf,EACE,2BAAK,SAAS,CAAC,eAAf,YADF,CAGE,oBAAC,SAAD,EAAW,IAAI,CAAE,KAAKC,KAAL,CAAWO,IAA5B,CAAkC,EAAE,CAAE,KAAKP,KAAL,CAAWC,EAAjD,EAHF,CAKE,oBAAC,QAAD,EAAU,KAAK,CAAE,KAAKH,KAAL,CAAWC,KAA5B,CAAmC,EAAE,CAAE,KAAKC,KAAL,CAAWC,EAAlD,CAAsD,IAAI,CAAE,KAAKD,KAAL,CAAWO,IAAvE,EALF,CADF,CASD,C,6BA1B2Bb,S,EAiC9B,cAAeG,CAAAA,eAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport TodoInput from \"./TodoInput\";\nimport TodoList from \"./TodoList\";\nimport PropTypes from \"prop-types\";\n\nclass TodoListWrapper extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    this.props.db.todos.find()\n                .sort('createdAt').$.subscribe(todos => {\n        if (!todos) {\n            return;\n        }\n                \n        this.setState({ todos });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"todoWrapper\">\n        <div className=\"sectionHeader\"> Todos </div>\n\n        <TodoInput auth={this.props.auth} db={this.props.db}/>\n\n        <TodoList todos={this.state.todos} db={this.props.db} auth={this.props.auth} />\n      </div>\n    );\n  }\n}\n\nTodoListWrapper.propTypes = {\n  auth: PropTypes.any.isRequired,\n};\n\nexport default TodoListWrapper;\n"]},"metadata":{},"sourceType":"module"}