{"ast":null,"code":"var _jsxFileName = \"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/src/components/Todo/TodoItem.js\";\nimport React from 'react';\n\nvar TodoItem = function TodoItem(_ref) {\n  var index = _ref.index,\n      todo = _ref.todo;\n\n  var removeTodo = function removeTodo(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    todo.remove();\n  };\n\n  var toggleTodo = function toggleTodo() {\n    delete todo._data[\"_deleted\"];\n    delete todo._data[\"_revisions\"];\n    todo.update({\n      $set: {\n        isCompleted: !todo.isCompleted\n      }\n    });\n  };\n\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    checked: todo.isCompleted,\n    type: \"checkbox\",\n    id: todo.id,\n    onChange: toggleTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"labelContent\" + (todo.isCompleted ? \" completed\" : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, todo.text), React.createElement(\"button\", {\n    className: \"closeBtn\",\n    onClick: removeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"x\"));\n};\n\nexport default TodoItem;","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/src/components/Todo/TodoItem.js"],"names":["React","TodoItem","index","todo","removeTodo","e","preventDefault","stopPropagation","remove","toggleTodo","_data","update","$set","isCompleted","id","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAElC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACAJ,IAAAA,IAAI,CAACK,MAAL;AACD,GAJD;;AAMA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,WAAON,IAAI,CAACO,KAAL,CAAW,UAAX,CAAP;AACA,WAAOP,IAAI,CAACO,KAAL,CAAW,YAAX,CAAP;AAEAP,IAAAA,IAAI,CAACQ,MAAL,CAAY;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAE,CAACV,IAAI,CAACU;AADf;AADI,KAAZ;AAKD,GAVD;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAEV,IAAI,CAACU,WADhB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAEV,IAAI,CAACW,EAHX;AAIE,IAAA,QAAQ,EAAEL,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAO,IAAA,OAAO,EAAEN,IAAI,CAACW,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF,EAaE;AAAK,IAAA,SAAS,EAAE,kBAAkBX,IAAI,CAACU,WAAL,GAAmB,YAAnB,GAAkC,EAApD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,IAAI,CAACY,IADV,CAbF,EAiBE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEX,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAjBF,CADF;AAuBD,CA3CD;;AA6CA,eAAeH,QAAf","sourcesContent":["import React from 'react';\n\nconst TodoItem = ({index, todo}) => {\n\n  const removeTodo = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    todo.remove()\n  };\n\n  const toggleTodo = () => {\n    \n    delete todo._data[\"_deleted\"]\n    delete todo._data[\"_revisions\"]\n\n    todo.update({\n      $set: {\n        isCompleted: !todo.isCompleted,\n      }\n    })\n  };\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"round\">\n          <input\n            checked={todo.isCompleted}\n            type=\"checkbox\"\n            id={todo.id}\n            onChange={toggleTodo}\n          />\n          <label htmlFor={todo.id}/>\n        </div>\n      </div>\n\n      <div className={\"labelContent\" + (todo.isCompleted ? \" completed\" : '')}>\n          {todo.text}\n      </div>\n\n      <button className=\"closeBtn\" onClick={removeTodo}>\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}