{"ast":null,"code":"import { hasLimit, isFindOne, hasSkip, wasResultsEmpty, isDelete, isInsert, isUpdate, previousUnknown, wasLimitReached, sortParamsChanged, wasInResult, wasSortedBeforeFirst, wasSortedAfterLast, isSortedBeforeFirst, isSortedAfterLast, wasMatching, doesMatchNow } from './state-resolver';\n/**\n * all states ordered by performance-cost\n * cheapest first\n * TODO run tests on which is really the fastest\n */\n\nexport var orderedStateList = ['isInsert', 'isUpdate', 'isDelete', 'hasLimit', 'isFindOne', 'hasSkip', 'wasResultsEmpty', 'previousUnknown', 'wasLimitReached', 'sortParamsChanged', 'wasInResult', 'wasSortedBeforeFirst', 'wasSortedAfterLast', 'isSortedBeforeFirst', 'isSortedAfterLast', 'wasMatching', 'doesMatchNow'];\nexport var stateResolveFunctions = {\n  isInsert: isInsert,\n  isUpdate: isUpdate,\n  isDelete: isDelete,\n  hasLimit: hasLimit,\n  isFindOne: isFindOne,\n  hasSkip: hasSkip,\n  wasResultsEmpty: wasResultsEmpty,\n  previousUnknown: previousUnknown,\n  wasLimitReached: wasLimitReached,\n  sortParamsChanged: sortParamsChanged,\n  wasInResult: wasInResult,\n  wasSortedBeforeFirst: wasSortedBeforeFirst,\n  wasSortedAfterLast: wasSortedAfterLast,\n  isSortedBeforeFirst: isSortedBeforeFirst,\n  isSortedAfterLast: isSortedAfterLast,\n  wasMatching: wasMatching,\n  doesMatchNow: doesMatchNow\n};\nexport var stateResolveFunctionByIndex = {\n  0: isInsert,\n  1: isUpdate,\n  2: isDelete,\n  3: hasLimit,\n  4: isFindOne,\n  5: hasSkip,\n  6: wasResultsEmpty,\n  7: previousUnknown,\n  8: wasLimitReached,\n  9: sortParamsChanged,\n  10: wasInResult,\n  11: wasSortedBeforeFirst,\n  12: wasSortedAfterLast,\n  13: isSortedBeforeFirst,\n  14: isSortedAfterLast,\n  15: wasMatching,\n  16: doesMatchNow\n};\nexport function resolveState(stateName, input) {\n  var fn = stateResolveFunctions[stateName];\n\n  if (!fn) {\n    throw new Error('resolveState() has no function for ' + stateName);\n  }\n\n  return fn(input);\n}\nexport function getStateSet(input) {\n  var set = '';\n\n  for (var i = 0; i < orderedStateList.length; i++) {\n    var name_1 = orderedStateList[i];\n    var value = resolveState(name_1, input);\n    var add = value ? '1' : '0';\n    set += add;\n  }\n\n  return set;\n}\nexport function logStateSet(stateSet) {\n  orderedStateList.forEach(function (state, index) {\n    console.log('state: ' + state + ' : ' + stateSet[index]);\n  });\n}","map":{"version":3,"sources":["../../../src/states/index.ts"],"names":[],"mappings":"AASA,SACI,QADJ,EAEI,SAFJ,EAGI,OAHJ,EAII,eAJJ,EAKI,QALJ,EAMI,QANJ,EAOI,QAPJ,EAQI,eARJ,EASI,eATJ,EAUI,iBAVJ,EAWI,WAXJ,EAYI,oBAZJ,EAaI,kBAbJ,EAcI,mBAdJ,EAeI,iBAfJ,EAgBI,WAhBJ,EAiBI,YAjBJ,QAkBO,kBAlBP;AAoBA;;;;;;AAKA,OAAO,IAAM,gBAAgB,GAAgB,CACzC,UADyC,EAEzC,UAFyC,EAGzC,UAHyC,EAIzC,UAJyC,EAKzC,WALyC,EAMzC,SANyC,EAOzC,iBAPyC,EAQzC,iBARyC,EASzC,iBATyC,EAUzC,mBAVyC,EAWzC,aAXyC,EAYzC,sBAZyC,EAazC,oBAbyC,EAczC,qBAdyC,EAezC,mBAfyC,EAgBzC,aAhByC,EAiBzC,cAjByC,CAAtC;AAoBP,OAAO,IAAM,qBAAqB,GAE9B;AACA,EAAA,QAAQ,EAAA,QADR;AAEA,EAAA,QAAQ,EAAA,QAFR;AAGA,EAAA,QAAQ,EAAA,QAHR;AAIA,EAAA,QAAQ,EAAA,QAJR;AAKA,EAAA,SAAS,EAAA,SALT;AAMA,EAAA,OAAO,EAAA,OANP;AAOA,EAAA,eAAe,EAAA,eAPf;AAQA,EAAA,eAAe,EAAA,eARf;AASA,EAAA,eAAe,EAAA,eATf;AAUA,EAAA,iBAAiB,EAAA,iBAVjB;AAWA,EAAA,WAAW,EAAA,WAXX;AAYA,EAAA,oBAAoB,EAAA,oBAZpB;AAaA,EAAA,kBAAkB,EAAA,kBAblB;AAcA,EAAA,mBAAmB,EAAA,mBAdnB;AAeA,EAAA,iBAAiB,EAAA,iBAfjB;AAgBA,EAAA,WAAW,EAAA,WAhBX;AAiBA,EAAA,YAAY,EAAA;AAjBZ,CAFG;AAsBP,OAAO,IAAM,2BAA2B,GAEpC;AACA,KAAG,QADH;AAEA,KAAG,QAFH;AAGA,KAAG,QAHH;AAIA,KAAG,QAJH;AAKA,KAAG,SALH;AAMA,KAAG,OANH;AAOA,KAAG,eAPH;AAQA,KAAG,eARH;AASA,KAAG,eATH;AAUA,KAAG,iBAVH;AAWA,MAAI,WAXJ;AAYA,MAAI,oBAZJ;AAaA,MAAI,kBAbJ;AAcA,MAAI,mBAdJ;AAeA,MAAI,iBAfJ;AAgBA,MAAI,WAhBJ;AAiBA,MAAI;AAjBJ,CAFG;AAsBP,OAAM,SAAU,YAAV,CACF,SADE,EAEF,KAFE,EAEuC;AAEzC,MAAM,EAAE,GAAkC,qBAAqB,CAAC,SAAD,CAA/D;;AACA,MAAI,CAAC,EAAL,EAAS;AACL,UAAM,IAAI,KAAJ,CAAU,wCAAwC,SAAlD,CAAN;AACH;;AACD,SAAO,EAAE,CAAC,KAAD,CAAT;AACH;AAED,OAAM,SAAU,WAAV,CACF,KADE,EACuC;AAEzC,MAAI,GAAG,GAAa,EAApB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,gBAAgB,CAAC,MAArC,EAA6C,CAAC,EAA9C,EAAkD;AAC9C,QAAM,MAAI,GAAc,gBAAgB,CAAC,CAAD,CAAxC;AACA,QAAM,KAAK,GAAG,YAAY,CAAC,MAAD,EAAO,KAAP,CAA1B;AACA,QAAM,GAAG,GAAG,KAAK,GAAG,GAAH,GAAS,GAA1B;AACA,IAAA,GAAG,IAAI,GAAP;AACH;;AACD,SAAO,GAAP;AACH;AAED,OAAM,SAAU,WAAV,CAAsB,QAAtB,EAAwC;AAC1C,EAAA,gBAAgB,CAAC,OAAjB,CAAyB,UAAC,KAAD,EAAQ,KAAR,EAAa;AAClC,IAAA,OAAO,CAAC,GAAR,CAAY,YAAY,KAAZ,GAAoB,KAApB,GAA4B,QAAQ,CAAC,KAAD,CAAhD;AACH,GAFD;AAGH","sourceRoot":"","sourcesContent":["import { hasLimit, isFindOne, hasSkip, wasResultsEmpty, isDelete, isInsert, isUpdate, previousUnknown, wasLimitReached, sortParamsChanged, wasInResult, wasSortedBeforeFirst, wasSortedAfterLast, isSortedBeforeFirst, isSortedAfterLast, wasMatching, doesMatchNow } from './state-resolver';\n/**\n * all states ordered by performance-cost\n * cheapest first\n * TODO run tests on which is really the fastest\n */\nexport var orderedStateList = [\n    'isInsert',\n    'isUpdate',\n    'isDelete',\n    'hasLimit',\n    'isFindOne',\n    'hasSkip',\n    'wasResultsEmpty',\n    'previousUnknown',\n    'wasLimitReached',\n    'sortParamsChanged',\n    'wasInResult',\n    'wasSortedBeforeFirst',\n    'wasSortedAfterLast',\n    'isSortedBeforeFirst',\n    'isSortedAfterLast',\n    'wasMatching',\n    'doesMatchNow'\n];\nexport var stateResolveFunctions = {\n    isInsert: isInsert,\n    isUpdate: isUpdate,\n    isDelete: isDelete,\n    hasLimit: hasLimit,\n    isFindOne: isFindOne,\n    hasSkip: hasSkip,\n    wasResultsEmpty: wasResultsEmpty,\n    previousUnknown: previousUnknown,\n    wasLimitReached: wasLimitReached,\n    sortParamsChanged: sortParamsChanged,\n    wasInResult: wasInResult,\n    wasSortedBeforeFirst: wasSortedBeforeFirst,\n    wasSortedAfterLast: wasSortedAfterLast,\n    isSortedBeforeFirst: isSortedBeforeFirst,\n    isSortedAfterLast: isSortedAfterLast,\n    wasMatching: wasMatching,\n    doesMatchNow: doesMatchNow\n};\nexport var stateResolveFunctionByIndex = {\n    0: isInsert,\n    1: isUpdate,\n    2: isDelete,\n    3: hasLimit,\n    4: isFindOne,\n    5: hasSkip,\n    6: wasResultsEmpty,\n    7: previousUnknown,\n    8: wasLimitReached,\n    9: sortParamsChanged,\n    10: wasInResult,\n    11: wasSortedBeforeFirst,\n    12: wasSortedAfterLast,\n    13: isSortedBeforeFirst,\n    14: isSortedAfterLast,\n    15: wasMatching,\n    16: doesMatchNow\n};\nexport function resolveState(stateName, input) {\n    var fn = stateResolveFunctions[stateName];\n    if (!fn) {\n        throw new Error('resolveState() has no function for ' + stateName);\n    }\n    return fn(input);\n}\nexport function getStateSet(input) {\n    var set = '';\n    for (var i = 0; i < orderedStateList.length; i++) {\n        var name_1 = orderedStateList[i];\n        var value = resolveState(name_1, input);\n        var add = value ? '1' : '0';\n        set += add;\n    }\n    return set;\n}\nexport function logStateSet(stateSet) {\n    orderedStateList.forEach(function (state, index) {\n        console.log('state: ' + state + ' : ' + stateSet[index]);\n    });\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}