{"ast":null,"code":"/**\n * if a query is observed and a changeEvent comes in,\n * the QueryChangeDetector tries to execute the changeEvent-delta on the exisiting query-results\n * or tells the query it should re-exec on the database if previous not possible.\n *\n * This works equal to meteors oplog-observe-driver\n * @link https://github.com/meteor/docs/blob/version-NEXT/long-form/oplog-observe-driver.md\n */\nimport { filterInMemoryFields } from 'pouchdb-selector-core';\nimport objectPath from 'object-path';\nimport { pushAtSortPosition } from 'array-push-at-sort-position';\nimport { removeOneFromArrayIfMatches } from './util';\nvar DEBUG = false;\nexport var QueryChangeDetector =\n/*#__PURE__*/\nfunction () {\n  function QueryChangeDetector(query) {\n    this.query = query;\n    this.primaryKey = query.collection.schema.primaryPath;\n  }\n  /**\n   * @return true if mustReExec, false if no change, array if calculated new results\n   */\n\n\n  var _proto = QueryChangeDetector.prototype;\n\n  _proto.runChangeDetection = function runChangeDetection(changeEvents) {\n    var _this = this;\n\n    if (changeEvents.length === 0) return false; // check if enabled\n\n    if (!this.query.collection.database.queryChangeDetection) {\n      return true;\n    }\n\n    var resultsData = this.query._resultsData;\n    var changed = false;\n    var found = changeEvents.find(function (changeEvent) {\n      var res = _this.handleSingleChange(resultsData, changeEvent);\n\n      if (Array.isArray(res)) {\n        changed = true;\n        resultsData = res;\n        return false;\n      } else if (res) return true;\n    });\n    if (found) return true;\n    if (!changed) return false;else return resultsData;\n  }\n  /**\n   * handle a single ChangeEvent and try to calculate the new results\n   * @return true if mustReExec, false if no change, array if calculated new results\n   */\n  ;\n\n  _proto.handleSingleChange = function handleSingleChange(resultsData, changeEvent) {\n    var _this2 = this;\n\n    var results = resultsData.slice(0); // copy to stay immutable\n\n    var options = this.query.toJSON();\n    var docData = changeEvent.data.v;\n\n    var wasDocInResults = _isDocInResultData(this, docData, resultsData);\n\n    var doesMatchNow = this.query.doesDocumentDataMatch(docData);\n    var isFilled = !options.limit || options.limit && resultsData.length >= options.limit;\n    var limitAndFilled = options.limit && resultsData.length >= options.limit;\n\n    if (DEBUG) {\n      console.log('QueryChangeDetector.handleSingleChange()'); // TODO this should not be an error\n\n      _debugMessage(this, 'start', changeEvent.data.v, 'handleSingleChange()');\n\n      console.log('changeEvent.data:');\n      console.dir(changeEvent.data);\n      console.log('wasDocInResults: ' + wasDocInResults);\n      console.log('doesMatchNow: ' + doesMatchNow);\n      console.log('isFilled: ' + isFilled);\n      console.log('options:' + JSON.stringify(options));\n    }\n\n    var _sortAfter = null;\n\n    var sortAfter = function sortAfter() {\n      if (_sortAfter === null) _sortAfter = _isSortedBefore(_this2, results[results.length - 1], docData);\n      return _sortAfter;\n    };\n\n    var _sortBefore = null;\n\n    var sortBefore = function sortBefore() {\n      if (_sortBefore === null) _sortBefore = _isSortedBefore(_this2, docData, results[0]);\n      return _sortBefore;\n    };\n\n    var __sortFieldChanged = null;\n\n    var sortFieldChanged = function sortFieldChanged() {\n      if (__sortFieldChanged === null) {\n        var docBefore = removeOneFromArrayIfMatches(resultsData, function (doc) {\n          return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n        });\n        __sortFieldChanged = _sortFieldChanged(_this2, docBefore, docData);\n      }\n\n      return _sortFieldChanged;\n    }; // console.log('## ' + results.length);\n\n\n    if (changeEvent.data.op === 'REMOVE') {\n      // R1 (never matched)\n      if (!wasDocInResults && !doesMatchNow) {\n        _debugMessage(this, 'R1', docData);\n\n        return false;\n      } // R2 sorted before got removed but results not filled\n\n\n      if (options.skip && doesMatchNow && sortBefore() && !isFilled) {\n        _debugMessage(this, 'R2', docData);\n\n        results.shift();\n        return results;\n      } // R3 (was in results and got removed)\n\n\n      if (doesMatchNow && wasDocInResults && !isFilled) {\n        _debugMessage(this, 'R3', docData);\n\n        results = removeOneFromArrayIfMatches(results, function (doc) {\n          return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n        });\n        return results;\n      } // R3.05 was in findOne-result and got removed\n\n\n      if (options.limit === 1 && !doesMatchNow && wasDocInResults) {\n        _debugMessage(this, 'R3.05', docData);\n\n        return true;\n      } // R3.1 was in results and got removed, no limit, no skip\n\n\n      if (doesMatchNow && wasDocInResults && !options.limit && !options.skip) {\n        _debugMessage(this, 'R3.1', docData);\n\n        results = removeOneFromArrayIfMatches(results, function (doc) {\n          return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n        });\n        return results;\n      } // R4 matching but after results got removed\n\n\n      if (doesMatchNow && options.limit && sortAfter()) {\n        _debugMessage(this, 'R4', docData);\n\n        return false;\n      }\n    } else {\n      // U1 doc not matched and also not matches now\n      if (!options.skip && !wasDocInResults && !doesMatchNow) {\n        _debugMessage(this, 'U1', docData);\n\n        return false;\n      } // U2 still matching -> only resort\n\n\n      if (!options.skip && !options.limit && wasDocInResults && doesMatchNow) {\n        // DEBUG && this._debugMessage('U2', docData);\n        if (sortFieldChanged()) {\n          _debugMessage(this, 'U2 - resort', docData); // remove and insert at new sort position\n\n\n          results = removeOneFromArrayIfMatches(results, function (doc) {\n            return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n          });\n          results = pushAtSortPosition(results, docData, sortCompareFunction(this));\n          return results;\n        } else {\n          _debugMessage(this, 'U2 - no-resort', docData); // replace but make sure its the same position\n\n\n          var wasDoc = results.find(function (doc) {\n            return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n          });\n          var i = results.indexOf(wasDoc);\n          results[i] = docData;\n          return results;\n        }\n      } // U3 not matched, but matches now, no.skip, limit < length\n\n\n      if (!options.skip && !limitAndFilled && !wasDocInResults && doesMatchNow) {\n        _debugMessage(this, 'U3', docData);\n\n        results = pushAtSortPosition(results, docData, sortCompareFunction(this));\n        return results;\n      }\n    } // if no optimisation-algo matches, return mustReExec:true\n\n\n    _debugMessage(this, 'NO_MATCH', docData);\n\n    return true;\n  };\n\n  return QueryChangeDetector;\n}();\n\nfunction _debugMessage(queryChangeDetector, key) {\n  var changeEventData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var title = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'optimized';\n\n  if (!DEBUG) {\n    return;\n  }\n\n  console.dir({\n    name: 'QueryChangeDetector',\n    title: title,\n    query: queryChangeDetector.query.toString(),\n    key: key,\n    changeEventData: changeEventData\n  });\n}\n\nvar sortCompareFunctionCache = new WeakMap();\n/**\n * returns the sort-comparator\n * which results in the equal sorting that a new query over the db would do\n */\n\nexport function sortCompareFunction(queryChangeDetector) {\n  if (!sortCompareFunctionCache.has(queryChangeDetector)) {\n    var sortOptions = _getSortOptions(queryChangeDetector);\n\n    var inMemoryFields = Object.keys(queryChangeDetector.query.toJSON().selector);\n\n    var fun = function fun(a, b) {\n      // TODO use createFieldSorter\n      var rows = [a, b].map(function (doc) {\n        return {\n          doc: queryChangeDetector.query.collection.schema.swapPrimaryToId(doc)\n        };\n      });\n      var sortedRows = filterInMemoryFields(rows, {\n        selector: queryChangeDetector.query.massageSelector,\n        sort: sortOptions\n      }, inMemoryFields);\n\n      if (sortedRows[0].doc._id === rows[0].doc._id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    };\n\n    sortCompareFunctionCache.set(queryChangeDetector, fun);\n    return fun;\n  } else {\n    return sortCompareFunctionCache.get(queryChangeDetector);\n  }\n}\n/**\n * checks if the newDocLeft would be placed before docDataRight\n * when the query would be reExecuted\n * @return true if before, false if after\n */\n\nexport function _isSortedBefore(queryChangeDetector, docDataLeft, docDataRight) {\n  var comparator = sortCompareFunction(queryChangeDetector);\n  var result = comparator(docDataLeft, docDataRight);\n  return result !== 1;\n}\n/**\n * checks if the sort-relevant fields have changed\n */\n\nexport function _sortFieldChanged(queryChangeDetector, docDataBefore, docDataAfter) {\n  var sortOptions = _getSortOptions(queryChangeDetector);\n\n  var sortFields = sortOptions.map(function (sortObj) {\n    return Object.keys(sortObj).pop();\n  });\n  var changed = false;\n  sortFields.find(function (field) {\n    var beforeData = objectPath.get(docDataBefore, field);\n    var afterData = objectPath.get(docDataAfter, field);\n\n    if (beforeData !== afterData) {\n      changed = true;\n      return true;\n    } else return false;\n  });\n  return changed;\n}\n/**\n * if no sort-order is specified,\n * pouchdb will use the primary\n */\n\nexport function _getSortOptions(queryChangeDetector) {\n  if (!queryChangeDetector._sortOptions) {\n    var options = queryChangeDetector.query.toJSON();\n    var sortOptions = options.sort;\n\n    if (!sortOptions) {\n      sortOptions = [{\n        _id: 'asc'\n      }];\n    }\n\n    queryChangeDetector._sortOptions = sortOptions;\n  }\n\n  return queryChangeDetector._sortOptions;\n}\n/**\n * check if the document exists in the results data\n */\n\nexport function _isDocInResultData(queryChangeDetector, docData, resultData) {\n  var primaryPath = queryChangeDetector.query.collection.schema.primaryPath;\n  var first = resultData.find(function (doc) {\n    return doc[primaryPath] === docData[primaryPath];\n  });\n  return !!first;\n}\nexport function enableDebugging() {\n  console.log('QueryChangeDetector.enableDebugging()');\n  DEBUG = true;\n}\nexport function create(query) {\n  var ret = new QueryChangeDetector(query);\n  return ret;\n}\nexport default {\n  create: create,\n  enableDebugging: enableDebugging\n};","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/query-change-detector.js"],"names":["filterInMemoryFields","objectPath","pushAtSortPosition","removeOneFromArrayIfMatches","DEBUG","QueryChangeDetector","query","primaryKey","collection","schema","primaryPath","_proto","prototype","runChangeDetection","changeEvents","_this","length","database","queryChangeDetection","resultsData","_resultsData","changed","found","find","changeEvent","res","handleSingleChange","Array","isArray","_this2","results","slice","options","toJSON","docData","data","v","wasDocInResults","_isDocInResultData","doesMatchNow","doesDocumentDataMatch","isFilled","limit","limitAndFilled","console","log","_debugMessage","dir","JSON","stringify","_sortAfter","sortAfter","_isSortedBefore","_sortBefore","sortBefore","__sortFieldChanged","sortFieldChanged","docBefore","doc","_sortFieldChanged","op","skip","shift","sortCompareFunction","wasDoc","i","indexOf","queryChangeDetector","key","changeEventData","arguments","undefined","title","name","toString","sortCompareFunctionCache","WeakMap","has","sortOptions","_getSortOptions","inMemoryFields","Object","keys","selector","fun","a","b","rows","map","swapPrimaryToId","sortedRows","massageSelector","sort","_id","set","get","docDataLeft","docDataRight","comparator","result","docDataBefore","docDataAfter","sortFields","sortObj","pop","field","beforeData","afterData","_sortOptions","resultData","first","enableDebugging","create","ret"],"mappings":"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","sourcesContent":["/**\n * if a query is observed and a changeEvent comes in,\n * the QueryChangeDetector tries to execute the changeEvent-delta on the exisiting query-results\n * or tells the query it should re-exec on the database if previous not possible.\n *\n * This works equal to meteors oplog-observe-driver\n * @link https://github.com/meteor/docs/blob/version-NEXT/long-form/oplog-observe-driver.md\n */\nimport { filterInMemoryFields } from 'pouchdb-selector-core';\nimport objectPath from 'object-path';\nimport { pushAtSortPosition } from 'array-push-at-sort-position';\nimport { removeOneFromArrayIfMatches } from './util';\nvar DEBUG = false;\nexport var QueryChangeDetector = /*#__PURE__*/function () {\n  function QueryChangeDetector(query) {\n    this.query = query;\n    this.primaryKey = query.collection.schema.primaryPath;\n  }\n  /**\n   * @return true if mustReExec, false if no change, array if calculated new results\n   */\n\n\n  var _proto = QueryChangeDetector.prototype;\n\n  _proto.runChangeDetection = function runChangeDetection(changeEvents) {\n    var _this = this;\n\n    if (changeEvents.length === 0) return false; // check if enabled\n\n    if (!this.query.collection.database.queryChangeDetection) {\n      return true;\n    }\n\n    var resultsData = this.query._resultsData;\n    var changed = false;\n    var found = changeEvents.find(function (changeEvent) {\n      var res = _this.handleSingleChange(resultsData, changeEvent);\n\n      if (Array.isArray(res)) {\n        changed = true;\n        resultsData = res;\n        return false;\n      } else if (res) return true;\n    });\n    if (found) return true;\n    if (!changed) return false;else return resultsData;\n  }\n  /**\n   * handle a single ChangeEvent and try to calculate the new results\n   * @return true if mustReExec, false if no change, array if calculated new results\n   */\n  ;\n\n  _proto.handleSingleChange = function handleSingleChange(resultsData, changeEvent) {\n    var _this2 = this;\n\n    var results = resultsData.slice(0); // copy to stay immutable\n\n    var options = this.query.toJSON();\n    var docData = changeEvent.data.v;\n\n    var wasDocInResults = _isDocInResultData(this, docData, resultsData);\n\n    var doesMatchNow = this.query.doesDocumentDataMatch(docData);\n    var isFilled = !options.limit || options.limit && resultsData.length >= options.limit;\n    var limitAndFilled = options.limit && resultsData.length >= options.limit;\n\n    if (DEBUG) {\n      console.log('QueryChangeDetector.handleSingleChange()'); // TODO this should not be an error\n\n      _debugMessage(this, 'start', changeEvent.data.v, 'handleSingleChange()');\n\n      console.log('changeEvent.data:');\n      console.dir(changeEvent.data);\n      console.log('wasDocInResults: ' + wasDocInResults);\n      console.log('doesMatchNow: ' + doesMatchNow);\n      console.log('isFilled: ' + isFilled);\n      console.log('options:' + JSON.stringify(options));\n    }\n\n    var _sortAfter = null;\n\n    var sortAfter = function sortAfter() {\n      if (_sortAfter === null) _sortAfter = _isSortedBefore(_this2, results[results.length - 1], docData);\n      return _sortAfter;\n    };\n\n    var _sortBefore = null;\n\n    var sortBefore = function sortBefore() {\n      if (_sortBefore === null) _sortBefore = _isSortedBefore(_this2, docData, results[0]);\n      return _sortBefore;\n    };\n\n    var __sortFieldChanged = null;\n\n    var sortFieldChanged = function sortFieldChanged() {\n      if (__sortFieldChanged === null) {\n        var docBefore = removeOneFromArrayIfMatches(resultsData, function (doc) {\n          return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n        });\n        __sortFieldChanged = _sortFieldChanged(_this2, docBefore, docData);\n      }\n\n      return _sortFieldChanged;\n    }; // console.log('## ' + results.length);\n\n\n    if (changeEvent.data.op === 'REMOVE') {\n      // R1 (never matched)\n      if (!wasDocInResults && !doesMatchNow) {\n        _debugMessage(this, 'R1', docData);\n\n        return false;\n      } // R2 sorted before got removed but results not filled\n\n\n      if (options.skip && doesMatchNow && sortBefore() && !isFilled) {\n        _debugMessage(this, 'R2', docData);\n\n        results.shift();\n        return results;\n      } // R3 (was in results and got removed)\n\n\n      if (doesMatchNow && wasDocInResults && !isFilled) {\n        _debugMessage(this, 'R3', docData);\n\n        results = removeOneFromArrayIfMatches(results, function (doc) {\n          return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n        });\n        return results;\n      } // R3.05 was in findOne-result and got removed\n\n\n      if (options.limit === 1 && !doesMatchNow && wasDocInResults) {\n        _debugMessage(this, 'R3.05', docData);\n\n        return true;\n      } // R3.1 was in results and got removed, no limit, no skip\n\n\n      if (doesMatchNow && wasDocInResults && !options.limit && !options.skip) {\n        _debugMessage(this, 'R3.1', docData);\n\n        results = removeOneFromArrayIfMatches(results, function (doc) {\n          return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n        });\n        return results;\n      } // R4 matching but after results got removed\n\n\n      if (doesMatchNow && options.limit && sortAfter()) {\n        _debugMessage(this, 'R4', docData);\n\n        return false;\n      }\n    } else {\n      // U1 doc not matched and also not matches now\n      if (!options.skip && !wasDocInResults && !doesMatchNow) {\n        _debugMessage(this, 'U1', docData);\n\n        return false;\n      } // U2 still matching -> only resort\n\n\n      if (!options.skip && !options.limit && wasDocInResults && doesMatchNow) {\n        // DEBUG && this._debugMessage('U2', docData);\n        if (sortFieldChanged()) {\n          _debugMessage(this, 'U2 - resort', docData); // remove and insert at new sort position\n\n\n          results = removeOneFromArrayIfMatches(results, function (doc) {\n            return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n          });\n          results = pushAtSortPosition(results, docData, sortCompareFunction(this));\n          return results;\n        } else {\n          _debugMessage(this, 'U2 - no-resort', docData); // replace but make sure its the same position\n\n\n          var wasDoc = results.find(function (doc) {\n            return doc[_this2.primaryKey] === docData[_this2.primaryKey];\n          });\n          var i = results.indexOf(wasDoc);\n          results[i] = docData;\n          return results;\n        }\n      } // U3 not matched, but matches now, no.skip, limit < length\n\n\n      if (!options.skip && !limitAndFilled && !wasDocInResults && doesMatchNow) {\n        _debugMessage(this, 'U3', docData);\n\n        results = pushAtSortPosition(results, docData, sortCompareFunction(this));\n        return results;\n      }\n    } // if no optimisation-algo matches, return mustReExec:true\n\n\n    _debugMessage(this, 'NO_MATCH', docData);\n\n    return true;\n  };\n\n  return QueryChangeDetector;\n}();\n\nfunction _debugMessage(queryChangeDetector, key) {\n  var changeEventData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var title = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'optimized';\n\n  if (!DEBUG) {\n    return;\n  }\n\n  console.dir({\n    name: 'QueryChangeDetector',\n    title: title,\n    query: queryChangeDetector.query.toString(),\n    key: key,\n    changeEventData: changeEventData\n  });\n}\n\nvar sortCompareFunctionCache = new WeakMap();\n/**\n * returns the sort-comparator\n * which results in the equal sorting that a new query over the db would do\n */\n\nexport function sortCompareFunction(queryChangeDetector) {\n  if (!sortCompareFunctionCache.has(queryChangeDetector)) {\n    var sortOptions = _getSortOptions(queryChangeDetector);\n\n    var inMemoryFields = Object.keys(queryChangeDetector.query.toJSON().selector);\n\n    var fun = function fun(a, b) {\n      // TODO use createFieldSorter\n      var rows = [a, b].map(function (doc) {\n        return {\n          doc: queryChangeDetector.query.collection.schema.swapPrimaryToId(doc)\n        };\n      });\n      var sortedRows = filterInMemoryFields(rows, {\n        selector: queryChangeDetector.query.massageSelector,\n        sort: sortOptions\n      }, inMemoryFields);\n\n      if (sortedRows[0].doc._id === rows[0].doc._id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    };\n\n    sortCompareFunctionCache.set(queryChangeDetector, fun);\n    return fun;\n  } else {\n    return sortCompareFunctionCache.get(queryChangeDetector);\n  }\n}\n/**\n * checks if the newDocLeft would be placed before docDataRight\n * when the query would be reExecuted\n * @return true if before, false if after\n */\n\nexport function _isSortedBefore(queryChangeDetector, docDataLeft, docDataRight) {\n  var comparator = sortCompareFunction(queryChangeDetector);\n  var result = comparator(docDataLeft, docDataRight);\n  return result !== 1;\n}\n/**\n * checks if the sort-relevant fields have changed\n */\n\nexport function _sortFieldChanged(queryChangeDetector, docDataBefore, docDataAfter) {\n  var sortOptions = _getSortOptions(queryChangeDetector);\n\n  var sortFields = sortOptions.map(function (sortObj) {\n    return Object.keys(sortObj).pop();\n  });\n  var changed = false;\n  sortFields.find(function (field) {\n    var beforeData = objectPath.get(docDataBefore, field);\n    var afterData = objectPath.get(docDataAfter, field);\n\n    if (beforeData !== afterData) {\n      changed = true;\n      return true;\n    } else return false;\n  });\n  return changed;\n}\n/**\n * if no sort-order is specified,\n * pouchdb will use the primary\n */\n\nexport function _getSortOptions(queryChangeDetector) {\n  if (!queryChangeDetector._sortOptions) {\n    var options = queryChangeDetector.query.toJSON();\n    var sortOptions = options.sort;\n\n    if (!sortOptions) {\n      sortOptions = [{\n        _id: 'asc'\n      }];\n    }\n\n    queryChangeDetector._sortOptions = sortOptions;\n  }\n\n  return queryChangeDetector._sortOptions;\n}\n/**\n * check if the document exists in the results data\n */\n\nexport function _isDocInResultData(queryChangeDetector, docData, resultData) {\n  var primaryPath = queryChangeDetector.query.collection.schema.primaryPath;\n  var first = resultData.find(function (doc) {\n    return doc[primaryPath] === docData[primaryPath];\n  });\n  return !!first;\n}\nexport function enableDebugging() {\n  console.log('QueryChangeDetector.enableDebugging()');\n  DEBUG = true;\n}\nexport function create(query) {\n  var ret = new QueryChangeDetector(query);\n  return ret;\n}\nexport default {\n  create: create,\n  enableDebugging: enableDebugging\n};\n//# sourceMappingURL=query-change-detector.js.map"]},"metadata":{},"sourceType":"module"}