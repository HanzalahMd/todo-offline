{"ast":null,"code":"/**\n * @link https://de.wikipedia.org/wiki/Base58\n * this does not start with the numbers to generate valid variable-names\n */\nvar base58Chars = 'abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ123456789';\nvar base58Length = base58Chars.length;\n/**\n * transform a number to a string by using only base58 chars\n * @link https://github.com/matthewmueller/number-to-letter/blob/master/index.js\n */\n\nexport function numberToLetter(nr) {\n  var digits = [];\n\n  do {\n    var v = nr % base58Length;\n    digits.push(v);\n    nr = Math.floor(nr / base58Length);\n  } while (nr-- > 0);\n\n  return digits.reverse().map(function (d) {\n    return base58Chars[d];\n  }).join('');\n}\nexport var alphabeticCompare = function alphabeticCompare(a, b) {\n  if (a < b) {\n    return -1;\n  }\n\n  if (b > a) {\n    return 1;\n  }\n\n  return 0;\n};","map":{"version":3,"sources":["../../src/util.ts"],"names":[],"mappings":"AAAA;;;;AAIA,IAAM,WAAW,GAAG,4DAApB;AACA,IAAM,YAAY,GAAG,WAAW,CAAC,MAAjC;AAEA;;;;;AAIA,OAAM,SAAU,cAAV,CAAyB,EAAzB,EAAmC;AACrC,MAAM,MAAM,GAAa,EAAzB;;AACA,KAAG;AACC,QAAM,CAAC,GAAG,EAAE,GAAG,YAAf;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,CAAZ;AACA,IAAA,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,EAAE,GAAG,YAAhB,CAAL;AACH,GAJD,QAIS,EAAE,KAAK,CAJhB;;AAMA,SAAO,MAAM,CACR,OADE,GAEF,GAFE,CAEE,UAAA,CAAA,EAAC;AAAI,WAAA,WAAW,CAAX,CAAW,CAAX;AAAc,GAFrB,EAGF,IAHE,CAGG,EAHH,CAAP;AAIH;AAID,OAAO,IAAM,iBAAiB,GAAmB,SAApC,iBAAoC,CAAC,CAAD,EAAI,CAAJ,EAAK;AAClD,MAAI,CAAC,GAAG,CAAR,EAAW;AACP,WAAO,CAAC,CAAR;AACH;;AACD,MAAI,CAAC,GAAG,CAAR,EAAW;AACP,WAAO,CAAP;AACH;;AACD,SAAO,CAAP;AACH,CARM","sourceRoot":"","sourcesContent":["/**\n * @link https://de.wikipedia.org/wiki/Base58\n * this does not start with the numbers to generate valid variable-names\n */\nvar base58Chars = 'abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ123456789';\nvar base58Length = base58Chars.length;\n/**\n * transform a number to a string by using only base58 chars\n * @link https://github.com/matthewmueller/number-to-letter/blob/master/index.js\n */\nexport function numberToLetter(nr) {\n    var digits = [];\n    do {\n        var v = nr % base58Length;\n        digits.push(v);\n        nr = Math.floor(nr / base58Length);\n    } while (nr-- > 0);\n    return digits\n        .reverse()\n        .map(function (d) { return base58Chars[d]; })\n        .join('');\n}\nexport var alphabeticCompare = function (a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (b > a) {\n        return 1;\n    }\n    return 0;\n};\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}