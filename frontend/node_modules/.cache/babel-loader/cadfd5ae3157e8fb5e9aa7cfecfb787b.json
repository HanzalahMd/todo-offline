{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import auth0 from'auth0-js';import history from'../utils/history';import{AUTH_CONFIG}from'./auth0-variables';import App from'./App';import Login from'./Login';import*as Database from'./Database';import Loading from'./Loading';// We will use this to show a loader while RxDB initializes\nvar AppWrapper=/*#__PURE__*/function(_React$Component){_inherits(AppWrapper,_React$Component);function AppWrapper(){var _this;_classCallCheck(this,AppWrapper);_this=_possibleConstructorReturn(this,_getPrototypeOf(AppWrapper).call(this));_this.auth0=new auth0.WebAuth({domain:AUTH_CONFIG.domain,clientID:AUTH_CONFIG.clientId,redirectUri:AUTH_CONFIG.callbackUrl,audience:\"https://\".concat(AUTH_CONFIG.domain,\"/userinfo\"),responseType:'token id_token',scope:'openid profile'});_this.handleAuthentication=function(){_this.auth0.parseHash(function(err,authResult){if(authResult&&authResult.accessToken&&authResult.idToken){_this.setSession(authResult);}else if(err){_this.logout();console.error(err);alert(\"Error: \".concat(err.error,\" - \").concat(err.errorDescription));}});};_this.login=_this.login.bind(_assertThisInitialized(_this));_this.logout=_this.logout.bind(_assertThisInitialized(_this));_this.handleAuthentication=_this.handleAuthentication.bind(_assertThisInitialized(_this));_this.isExpired=_this.isExpired.bind(_assertThisInitialized(_this));_this.getAccessToken=_this.getAccessToken.bind(_assertThisInitialized(_this));_this.getIdToken=_this.getIdToken.bind(_assertThisInitialized(_this));_this.renewSession=_this.renewSession.bind(_assertThisInitialized(_this));_this.state={idToken:null,userId:localStorage.getItem(\"userId\")};return _this;}_createClass(AppWrapper,[{key:\"login\",value:function login(){this.auth0.authorize();}},{key:\"getAccessToken\",value:function getAccessToken(){return this.accessToken;}},{key:\"getIdToken\",value:function getIdToken(){return this.idToken;}},{key:\"setSession\",value:function setSession(authResult){// Set isLoggedIn flag in localStorage\nlocalStorage.setItem('isLoggedIn','true');// Set the time that the access token will expire at\nvar expiresAt=authResult.expiresIn*1000+new Date().getTime();this.accessToken=authResult.accessToken;this.idToken=authResult.idToken;this.expiresAt=expiresAt;this.userId=authResult.idTokenPayload.sub;localStorage.setItem('userId',this.userId);// navigate to the home route\nhistory.replace('/');this.setState({idToken:authResult.idToken,userId:this.userId});}},{key:\"renewSession\",value:function renewSession(){var _this2=this;var interval=setInterval(function(){var shouldRenewSession=_this2.isLoggedIn&&(!_this2.idToken||_this2.isExpired());if(window.navigator.onLine&&shouldRenewSession){_this2.auth0.checkSession({},function(err,authResult){if(authResult&&authResult.accessToken&&authResult.idToken){_this2.setSession(authResult);}else if(err){_this2.logout();console.log(err);alert(\"Could not get token (\".concat(err.error,\": \").concat(err.error_description,\").\"));}});}},5000);}},{key:\"logout\",value:function logout(){// Remove tokens and expiry time\nthis.accessToken=null;this.idToken=null;this.expiresAt=0;// Remove isLoggedIn flag from localStorage\nlocalStorage.removeItem('isLoggedIn');this.auth0.logout({return_to:window.location.origin});// navigate to the home route\nhistory.replace('/');this.setState({idToken:null});}},{key:\"isExpired\",value:function isExpired(){// Check whether the current time is past the\n// access token's expiry time\nvar expiresAt=this.expiresAt;return new Date().getTime()>expiresAt;}},{key:\"componentDidMount\",value:function componentDidMount(){var db,location;return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Database.createDb());case 2:db=_context.sent;this.setState({db:db});// If this is a callback URL then do the right things\nlocation=this.props.location;if(!(location&&location.pathname.startsWith('/callback')&&/access_token|id_token|error/.test(location.hash))){_context.next=8;break;}this.handleAuthentication();return _context.abrupt(\"return\");case 8:if(!this.isLoggedIn()){_context.next=11;break;}this.renewSession();return _context.abrupt(\"return\");case 11:case\"end\":return _context.stop();}}},null,this);}},{key:\"isLoggedIn\",value:function isLoggedIn(){return localStorage.getItem('isLoggedIn')==='true';}},{key:\"render\",value:function render(){var location=this.props.location;var isCallbackPage=location&&location.pathname.startsWith('/callback');if(!this.isLoggedIn()&&!isCallbackPage){return React.createElement(Login,{loginHandler:this.login});}// Add this if statement\nif(!this.state.db){return React.createElement(Loading,null);}// Pass db in props to the App\nreturn React.createElement(App,{auth:{userId:this.userId},logoutHandler:this.logout,db:this.state.db});}}]);return AppWrapper;}(React.Component);export{AppWrapper as default};","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/src/components/AppWrapper.js"],"names":["React","auth0","history","AUTH_CONFIG","App","Login","Database","Loading","AppWrapper","WebAuth","domain","clientID","clientId","redirectUri","callbackUrl","audience","responseType","scope","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","logout","console","error","alert","errorDescription","login","bind","isExpired","getAccessToken","getIdToken","renewSession","state","userId","localStorage","getItem","authorize","setItem","expiresAt","expiresIn","Date","getTime","idTokenPayload","sub","replace","setState","interval","setInterval","shouldRenewSession","isLoggedIn","window","navigator","onLine","checkSession","log","error_description","removeItem","return_to","location","origin","createDb","db","props","pathname","startsWith","test","hash","isCallbackPage","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport auth0 from 'auth0-js';\n\nimport history from '../utils/history';\nimport { AUTH_CONFIG } from './auth0-variables';\nimport App from './App';\nimport Login from './Login';\n\nimport * as Database from './Database';\nimport Loading from './Loading'; // We will use this to show a loader while RxDB initializes\n\nexport default class AppWrapper extends React.Component {\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    redirectUri: AUTH_CONFIG.callbackUrl,\n    audience: `https://${AUTH_CONFIG.domain}/userinfo`,\n    responseType: 'token id_token',\n    scope: 'openid profile'\n  });\n\n  constructor() {\n    super();\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isExpired = this.isExpired.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n\n    this.state = {\n      idToken: null,\n      userId: localStorage.getItem(\"userId\"),\n    };\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n      } else if (err) {\n        this.logout();\n        console.error(err);\n        alert(`Error: ${err.error} - ${err.errorDescription}`);\n      }\n    });\n  };\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n    this.userId = authResult.idTokenPayload.sub;\n\n    localStorage.setItem('userId', this.userId);\n\n    // navigate to the home route\n    history.replace('/');\n    this.setState({\n      idToken: authResult.idToken,\n      userId: this.userId,\n    });\n  }\n\n  renewSession() {\n    const interval = setInterval(() => {\n      const shouldRenewSession = this.isLoggedIn &&\n        (!this.idToken || this.isExpired());\n  \n      if (window.navigator.onLine && shouldRenewSession) {\n        this.auth0.checkSession({}, (err, authResult) => {\n          if (authResult && authResult.accessToken && authResult.idToken) {\n            this.setSession(authResult);\n          } else if (err) {\n            this.logout();\n            console.log(err);\n            alert(`Could not get token (${err.error}: ${err.error_description}).`);\n          }\n        });\n      }\n    }, 5000);\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    history.replace('/');\n    this.setState({\n      idToken: null\n    });\n  }\n\n  isExpired() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() > expiresAt;\n  }\n\n  async componentDidMount() {\n    const db = await Database.createDb()\n        this.setState({ db });\n    // If this is a callback URL then do the right things\n    const location = this.props.location;\n    if (location && location.pathname.startsWith('/callback') && /access_token|id_token|error/.test(location.hash)) {\n      this.handleAuthentication();\n      return;\n    }\n\n    if (this.isLoggedIn()) {\n      this.renewSession();\n      return;\n    }\n  }\n\n  isLoggedIn() {\n    return localStorage.getItem('isLoggedIn') === 'true'\n  }\n\n  render() {\n    const location = this.props.location;\n    const isCallbackPage = location && location.pathname.startsWith('/callback');\n    if (!this.isLoggedIn() && !isCallbackPage) {\n        return (<Login loginHandler={this.login} />);\n    }\n    // Add this if statement\n    if(!this.state.db) {\n        return <Loading />\n    }\n    // Pass db in props to the App\n    return (<App\n        auth={{ userId: this.userId }}\n        logoutHandler={this.logout}\n        db={this.state.db}\n    />);\n}\n}\n"]},"metadata":{},"sourceType":"module"}