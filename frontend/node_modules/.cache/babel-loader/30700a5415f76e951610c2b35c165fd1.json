{"ast":null,"code":"var reIpv4FirstPass = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nvar reSubnetString = /\\/\\d{1,3}(?=%|$)/;\nvar reForwardSlash = /\\//;\nvar reZone = /%.*$/;\nvar reBadCharacters = /([^0-9a-f:/%])/i;\nvar reBadAddress = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/i;\n\nfunction validate4(input) {\n  if (!reIpv4FirstPass.test(input)) return false;\n  var parts = input.split('.');\n  if (parts.length !== 4) return false;\n  if (parts[0][0] === '0' && parts[0].length > 1) return false;\n  if (parts[1][0] === '0' && parts[1].length > 1) return false;\n  if (parts[2][0] === '0' && parts[2].length > 1) return false;\n  if (parts[3][0] === '0' && parts[3].length > 1) return false;\n  var n0 = Number(parts[0]);\n  var n1 = Number(parts[1]);\n  var n2 = Number(parts[2]);\n  var n3 = Number(parts[3]);\n  return n0 >= 0 && n0 < 256 && n1 >= 0 && n1 < 256 && n2 >= 0 && n2 < 256 && n3 >= 0 && n3 < 256;\n}\n\nfunction validate6(input) {\n  var withoutSubnet = input.replace(reSubnetString, '');\n  var hasSubnet = input.length !== withoutSubnet.length; // FIXME: this should probably be an option in the future\n\n  if (hasSubnet) return false;\n\n  if (!hasSubnet) {\n    if (reForwardSlash.test(input)) return false;\n  }\n\n  var withoutZone = withoutSubnet.replace(reZone, '');\n  var lastPartSeparator = withoutZone.lastIndexOf(':');\n  if (lastPartSeparator === -1) return false;\n  var lastPart = withoutZone.substring(lastPartSeparator + 1);\n  var hasV4Part = validate4(lastPart);\n  var address = hasV4Part ? withoutZone.substring(0, lastPartSeparator + 1) + '1234:5678' : withoutZone;\n  if (reBadCharacters.test(address)) return false;\n  if (reBadAddress.test(address)) return false;\n  var halves = address.split('::');\n  if (halves.length > 2) return false;\n\n  if (halves.length === 2) {\n    var first = halves[0] === '' ? [] : halves[0].split(':');\n    var last = halves[1] === '' ? [] : halves[1].split(':');\n    var remainingLength = 8 - (first.length + last.length);\n    if (remainingLength <= 0) return false;\n  } else {\n    if (address.split(':').length !== 8) return false;\n  }\n\n  return true;\n}\n\nfunction validate(input) {\n  return validate4(input) || validate6(input);\n}\n\nmodule.exports = function validator(options) {\n  if (!options) options = {};\n  if (options.version === 4) return validate4;\n  if (options.version === 6) return validate6;\n  if (options.version == null) return validate;\n  throw new Error('Unknown version: ' + options.version);\n};\n\nmodule.exports['__all_regexes__'] = [reIpv4FirstPass, reSubnetString, reForwardSlash, reZone, reBadCharacters, reBadAddress];","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/is-my-ip-valid/index.js"],"names":["reIpv4FirstPass","reSubnetString","reForwardSlash","reZone","reBadCharacters","reBadAddress","validate4","input","test","parts","split","length","n0","Number","n1","n2","n3","validate6","withoutSubnet","replace","hasSubnet","withoutZone","lastPartSeparator","lastIndexOf","lastPart","substring","hasV4Part","address","halves","first","last","remainingLength","validate","module","exports","validator","options","version","Error"],"mappings":"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","sourcesContent":["var reIpv4FirstPass = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/\n\nvar reSubnetString = /\\/\\d{1,3}(?=%|$)/\nvar reForwardSlash = /\\//\nvar reZone = /%.*$/\nvar reBadCharacters = /([^0-9a-f:/%])/i\nvar reBadAddress = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/i\n\nfunction validate4 (input) {\n  if (!(reIpv4FirstPass.test(input))) return false\n\n  var parts = input.split('.')\n\n  if (parts.length !== 4) return false\n\n  if (parts[0][0] === '0' && parts[0].length > 1) return false\n  if (parts[1][0] === '0' && parts[1].length > 1) return false\n  if (parts[2][0] === '0' && parts[2].length > 1) return false\n  if (parts[3][0] === '0' && parts[3].length > 1) return false\n\n  var n0 = Number(parts[0])\n  var n1 = Number(parts[1])\n  var n2 = Number(parts[2])\n  var n3 = Number(parts[3])\n\n  return (n0 >= 0 && n0 < 256 && n1 >= 0 && n1 < 256 && n2 >= 0 && n2 < 256 && n3 >= 0 && n3 < 256)\n}\n\nfunction validate6 (input) {\n  var withoutSubnet = input.replace(reSubnetString, '')\n  var hasSubnet = (input.length !== withoutSubnet.length)\n\n  // FIXME: this should probably be an option in the future\n  if (hasSubnet) return false\n\n  if (!hasSubnet) {\n    if (reForwardSlash.test(input)) return false\n  }\n\n  var withoutZone = withoutSubnet.replace(reZone, '')\n  var lastPartSeparator = withoutZone.lastIndexOf(':')\n\n  if (lastPartSeparator === -1) return false\n\n  var lastPart = withoutZone.substring(lastPartSeparator + 1)\n  var hasV4Part = validate4(lastPart)\n  var address = (hasV4Part ? withoutZone.substring(0, lastPartSeparator + 1) + '1234:5678' : withoutZone)\n\n  if (reBadCharacters.test(address)) return false\n  if (reBadAddress.test(address)) return false\n\n  var halves = address.split('::')\n\n  if (halves.length > 2) return false\n\n  if (halves.length === 2) {\n    var first = (halves[0] === '' ? [] : halves[0].split(':'))\n    var last = (halves[1] === '' ? [] : halves[1].split(':'))\n    var remainingLength = 8 - (first.length + last.length)\n\n    if (remainingLength <= 0) return false\n  } else {\n    if (address.split(':').length !== 8) return false\n  }\n\n  return true\n}\n\nfunction validate (input) {\n  return validate4(input) || validate6(input)\n}\n\nmodule.exports = function validator (options) {\n  if (!options) options = {}\n\n  if (options.version === 4) return validate4\n  if (options.version === 6) return validate6\n  if (options.version == null) return validate\n\n  throw new Error('Unknown version: ' + options.version)\n}\n\nmodule.exports['__all_regexes__'] = [\n  reIpv4FirstPass,\n  reSubnetString,\n  reForwardSlash,\n  reZone,\n  reBadCharacters,\n  reBadAddress\n]\n"]},"metadata":{},"sourceType":"script"}