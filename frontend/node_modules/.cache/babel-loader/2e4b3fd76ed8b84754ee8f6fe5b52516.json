{"ast":null,"code":"import objectPath from 'object-path';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { clone, trimDots, getHeightOfRevision, toPromise, pluginMissing } from './util';\nimport { createChangeEvent } from './rx-change-event';\nimport { newRxError, newRxTypeError } from './rx-error';\nimport { runPluginHooks } from './hooks';\nexport var basePrototype = {\n  get _data() {\n    /**\n     * Might be undefined when vuejs-devtools are used\n     * @link https://github.com/pubkey/rxdb/issues/1126\n     */\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._dataSync$.getValue();\n  },\n\n  get primaryPath() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this.collection.schema.primaryPath;\n  },\n\n  get primary() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._data[this.primaryPath];\n  },\n\n  get revision() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._data._rev;\n  },\n\n  get deleted$() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._deleted$.asObservable();\n  },\n\n  get deleted() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._deleted$.getValue();\n  },\n\n  /**\n   * returns the observable which emits the plain-data of this document\n   */\n  get $() {\n    return this._dataSync$.asObservable();\n  },\n\n  _handleChangeEvent: function _handleChangeEvent(changeEvent) {\n    if (changeEvent.data.doc !== this.primary) return; // ensure that new _rev is higher then current\n\n    var newRevNr = getHeightOfRevision(changeEvent.data.v._rev);\n    var currentRevNr = getHeightOfRevision(this._data._rev);\n    if (currentRevNr > newRevNr) return;\n\n    switch (changeEvent.data.op) {\n      case 'INSERT':\n        break;\n\n      case 'UPDATE':\n        var newData = changeEvent.data.v;\n\n        this._dataSync$.next(newData);\n\n        break;\n\n      case 'REMOVE':\n        // remove from docCache to assure new upserted RxDocuments will be a new instance\n        this.collection._docCache[\"delete\"](this.primary);\n\n        this._deleted$.next(true);\n\n        break;\n    }\n  },\n\n  /**\n   * emits the changeEvent to the upper instance (RxCollection)\n   */\n  $emit: function $emit(changeEvent) {\n    return this.collection.$emit(changeEvent);\n  },\n\n  /**\n   * returns observable of the value of the given path\n   */\n  get$: function get$(path) {\n    if (path.includes('.item.')) {\n      throw newRxError('DOC1', {\n        path: path\n      });\n    }\n\n    if (path === this.primaryPath) throw newRxError('DOC2'); // final fields cannot be modified and so also not observed\n\n    if (this.collection.schema.finalFields.includes(path)) {\n      throw newRxError('DOC3', {\n        path: path\n      });\n    }\n\n    var schemaObj = this.collection.schema.getSchemaByObjectPath(path);\n\n    if (!schemaObj) {\n      throw newRxError('DOC4', {\n        path: path\n      });\n    }\n\n    return this._dataSync$.pipe(map(function (data) {\n      return objectPath.get(data, path);\n    }), distinctUntilChanged());\n  },\n\n  /**\n   * populate the given path\n   */\n  populate: function populate(path) {\n    var schemaObj = this.collection.schema.getSchemaByObjectPath(path);\n    var value = this.get(path);\n\n    if (!value) {\n      return Promise.resolve(null);\n    }\n\n    if (!schemaObj) {\n      throw newRxError('DOC5', {\n        path: path\n      });\n    }\n\n    if (!schemaObj.ref) {\n      throw newRxError('DOC6', {\n        path: path,\n        schemaObj: schemaObj\n      });\n    }\n\n    var refCollection = this.collection.database.collections[schemaObj.ref];\n\n    if (!refCollection) {\n      throw newRxError('DOC7', {\n        ref: schemaObj.ref,\n        path: path,\n        schemaObj: schemaObj\n      });\n    }\n\n    if (schemaObj.type === 'array') return Promise.all(value.map(function (id) {\n      return refCollection.findOne(id).exec();\n    }));else return refCollection.findOne(value).exec();\n  },\n\n  /**\n   * get data by objectPath\n   */\n  get: function get(objPath) {\n    if (!this._data) return undefined;\n    var valueObj = objectPath.get(this._data, objPath);\n    valueObj = clone(valueObj); // direct return if array or non-object\n\n    if (typeof valueObj !== 'object' || Array.isArray(valueObj)) return valueObj;\n    defineGetterSetter(this.collection.schema, valueObj, objPath, this);\n    return valueObj;\n  },\n  toJSON: function toJSON() {\n    var withRevAndAttachments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var data = clone(this._data);\n\n    if (!withRevAndAttachments) {\n      delete data._rev;\n      delete data._attachments;\n    }\n\n    return data;\n  },\n\n  /**\n   * set data by objectPath\n   * This can only be called on temporary documents\n   */\n  set: function set(objPath, value) {\n    // setters can only be used on temporary documents\n    if (!this._isTemporary) {\n      throw newRxTypeError('DOC16', {\n        objPath: objPath,\n        value: value\n      });\n    }\n\n    if (typeof objPath !== 'string') {\n      throw newRxTypeError('DOC15', {\n        objPath: objPath,\n        value: value\n      });\n    } // if equal, do nothing\n\n\n    if (Object.is(this.get(objPath), value)) return; // throw if nested without root-object\n\n    var pathEls = objPath.split('.');\n    pathEls.pop();\n    var rootPath = pathEls.join('.');\n\n    if (typeof objectPath.get(this._data, rootPath) === 'undefined') {\n      throw newRxError('DOC10', {\n        childpath: objPath,\n        rootPath: rootPath\n      });\n    }\n\n    objectPath.set(this._data, objPath, value);\n    return this;\n  },\n\n  /**\n   * updates document\n   * @overwritten by plugin (optinal)\n   * @param updateObj mongodb-like syntax\n   */\n  update: function update(_updateObj) {\n    throw pluginMissing('update');\n  },\n  putAttachment: function putAttachment() {\n    throw pluginMissing('attachments');\n  },\n  getAttachment: function getAttachment() {\n    throw pluginMissing('attachments');\n  },\n  allAttachments: function allAttachments() {\n    throw pluginMissing('attachments');\n  },\n\n  get allAttachments$() {\n    throw pluginMissing('attachments');\n  },\n\n  /**\n   * runs an atomic update over the document\n   * @param fun that takes the document-data and returns a new data-object\n   */\n  atomicUpdate: function atomicUpdate(fun) {\n    var _this2 = this;\n\n    this._atomicQueue = this._atomicQueue.then(function () {\n      var oldData = _this2._dataSync$.getValue();\n\n      var ret = fun(clone(_this2._dataSync$.getValue()), _this2);\n      var retPromise = toPromise(ret);\n      return retPromise.then(function (newData) {\n        return _this2._saveData(newData, oldData);\n      });\n    });\n    return this._atomicQueue.then(function () {\n      return _this2;\n    });\n  },\n  atomicSet: function atomicSet(key, value) {\n    return this.atomicUpdate(function (docData) {\n      objectPath.set(docData, key, value);\n      return docData;\n    });\n  },\n\n  /**\n   * saves the new document-data\n   * and handles the events\n   */\n  _saveData: function _saveData(newData, oldData) {\n    var _this3 = this;\n\n    newData = newData; // deleted documents cannot be changed\n\n    if (this._deleted$.getValue()) {\n      throw newRxError('DOC11', {\n        id: this.primary,\n        document: this\n      });\n    } // ensure modifications are ok\n\n\n    this.collection.schema.validateChange(oldData, newData);\n    return this.collection._runHooks('pre', 'save', newData, this).then(function () {\n      _this3.collection.schema.validate(newData);\n\n      return _this3.collection._pouchPut(newData);\n    }).then(function (ret) {\n      if (!ret.ok) {\n        throw newRxError('DOC12', {\n          data: ret\n        });\n      }\n\n      newData._rev = ret.rev; // emit event\n\n      var changeEvent = createChangeEvent('UPDATE', _this3.collection.database, _this3.collection, _this3, newData);\n\n      _this3.$emit(changeEvent);\n\n      return _this3.collection._runHooks('post', 'save', newData, _this3);\n    });\n  },\n\n  /**\n   * saves the temporary document and makes a non-temporary out of it\n   * Saving a temporary doc is basically the same as RxCollection.insert()\n   * @return false if nothing to save\n   */\n  save: function save() {\n    var _this4 = this; // .save() cannot be called on non-temporary-documents\n\n\n    if (!this._isTemporary) {\n      throw newRxError('DOC17', {\n        id: this.primary,\n        document: this\n      });\n    }\n\n    return this.collection.insert(this).then(function () {\n      _this4._isTemporary = false;\n\n      _this4.collection._docCache.set(_this4.primary, _this4); // internal events\n\n\n      _this4._dataSync$.next(_this4._data);\n\n      return true;\n    });\n  },\n\n  /**\n   * remove the document,\n   * this not not equal to a pouchdb.remove(),\n   * instead we keep the values and only set _deleted: true\n   */\n  remove: function remove() {\n    var _this5 = this;\n\n    if (this.deleted) {\n      return Promise.reject(newRxError('DOC13', {\n        document: this,\n        id: this.primary\n      }));\n    }\n\n    var deletedData = clone(this._data);\n    return this.collection._runHooks('pre', 'remove', deletedData, this).then(function () {\n      deletedData._deleted = true;\n      /**\n       * because pouch.remove will also empty the object,\n       * we set _deleted: true and use pouch.put\n       */\n\n      return _this5.collection._pouchPut(deletedData);\n    }).then(function () {\n      _this5.$emit(createChangeEvent('REMOVE', _this5.collection.database, _this5.collection, _this5, _this5._data));\n\n      return _this5.collection._runHooks('post', 'remove', deletedData, _this5);\n    }).then(function () {\n      return _this5;\n    });\n  },\n  destroy: function destroy() {\n    throw newRxError('DOC14');\n  }\n};\nexport function createRxDocumentConstructor() {\n  var proto = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : basePrototype;\n\n  var constructor = function RxDocumentConstructor(collection, jsonData) {\n    this.collection = collection; // if true, this is a temporary document\n\n    this._isTemporary = false; // assume that this is always equal to the doc-data in the database\n\n    this._dataSync$ = new BehaviorSubject(jsonData);\n    this._deleted$ = new BehaviorSubject(false);\n    this._atomicQueue = Promise.resolve();\n    /**\n     * because of the prototype-merge,\n     * we can not use the native instanceof operator\n     */\n\n    this.isInstanceOfRxDocument = true;\n  };\n\n  constructor.prototype = proto;\n  return constructor;\n}\nvar pseudoConstructor = createRxDocumentConstructor(basePrototype);\nvar pseudoRxDocument = new pseudoConstructor();\nexport function defineGetterSetter(schema, valueObj) {\n  var objPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var thisObj = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (valueObj === null) return;\n  var pathProperties = schema.getSchemaByObjectPath(objPath);\n  if (typeof pathProperties === 'undefined') return;\n  if (pathProperties.properties) pathProperties = pathProperties.properties;\n  Object.keys(pathProperties).forEach(function (key) {\n    var fullPath = trimDots(objPath + '.' + key); // getter - value\n\n    valueObj.__defineGetter__(key, function () {\n      var _this = thisObj ? thisObj : this;\n\n      if (!_this.get || typeof _this.get !== 'function') {\n        /**\n         * When an object gets added to the state of a vuejs-component,\n         * it happens that this getter is called with another scope.\n         * To prevent errors, we have to return undefined in this case\n         */\n        return undefined;\n      }\n\n      var ret = _this.get(fullPath);\n\n      return ret;\n    }); // getter - observable$\n\n\n    Object.defineProperty(valueObj, key + '$', {\n      get: function get() {\n        var _this = thisObj ? thisObj : this;\n\n        return _this.get$(fullPath);\n      },\n      enumerable: false,\n      configurable: false\n    }); // getter - populate_\n\n    Object.defineProperty(valueObj, key + '_', {\n      get: function get() {\n        var _this = thisObj ? thisObj : this;\n\n        return _this.populate(fullPath);\n      },\n      enumerable: false,\n      configurable: false\n    }); // setter - value\n\n    valueObj.__defineSetter__(key, function (val) {\n      var _this = thisObj ? thisObj : this;\n\n      return _this.set(fullPath, val);\n    });\n  });\n}\nexport function createWithConstructor(constructor, collection, jsonData) {\n  if (jsonData[collection.schema.primaryPath] && jsonData[collection.schema.primaryPath].startsWith('_design')) return null;\n  var doc = new constructor(collection, jsonData);\n  runPluginHooks('createRxDocument', doc);\n  return doc;\n}\n/**\n * returns all possible properties of a RxDocument\n */\n\nvar _properties;\n\nexport function properties() {\n  if (!_properties) {\n    var reserved = ['deleted', 'synced'];\n    var ownProperties = Object.getOwnPropertyNames(pseudoRxDocument);\n    var prototypeProperties = Object.getOwnPropertyNames(basePrototype);\n    _properties = [].concat(ownProperties, prototypeProperties, reserved);\n  }\n\n  return _properties;\n}\nexport function isInstanceOf(obj) {\n  if (typeof obj === 'undefined') return false;\n  return !!obj.isInstanceOfRxDocument;\n}\nexport default {\n  createWithConstructor: createWithConstructor,\n  properties: properties,\n  createRxDocumentConstructor: createRxDocumentConstructor,\n  basePrototype: basePrototype,\n  isInstanceOf: isInstanceOf\n};","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/rx-document.js"],"names":["objectPath","BehaviorSubject","distinctUntilChanged","map","clone","trimDots","getHeightOfRevision","toPromise","pluginMissing","createChangeEvent","newRxError","newRxTypeError","runPluginHooks","basePrototype","_data","isInstanceOfRxDocument","undefined","_dataSync$","getValue","primaryPath","collection","schema","primary","revision","_rev","deleted$","_deleted$","asObservable","deleted","$","_handleChangeEvent","changeEvent","data","doc","newRevNr","v","currentRevNr","op","newData","next","_docCache","$emit","get$","path","includes","finalFields","schemaObj","getSchemaByObjectPath","pipe","get","populate","value","Promise","resolve","ref","refCollection","database","collections","type","all","id","findOne","exec","objPath","valueObj","Array","isArray","defineGetterSetter","toJSON","withRevAndAttachments","arguments","length","_attachments","set","_isTemporary","Object","is","pathEls","split","pop","rootPath","join","childpath","update","_updateObj","putAttachment","getAttachment","allAttachments","allAttachments$","atomicUpdate","fun","_this2","_atomicQueue","then","oldData","ret","retPromise","_saveData","atomicSet","key","docData","_this3","document","validateChange","_runHooks","validate","_pouchPut","ok","rev","save","_this4","insert","remove","_this5","reject","deletedData","_deleted","destroy","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","jsonData","prototype","pseudoConstructor","pseudoRxDocument","thisObj","pathProperties","properties","keys","forEach","fullPath","__defineGetter__","_this","defineProperty","enumerable","configurable","__defineSetter__","val","createWithConstructor","startsWith","_properties","reserved","ownProperties","getOwnPropertyNames","prototypeProperties","concat","isInstanceOf","obj"],"mappings":"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","sourcesContent":["import objectPath from 'object-path';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { clone, trimDots, getHeightOfRevision, toPromise, pluginMissing } from './util';\nimport { createChangeEvent } from './rx-change-event';\nimport { newRxError, newRxTypeError } from './rx-error';\nimport { runPluginHooks } from './hooks';\nexport var basePrototype = {\n  get _data() {\n    /**\n     * Might be undefined when vuejs-devtools are used\n     * @link https://github.com/pubkey/rxdb/issues/1126\n     */\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._dataSync$.getValue();\n  },\n\n  get primaryPath() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this.collection.schema.primaryPath;\n  },\n\n  get primary() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._data[this.primaryPath];\n  },\n\n  get revision() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._data._rev;\n  },\n\n  get deleted$() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._deleted$.asObservable();\n  },\n\n  get deleted() {\n    if (!this.isInstanceOfRxDocument) return undefined;\n    return this._deleted$.getValue();\n  },\n\n  /**\n   * returns the observable which emits the plain-data of this document\n   */\n  get $() {\n    return this._dataSync$.asObservable();\n  },\n\n  _handleChangeEvent: function _handleChangeEvent(changeEvent) {\n    if (changeEvent.data.doc !== this.primary) return; // ensure that new _rev is higher then current\n\n    var newRevNr = getHeightOfRevision(changeEvent.data.v._rev);\n    var currentRevNr = getHeightOfRevision(this._data._rev);\n    if (currentRevNr > newRevNr) return;\n\n    switch (changeEvent.data.op) {\n      case 'INSERT':\n        break;\n\n      case 'UPDATE':\n        var newData = changeEvent.data.v;\n\n        this._dataSync$.next(newData);\n\n        break;\n\n      case 'REMOVE':\n        // remove from docCache to assure new upserted RxDocuments will be a new instance\n        this.collection._docCache[\"delete\"](this.primary);\n\n        this._deleted$.next(true);\n\n        break;\n    }\n  },\n\n  /**\n   * emits the changeEvent to the upper instance (RxCollection)\n   */\n  $emit: function $emit(changeEvent) {\n    return this.collection.$emit(changeEvent);\n  },\n\n  /**\n   * returns observable of the value of the given path\n   */\n  get$: function get$(path) {\n    if (path.includes('.item.')) {\n      throw newRxError('DOC1', {\n        path: path\n      });\n    }\n\n    if (path === this.primaryPath) throw newRxError('DOC2'); // final fields cannot be modified and so also not observed\n\n    if (this.collection.schema.finalFields.includes(path)) {\n      throw newRxError('DOC3', {\n        path: path\n      });\n    }\n\n    var schemaObj = this.collection.schema.getSchemaByObjectPath(path);\n\n    if (!schemaObj) {\n      throw newRxError('DOC4', {\n        path: path\n      });\n    }\n\n    return this._dataSync$.pipe(map(function (data) {\n      return objectPath.get(data, path);\n    }), distinctUntilChanged());\n  },\n\n  /**\n   * populate the given path\n   */\n  populate: function populate(path) {\n    var schemaObj = this.collection.schema.getSchemaByObjectPath(path);\n    var value = this.get(path);\n\n    if (!value) {\n      return Promise.resolve(null);\n    }\n\n    if (!schemaObj) {\n      throw newRxError('DOC5', {\n        path: path\n      });\n    }\n\n    if (!schemaObj.ref) {\n      throw newRxError('DOC6', {\n        path: path,\n        schemaObj: schemaObj\n      });\n    }\n\n    var refCollection = this.collection.database.collections[schemaObj.ref];\n\n    if (!refCollection) {\n      throw newRxError('DOC7', {\n        ref: schemaObj.ref,\n        path: path,\n        schemaObj: schemaObj\n      });\n    }\n\n    if (schemaObj.type === 'array') return Promise.all(value.map(function (id) {\n      return refCollection.findOne(id).exec();\n    }));else return refCollection.findOne(value).exec();\n  },\n\n  /**\n   * get data by objectPath\n   */\n  get: function get(objPath) {\n    if (!this._data) return undefined;\n    var valueObj = objectPath.get(this._data, objPath);\n    valueObj = clone(valueObj); // direct return if array or non-object\n\n    if (typeof valueObj !== 'object' || Array.isArray(valueObj)) return valueObj;\n    defineGetterSetter(this.collection.schema, valueObj, objPath, this);\n    return valueObj;\n  },\n  toJSON: function toJSON() {\n    var withRevAndAttachments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var data = clone(this._data);\n\n    if (!withRevAndAttachments) {\n      delete data._rev;\n      delete data._attachments;\n    }\n\n    return data;\n  },\n\n  /**\n   * set data by objectPath\n   * This can only be called on temporary documents\n   */\n  set: function set(objPath, value) {\n    // setters can only be used on temporary documents\n    if (!this._isTemporary) {\n      throw newRxTypeError('DOC16', {\n        objPath: objPath,\n        value: value\n      });\n    }\n\n    if (typeof objPath !== 'string') {\n      throw newRxTypeError('DOC15', {\n        objPath: objPath,\n        value: value\n      });\n    } // if equal, do nothing\n\n\n    if (Object.is(this.get(objPath), value)) return; // throw if nested without root-object\n\n    var pathEls = objPath.split('.');\n    pathEls.pop();\n    var rootPath = pathEls.join('.');\n\n    if (typeof objectPath.get(this._data, rootPath) === 'undefined') {\n      throw newRxError('DOC10', {\n        childpath: objPath,\n        rootPath: rootPath\n      });\n    }\n\n    objectPath.set(this._data, objPath, value);\n    return this;\n  },\n\n  /**\n   * updates document\n   * @overwritten by plugin (optinal)\n   * @param updateObj mongodb-like syntax\n   */\n  update: function update(_updateObj) {\n    throw pluginMissing('update');\n  },\n  putAttachment: function putAttachment() {\n    throw pluginMissing('attachments');\n  },\n  getAttachment: function getAttachment() {\n    throw pluginMissing('attachments');\n  },\n  allAttachments: function allAttachments() {\n    throw pluginMissing('attachments');\n  },\n\n  get allAttachments$() {\n    throw pluginMissing('attachments');\n  },\n\n  /**\n   * runs an atomic update over the document\n   * @param fun that takes the document-data and returns a new data-object\n   */\n  atomicUpdate: function atomicUpdate(fun) {\n    var _this2 = this;\n\n    this._atomicQueue = this._atomicQueue.then(function () {\n      var oldData = _this2._dataSync$.getValue();\n\n      var ret = fun(clone(_this2._dataSync$.getValue()), _this2);\n      var retPromise = toPromise(ret);\n      return retPromise.then(function (newData) {\n        return _this2._saveData(newData, oldData);\n      });\n    });\n    return this._atomicQueue.then(function () {\n      return _this2;\n    });\n  },\n  atomicSet: function atomicSet(key, value) {\n    return this.atomicUpdate(function (docData) {\n      objectPath.set(docData, key, value);\n      return docData;\n    });\n  },\n\n  /**\n   * saves the new document-data\n   * and handles the events\n   */\n  _saveData: function _saveData(newData, oldData) {\n    var _this3 = this;\n\n    newData = newData; // deleted documents cannot be changed\n\n    if (this._deleted$.getValue()) {\n      throw newRxError('DOC11', {\n        id: this.primary,\n        document: this\n      });\n    } // ensure modifications are ok\n\n\n    this.collection.schema.validateChange(oldData, newData);\n    return this.collection._runHooks('pre', 'save', newData, this).then(function () {\n      _this3.collection.schema.validate(newData);\n\n      return _this3.collection._pouchPut(newData);\n    }).then(function (ret) {\n      if (!ret.ok) {\n        throw newRxError('DOC12', {\n          data: ret\n        });\n      }\n\n      newData._rev = ret.rev; // emit event\n\n      var changeEvent = createChangeEvent('UPDATE', _this3.collection.database, _this3.collection, _this3, newData);\n\n      _this3.$emit(changeEvent);\n\n      return _this3.collection._runHooks('post', 'save', newData, _this3);\n    });\n  },\n\n  /**\n   * saves the temporary document and makes a non-temporary out of it\n   * Saving a temporary doc is basically the same as RxCollection.insert()\n   * @return false if nothing to save\n   */\n  save: function save() {\n    var _this4 = this;\n\n    // .save() cannot be called on non-temporary-documents\n    if (!this._isTemporary) {\n      throw newRxError('DOC17', {\n        id: this.primary,\n        document: this\n      });\n    }\n\n    return this.collection.insert(this).then(function () {\n      _this4._isTemporary = false;\n\n      _this4.collection._docCache.set(_this4.primary, _this4); // internal events\n\n\n      _this4._dataSync$.next(_this4._data);\n\n      return true;\n    });\n  },\n\n  /**\n   * remove the document,\n   * this not not equal to a pouchdb.remove(),\n   * instead we keep the values and only set _deleted: true\n   */\n  remove: function remove() {\n    var _this5 = this;\n\n    if (this.deleted) {\n      return Promise.reject(newRxError('DOC13', {\n        document: this,\n        id: this.primary\n      }));\n    }\n\n    var deletedData = clone(this._data);\n    return this.collection._runHooks('pre', 'remove', deletedData, this).then(function () {\n      deletedData._deleted = true;\n      /**\n       * because pouch.remove will also empty the object,\n       * we set _deleted: true and use pouch.put\n       */\n\n      return _this5.collection._pouchPut(deletedData);\n    }).then(function () {\n      _this5.$emit(createChangeEvent('REMOVE', _this5.collection.database, _this5.collection, _this5, _this5._data));\n\n      return _this5.collection._runHooks('post', 'remove', deletedData, _this5);\n    }).then(function () {\n      return _this5;\n    });\n  },\n  destroy: function destroy() {\n    throw newRxError('DOC14');\n  }\n};\nexport function createRxDocumentConstructor() {\n  var proto = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : basePrototype;\n\n  var constructor = function RxDocumentConstructor(collection, jsonData) {\n    this.collection = collection; // if true, this is a temporary document\n\n    this._isTemporary = false; // assume that this is always equal to the doc-data in the database\n\n    this._dataSync$ = new BehaviorSubject(jsonData);\n    this._deleted$ = new BehaviorSubject(false);\n    this._atomicQueue = Promise.resolve();\n    /**\n     * because of the prototype-merge,\n     * we can not use the native instanceof operator\n     */\n\n    this.isInstanceOfRxDocument = true;\n  };\n\n  constructor.prototype = proto;\n  return constructor;\n}\nvar pseudoConstructor = createRxDocumentConstructor(basePrototype);\nvar pseudoRxDocument = new pseudoConstructor();\nexport function defineGetterSetter(schema, valueObj) {\n  var objPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var thisObj = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (valueObj === null) return;\n  var pathProperties = schema.getSchemaByObjectPath(objPath);\n  if (typeof pathProperties === 'undefined') return;\n  if (pathProperties.properties) pathProperties = pathProperties.properties;\n  Object.keys(pathProperties).forEach(function (key) {\n    var fullPath = trimDots(objPath + '.' + key); // getter - value\n\n    valueObj.__defineGetter__(key, function () {\n      var _this = thisObj ? thisObj : this;\n\n      if (!_this.get || typeof _this.get !== 'function') {\n        /**\n         * When an object gets added to the state of a vuejs-component,\n         * it happens that this getter is called with another scope.\n         * To prevent errors, we have to return undefined in this case\n         */\n        return undefined;\n      }\n\n      var ret = _this.get(fullPath);\n\n      return ret;\n    }); // getter - observable$\n\n\n    Object.defineProperty(valueObj, key + '$', {\n      get: function get() {\n        var _this = thisObj ? thisObj : this;\n\n        return _this.get$(fullPath);\n      },\n      enumerable: false,\n      configurable: false\n    }); // getter - populate_\n\n    Object.defineProperty(valueObj, key + '_', {\n      get: function get() {\n        var _this = thisObj ? thisObj : this;\n\n        return _this.populate(fullPath);\n      },\n      enumerable: false,\n      configurable: false\n    }); // setter - value\n\n    valueObj.__defineSetter__(key, function (val) {\n      var _this = thisObj ? thisObj : this;\n\n      return _this.set(fullPath, val);\n    });\n  });\n}\nexport function createWithConstructor(constructor, collection, jsonData) {\n  if (jsonData[collection.schema.primaryPath] && jsonData[collection.schema.primaryPath].startsWith('_design')) return null;\n  var doc = new constructor(collection, jsonData);\n  runPluginHooks('createRxDocument', doc);\n  return doc;\n}\n/**\n * returns all possible properties of a RxDocument\n */\n\nvar _properties;\n\nexport function properties() {\n  if (!_properties) {\n    var reserved = ['deleted', 'synced'];\n    var ownProperties = Object.getOwnPropertyNames(pseudoRxDocument);\n    var prototypeProperties = Object.getOwnPropertyNames(basePrototype);\n    _properties = [].concat(ownProperties, prototypeProperties, reserved);\n  }\n\n  return _properties;\n}\nexport function isInstanceOf(obj) {\n  if (typeof obj === 'undefined') return false;\n  return !!obj.isInstanceOfRxDocument;\n}\nexport default {\n  createWithConstructor: createWithConstructor,\n  properties: properties,\n  createRxDocumentConstructor: createRxDocumentConstructor,\n  basePrototype: basePrototype,\n  isInstanceOf: isInstanceOf\n};\n//# sourceMappingURL=rx-document.js.map"]},"metadata":{},"sourceType":"module"}