{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { hash } from '../../util';\nexport var PLUGIN_IDENT = 'rxdbreplicationgraphql'; // does nothing\n\nexport var DEFAULT_MODIFIER = function DEFAULT_MODIFIER(d) {\n  return d;\n};\n/**\n * pouchdb will throw if a document is not found\n * this instead return null\n */\n\nexport function getDocFromPouchOrNull(collection, id) {\n  return collection.pouch.get(id, {\n    open_revs: true\n  }).then(function (docData) {\n    return docData;\n  })[\"catch\"](function () {\n    return null;\n  });\n}\n/**\n *\n * @return  revisions and docs, indexed by id\n */\n\nexport function getDocsWithRevisionsFromPouch(_x, _x2) {\n  return _getDocsWithRevisionsFromPouch.apply(this, arguments);\n}\n\nfunction _getDocsWithRevisionsFromPouch() {\n  _getDocsWithRevisionsFromPouch = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(collection, docIds) {\n    var pouch, allDocs, docsSearch, bulkGetDocs, ret;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(docIds.length === 0)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 2:\n            // optimisation shortcut\n            pouch = collection.pouch;\n            _context.next = 5;\n            return pouch.allDocs({\n              keys: docIds,\n              revs: true,\n              deleted: 'ok'\n            });\n\n          case 5:\n            allDocs = _context.sent; // console.log('allDocs:');\n            // console.log(JSON.stringify(allDocs, null, 2));\n\n            docsSearch = allDocs.rows.filter(function (row) {\n              return !row.error;\n            }).map(function (row) {\n              return {\n                id: row.id,\n                rev: row.value.rev\n              };\n            });\n\n            if (!(docsSearch.length === 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 9:\n            _context.next = 11;\n            return pouch.bulkGet({\n              docs: docsSearch,\n              revs: true,\n              latest: true\n            });\n\n          case 11:\n            bulkGetDocs = _context.sent; // console.log('bulkGetDocs:');\n            // console.log(JSON.stringify(bulkGetDocs, null, 2));\n\n            ret = {};\n            bulkGetDocs.results.forEach(function (result) {\n              var doc = result.docs[0].ok;\n              var data = {\n                revisions: doc._revisions,\n                deleted: !!doc._deleted,\n                doc: doc\n              };\n              ret[result.id] = data;\n            });\n            return _context.abrupt(\"return\", ret);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getDocsWithRevisionsFromPouch.apply(this, arguments);\n}\n\nexport function createRevisionForPulledDocument(endpointHash, doc) {\n  var dataHash = hash(doc);\n  var ret = dataHash.substring(0, 8) + endpointHash.substring(0, 8) + PLUGIN_IDENT;\n  return ret;\n}\nexport function wasRevisionfromPullReplication(endpointHash, revision) {\n  var ending = endpointHash.substring(0, 8) + PLUGIN_IDENT;\n  var ret = revision.endsWith(ending);\n  return ret;\n}","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/plugins/replication-graphql/helper.js"],"names":["_regeneratorRuntime","_asyncToGenerator","hash","PLUGIN_IDENT","DEFAULT_MODIFIER","d","getDocFromPouchOrNull","collection","id","pouch","get","open_revs","then","docData","getDocsWithRevisionsFromPouch","_x","_x2","_getDocsWithRevisionsFromPouch","apply","arguments","mark","_callee","docIds","allDocs","docsSearch","bulkGetDocs","ret","wrap","_callee$","_context","prev","next","length","abrupt","keys","revs","deleted","sent","rows","filter","row","error","map","rev","value","bulkGet","docs","latest","results","forEach","result","doc","ok","data","revisions","_revisions","_deleted","stop","createRevisionForPulledDocument","endpointHash","dataHash","substring","wasRevisionfromPullReplication","revision","ending","endsWith"],"mappings":"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","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { hash } from '../../util';\nexport var PLUGIN_IDENT = 'rxdbreplicationgraphql'; // does nothing\n\nexport var DEFAULT_MODIFIER = function DEFAULT_MODIFIER(d) {\n  return d;\n};\n/**\n * pouchdb will throw if a document is not found\n * this instead return null\n */\n\nexport function getDocFromPouchOrNull(collection, id) {\n  return collection.pouch.get(id, {\n    open_revs: true\n  }).then(function (docData) {\n    return docData;\n  })[\"catch\"](function () {\n    return null;\n  });\n}\n/**\n *\n * @return  revisions and docs, indexed by id\n */\n\nexport function getDocsWithRevisionsFromPouch(_x, _x2) {\n  return _getDocsWithRevisionsFromPouch.apply(this, arguments);\n}\n\nfunction _getDocsWithRevisionsFromPouch() {\n  _getDocsWithRevisionsFromPouch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(collection, docIds) {\n    var pouch, allDocs, docsSearch, bulkGetDocs, ret;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(docIds.length === 0)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 2:\n            // optimisation shortcut\n            pouch = collection.pouch;\n            _context.next = 5;\n            return pouch.allDocs({\n              keys: docIds,\n              revs: true,\n              deleted: 'ok'\n            });\n\n          case 5:\n            allDocs = _context.sent;\n            // console.log('allDocs:');\n            // console.log(JSON.stringify(allDocs, null, 2));\n            docsSearch = allDocs.rows.filter(function (row) {\n              return !row.error;\n            }).map(function (row) {\n              return {\n                id: row.id,\n                rev: row.value.rev\n              };\n            });\n\n            if (!(docsSearch.length === 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 9:\n            _context.next = 11;\n            return pouch.bulkGet({\n              docs: docsSearch,\n              revs: true,\n              latest: true\n            });\n\n          case 11:\n            bulkGetDocs = _context.sent;\n            // console.log('bulkGetDocs:');\n            // console.log(JSON.stringify(bulkGetDocs, null, 2));\n            ret = {};\n            bulkGetDocs.results.forEach(function (result) {\n              var doc = result.docs[0].ok;\n              var data = {\n                revisions: doc._revisions,\n                deleted: !!doc._deleted,\n                doc: doc\n              };\n              ret[result.id] = data;\n            });\n            return _context.abrupt(\"return\", ret);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getDocsWithRevisionsFromPouch.apply(this, arguments);\n}\n\nexport function createRevisionForPulledDocument(endpointHash, doc) {\n  var dataHash = hash(doc);\n  var ret = dataHash.substring(0, 8) + endpointHash.substring(0, 8) + PLUGIN_IDENT;\n  return ret;\n}\nexport function wasRevisionfromPullReplication(endpointHash, revision) {\n  var ending = endpointHash.substring(0, 8) + PLUGIN_IDENT;\n  var ret = revision.endsWith(ending);\n  return ret;\n}\n//# sourceMappingURL=helper.js.map"]},"metadata":{},"sourceType":"module"}