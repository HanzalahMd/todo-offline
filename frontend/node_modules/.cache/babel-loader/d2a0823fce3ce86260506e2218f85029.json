{"ast":null,"code":"/**\n * the query-cache makes sure that on every query-state, exactly one instance can exist\n * if you use the same mango-query more then once, it will only search the database once.\n */\nexport var QueryCache =\n/*#__PURE__*/\nfunction () {\n  function QueryCache() {\n    this.subs = [];\n    this._map = new Map();\n  }\n  /**\n   * check if an equal query is in the cache,\n   * if true, return the cached one,\n   * if false, save the given one and return it\n   */\n\n\n  var _proto = QueryCache.prototype;\n\n  _proto.getByQuery = function getByQuery(query) {\n    var stringRep = query.toString();\n    if (!this._map.has(stringRep)) this._map.set(stringRep, query);\n    return this._map.get(stringRep);\n  };\n\n  _proto.destroy = function destroy() {\n    this.subs.forEach(function (sub) {\n      return sub.unsubscribe();\n    });\n    this._map = new Map();\n  };\n\n  return QueryCache;\n}();\nexport function createQueryCache() {\n  return new QueryCache();\n}","map":{"version":3,"sources":["/Users/Hanzalah/Desktop/github/todo-offline/rxdb-hasura-demo/node_modules/rxdb/dist/es/query-cache.js"],"names":["QueryCache","subs","_map","Map","_proto","prototype","getByQuery","query","stringRep","toString","has","set","get","destroy","forEach","sub","unsubscribe","createQueryCache"],"mappings":"AAAA;;;;AAIA,OAAO,IAAIA,UAAU;AAAG;AAAa,YAAY;AAC/C,WAASA,UAAT,GAAsB;AACpB,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACD;AACD;;;;;;;AAOA,MAAIC,MAAM,GAAGJ,UAAU,CAACK,SAAxB;;AAEAD,EAAAA,MAAM,CAACE,UAAP,GAAoB,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAC7C,QAAIC,SAAS,GAAGD,KAAK,CAACE,QAAN,EAAhB;AACA,QAAI,CAAC,KAAKP,IAAL,CAAUQ,GAAV,CAAcF,SAAd,CAAL,EAA+B,KAAKN,IAAL,CAAUS,GAAV,CAAcH,SAAd,EAAyBD,KAAzB;AAC/B,WAAO,KAAKL,IAAL,CAAUU,GAAV,CAAcJ,SAAd,CAAP;AACD,GAJD;;AAMAJ,EAAAA,MAAM,CAACS,OAAP,GAAiB,SAASA,OAAT,GAAmB;AAClC,SAAKZ,IAAL,CAAUa,OAAV,CAAkB,UAAUC,GAAV,EAAe;AAC/B,aAAOA,GAAG,CAACC,WAAJ,EAAP;AACD,KAFD;AAGA,SAAKd,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACD,GALD;;AAOA,SAAOH,UAAP;AACD,CA5BoC,EAA9B;AA6BP,OAAO,SAASiB,gBAAT,GAA4B;AACjC,SAAO,IAAIjB,UAAJ,EAAP;AACD","sourcesContent":["/**\n * the query-cache makes sure that on every query-state, exactly one instance can exist\n * if you use the same mango-query more then once, it will only search the database once.\n */\nexport var QueryCache = /*#__PURE__*/function () {\n  function QueryCache() {\n    this.subs = [];\n    this._map = new Map();\n  }\n  /**\n   * check if an equal query is in the cache,\n   * if true, return the cached one,\n   * if false, save the given one and return it\n   */\n\n\n  var _proto = QueryCache.prototype;\n\n  _proto.getByQuery = function getByQuery(query) {\n    var stringRep = query.toString();\n    if (!this._map.has(stringRep)) this._map.set(stringRep, query);\n    return this._map.get(stringRep);\n  };\n\n  _proto.destroy = function destroy() {\n    this.subs.forEach(function (sub) {\n      return sub.unsubscribe();\n    });\n    this._map = new Map();\n  };\n\n  return QueryCache;\n}();\nexport function createQueryCache() {\n  return new QueryCache();\n}\n//# sourceMappingURL=query-cache.js.map"]},"metadata":{},"sourceType":"module"}